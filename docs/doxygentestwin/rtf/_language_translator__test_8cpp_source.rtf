{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LanguageTranslator_test.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/LanguageTranslator_test.cpp}
{\xe \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/LanguageTranslator_test.cpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAAK}{\bkmkend AAAAAAAAAK}
00001 \par
{\bkmkstart AAAAAAAAAM}{\bkmkend AAAAAAAAAM}
00005 \par
{\bkmkstart AAAAAAAAAN}{\bkmkend AAAAAAAAAN}
00006 {\cf21 #include <gtest/gtest.h>}\par
{\bkmkstart AAAAAAAAAV}{\bkmkend AAAAAAAAAV}
00007 {\cf21 #include "../src/LanguageTranslator/header/LanguageTranslator.h"}\par
{\bkmkstart AAAAAAAABA}{\bkmkend AAAAAAAABA}
00008 \par
{\bkmkstart AAAAAAAABB}{\bkmkend AAAAAAAABB}
00009 {\cf17 using namespace }Coruh::LanguageTranslator;\par
{\bkmkstart AAAAAAAABG}{\bkmkend AAAAAAAABG}
00010 \par
{\bkmkstart AAAAAAAABH}{\bkmkend AAAAAAAABH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 00011}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
 : {\cf17 public} ::testing::Test \{\par
{\bkmkstart AAAAAAAABL}{\bkmkend AAAAAAAABL}
00012 {\cf17 protected}:\par
{\bkmkstart AAAAAAAABP}{\bkmkend AAAAAAAABP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 00013}}}
     {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 SetUp}}}
(){\cf17  override }\{\par
{\bkmkstart AAAAAAAABT}{\bkmkend AAAAAAAABT}
00014         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 app}}}
 = {\cf17 new} LanguageTranslatorApp();\par
{\bkmkstart AAAAAAAABY}{\bkmkend AAAAAAAABY}
00015     \}\par
{\bkmkstart AAAAAAAABZ}{\bkmkend AAAAAAAABZ}
00016     \par
{\bkmkstart AAAAAAAACC}{\bkmkend AAAAAAAACC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 00017}}}
     {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 TearDown}}}
(){\cf17  override }\{\par
{\bkmkstart AAAAAAAACF}{\bkmkend AAAAAAAACF}
00018         {\cf17 delete} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 app}}}
;\par
{\bkmkstart AAAAAAAACG}{\bkmkend AAAAAAAACG}
00019     \}\par
{\bkmkstart AAAAAAAACH}{\bkmkend AAAAAAAACH}
00020     \par
{\bkmkstart AAAAAAAACI}{\bkmkend AAAAAAAACI}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 00021}}}
     LanguageTranslatorApp* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 app}}}
;\par
{\bkmkstart AAAAAAAACK}{\bkmkend AAAAAAAACK}
00022 \};\par
{\bkmkstart AAAAAAAACL}{\bkmkend AAAAAAAACL}
00023 \par
{\bkmkstart AAAAAAAACO}{\bkmkend AAAAAAAACO}
00024 {\cf20 // Basic Translation Tests}\par
{\bkmkstart AAAAAAAACU}{\bkmkend AAAAAAAACU}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 00025}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, BasicWordTranslation) \{\par
{\bkmkstart AAAAAAAASF}{\bkmkend AAAAAAAASF}
00026     EXPECT_EQ(app->translateText({\cf22 "hello"}), {\cf22 "merhaba"});\par
{\bkmkstart AAAAAAAASO}{\bkmkend AAAAAAAASO}
00027     EXPECT_EQ(app->translateText({\cf22 "world"}), {\cf22 "dünya"});\par
{\bkmkstart AAAAAAAASV}{\bkmkend AAAAAAAASV}
00028     EXPECT_EQ(app->translateText({\cf22 "good"}), {\cf22 "iyi"});\par
{\bkmkstart AAAAAAAASY}{\bkmkend AAAAAAAASY}
00029     EXPECT_EQ(app->translateText({\cf22 "water"}), {\cf22 "su"});\par
{\bkmkstart AAAAAAAATB}{\bkmkend AAAAAAAATB}
00030     EXPECT_EQ(app->translateText({\cf22 "house"}), {\cf22 "ev"});\par
{\bkmkstart AAAAAAAATF}{\bkmkend AAAAAAAATF}
00031 \}\par
{\bkmkstart AAAAAAAATH}{\bkmkend AAAAAAAATH}
00032 \par
{\bkmkstart AAAAAAAATJ}{\bkmkend AAAAAAAATJ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATK" }{}}{\fldrslt {\cs37\ul\cf2 00033}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, PhraseTranslation) \{\par
{\bkmkstart AAAAAAAATR}{\bkmkend AAAAAAAATR}
00034     EXPECT_EQ(app->translateText({\cf22 "good morning"}), {\cf22 "günaydın"});\par
{\bkmkstart AAAAAAAAVN}{\bkmkend AAAAAAAAVN}
00035     EXPECT_EQ(app->translateText({\cf22 "thank you"}), {\cf22 "teşekkür ederim"});\par
{\bkmkstart AAAAAAAAWD}{\bkmkend AAAAAAAAWD}
00036     EXPECT_EQ(app->translateText({\cf22 "how are you"}), {\cf22 "nasılsın"});\par
{\bkmkstart AAAAAAAAWI}{\bkmkend AAAAAAAAWI}
00037     EXPECT_EQ(app->translateText({\cf22 "nice to meet you"}), {\cf22 "tanıştığımıza memnun oldum"});\par
{\bkmkstart AAAAAAAAWL}{\bkmkend AAAAAAAAWL}
00038 \}\par
{\bkmkstart AAAAAAAAWN}{\bkmkend AAAAAAAAWN}
00039 \par
{\bkmkstart AAAAAAAAWT}{\bkmkend AAAAAAAAWT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWU" }{}}{\fldrslt {\cs37\ul\cf2 00040}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, UnknownWordHandling) \{\par
{\bkmkstart AAAAAAAAXF}{\bkmkend AAAAAAAAXF}
00041     {\cf20 // Unknown words should return as-is}\par
{\bkmkstart AAAAAAAAXJ}{\bkmkend AAAAAAAAXJ}
00042     EXPECT_EQ(app->translateText({\cf22 "unknownword"}), {\cf22 "unknownword"});\par
{\bkmkstart AAAAAAAAXO}{\bkmkend AAAAAAAAXO}
00043     EXPECT_EQ(app->translateText({\cf22 "xyz123"}), {\cf22 "xyz123"});\par
{\bkmkstart AAAAAAAAXS}{\bkmkend AAAAAAAAXS}
00044     EXPECT_EQ(app->translateText({\cf22 ""}), {\cf22 ""});\par
{\bkmkstart AAAAAAAAXY}{\bkmkend AAAAAAAAXY}
00045 \}\par
{\bkmkstart AAAAAAAAYA}{\bkmkend AAAAAAAAYA}
00046 \par
{\bkmkstart AAAAAAAAYC}{\bkmkend AAAAAAAAYC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 00047}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, MixedKnownUnknownWords) \{\par
{\bkmkstart AAAAAAAAYJ}{\bkmkend AAAAAAAAYJ}
00048     {\cf20 // Mixed sentence with known and unknown words}\par
{\bkmkstart AAAAAAAAYK}{\bkmkend AAAAAAAAYK}
00049     std::string result = app->translateText({\cf22 "hello unknownword world"});\par
{\bkmkstart AAAAAAAAYO}{\bkmkend AAAAAAAAYO}
00050     EXPECT_TRUE(result.find({\cf22 "merhaba"}) != std::string::npos);\par
{\bkmkstart AAAAAAAAYU}{\bkmkend AAAAAAAAYU}
00051     EXPECT_TRUE(result.find({\cf22 "unknownword"}) != std::string::npos);\par
{\bkmkstart AAAAAAAAZP}{\bkmkend AAAAAAAAZP}
00052     EXPECT_TRUE(result.find({\cf22 "dünya"}) != std::string::npos);\par
{\bkmkstart AAAAAAAAZR}{\bkmkend AAAAAAAAZR}
00053 \}\par
{\bkmkstart AAAAAAAAZT}{\bkmkend AAAAAAAAZT}
00054 \par
{\bkmkstart AAAAAAAAZU}{\bkmkend AAAAAAAAZU}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZV" }{}}{\fldrslt {\cs37\ul\cf2 00055}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, SameLanguageTranslation) \{\par
{\bkmkstart AAAAAAAAZZ}{\bkmkend AAAAAAAAZZ}
00056     {\cf20 // When source and target are same, return original text}\par
{\bkmkstart AAAAAAABAA}{\bkmkend AAAAAAABAA}
00057     app->setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAABAC}{\bkmkend AAAAAAABAC}
00058     app->setTargetLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAABAE}{\bkmkend AAAAAAABAE}
00059     EXPECT_EQ(app->translateText({\cf22 "hello"}), {\cf22 "hello"});\par
{\bkmkstart AAAAAAABAH}{\bkmkend AAAAAAABAH}
00060     EXPECT_EQ(app->translateText({\cf22 "world"}), {\cf22 "world"});\par
{\bkmkstart AAAAAAABAI}{\bkmkend AAAAAAABAI}
00061 \}\par
{\bkmkstart AAAAAAABAJ}{\bkmkend AAAAAAABAJ}
00062 \par
{\bkmkstart AAAAAAABAK}{\bkmkend AAAAAAABAK}
00063 {\cf20 // Language Management Tests}\par
{\bkmkstart AAAAAAABAM}{\bkmkend AAAAAAABAM}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAN" }{}}{\fldrslt {\cs37\ul\cf2 00064}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, LanguageSwitching) \{\par
{\bkmkstart AAAAAAABAQ}{\bkmkend AAAAAAABAQ}
00065     app->setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAABAS}{\bkmkend AAAAAAABAS}
00066     app->setTargetLanguage({\cf22 "Turkish"});\par
{\bkmkstart AAAAAAABAV}{\bkmkend AAAAAAABAV}
00067     EXPECT_EQ(app->translateText({\cf22 "hello"}), {\cf22 "merhaba"});\par
{\bkmkstart AAAAAAABAX}{\bkmkend AAAAAAABAX}
00068     \par
{\bkmkstart AAAAAAABAZ}{\bkmkend AAAAAAABAZ}
00069     app->setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAABBB}{\bkmkend AAAAAAABBB}
00070     app->setTargetLanguage({\cf22 "Spanish"});\par
{\bkmkstart AAAAAAABBE}{\bkmkend AAAAAAABBE}
00071     EXPECT_EQ(app->translateText({\cf22 "hello"}), {\cf22 "hola"});\par
{\bkmkstart AAAAAAABBH}{\bkmkend AAAAAAABBH}
00072 \}\par
{\bkmkstart AAAAAAABBI}{\bkmkend AAAAAAABBI}
00073 \par
{\bkmkstart AAAAAAABBK}{\bkmkend AAAAAAABBK}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBL" }{}}{\fldrslt {\cs37\ul\cf2 00074}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, GetSupportedLanguages) \{\par
{\bkmkstart AAAAAAABBO}{\bkmkend AAAAAAABBO}
00075     {\cf17 auto} languages = app->getSupportedLanguages();\par
{\bkmkstart AAAAAAABBR}{\bkmkend AAAAAAABBR}
00076     EXPECT_FALSE(languages.empty());\par
{\bkmkstart AAAAAAABBW}{\bkmkend AAAAAAABBW}
00077     EXPECT_TRUE(std::find(languages.begin(), languages.end(), {\cf22 "English"}) != languages.end());\par
{\bkmkstart AAAAAAABCA}{\bkmkend AAAAAAABCA}
00078     EXPECT_TRUE(std::find(languages.begin(), languages.end(), {\cf22 "Turkish"}) != languages.end());\par
{\bkmkstart AAAAAAABCH}{\bkmkend AAAAAAABCH}
00079 \}\par
{\bkmkstart AAAAAAABCK}{\bkmkend AAAAAAABCK}
00080 \par
{\bkmkstart AAAAAAABCM}{\bkmkend AAAAAAABCM}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCN" }{}}{\fldrslt {\cs37\ul\cf2 00081}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, AddNewLanguage) \{\par
{\bkmkstart AAAAAAABCU}{\bkmkend AAAAAAABCU}
00082     app->addLanguage({\cf22 "Japanese"});\par
{\bkmkstart AAAAAAABCY}{\bkmkend AAAAAAABCY}
00083     {\cf17 auto} languages = app->getSupportedLanguages();\par
{\bkmkstart AAAAAAABDA}{\bkmkend AAAAAAABDA}
00084     EXPECT_TRUE(std::find(languages.begin(), languages.end(), {\cf22 "Japanese"}) != languages.end());\par
{\bkmkstart AAAAAAABDC}{\bkmkend AAAAAAABDC}
00085 \}\par
{\bkmkstart AAAAAAABDE}{\bkmkend AAAAAAABDE}
00086 \par
{\bkmkstart AAAAAAABDG}{\bkmkend AAAAAAABDG}
00087 {\cf20 // User Management Tests}\par
{\bkmkstart AAAAAAABDH}{\bkmkend AAAAAAABDH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 00088}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, UserLogin) \{\par
{\bkmkstart AAAAAAABDK}{\bkmkend AAAAAAABDK}
00089     EXPECT_FALSE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAABDM}{\bkmkend AAAAAAABDM}
00090     \par
{\bkmkstart AAAAAAABDO}{\bkmkend AAAAAAABDO}
00091     {\cf18 bool} loginResult = app->login({\cf22 "admin"}, {\cf22 "admin"});\par
{\bkmkstart AAAAAAABDP}{\bkmkend AAAAAAABDP}
00092     EXPECT_TRUE(loginResult);\par
{\bkmkstart AAAAAAABDR}{\bkmkend AAAAAAABDR}
00093     EXPECT_TRUE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAABDS}{\bkmkend AAAAAAABDS}
00094 \}\par
{\bkmkstart AAAAAAABDU}{\bkmkend AAAAAAABDU}
00095 \par
{\bkmkstart AAAAAAABDV}{\bkmkend AAAAAAABDV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDW" }{}}{\fldrslt {\cs37\ul\cf2 00096}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, UserLogout) \{\par
{\bkmkstart AAAAAAABDZ}{\bkmkend AAAAAAABDZ}
00097     app->login({\cf22 "admin"}, {\cf22 "admin"});\par
{\bkmkstart AAAAAAABEA}{\bkmkend AAAAAAABEA}
00098     EXPECT_TRUE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAABEB}{\bkmkend AAAAAAABEB}
00099     \par
{\bkmkstart AAAAAAABEC}{\bkmkend AAAAAAABEC}
00100     app->logout();\par
{\bkmkstart AAAAAAABED}{\bkmkend AAAAAAABED}
00101     EXPECT_FALSE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAABEE}{\bkmkend AAAAAAABEE}
00102 \}\par
{\bkmkstart AAAAAAABEF}{\bkmkend AAAAAAABEF}
00103 \par
{\bkmkstart AAAAAAABEH}{\bkmkend AAAAAAABEH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 00104}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, InvalidLogin) \{\par
{\bkmkstart AAAAAAABEK}{\bkmkend AAAAAAABEK}
00105     {\cf18 bool} loginResult = app->login({\cf22 "wronguser"}, {\cf22 "wrongpass"});\par
{\bkmkstart AAAAAAABEM}{\bkmkend AAAAAAABEM}
00106     EXPECT_FALSE(loginResult);\par
{\bkmkstart AAAAAAABEO}{\bkmkend AAAAAAABEO}
00107     EXPECT_FALSE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAABER}{\bkmkend AAAAAAABER}
00108 \}\par
{\bkmkstart AAAAAAABES}{\bkmkend AAAAAAABES}
00109 \par
{\bkmkstart AAAAAAABEU}{\bkmkend AAAAAAABEU}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEV" }{}}{\fldrslt {\cs37\ul\cf2 00110}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, UserRegistration) \{\par
{\bkmkstart AAAAAAABEX}{\bkmkend AAAAAAABEX}
00111     {\cf18 bool} registerResult = app->registerUser({\cf22 "newuser"}, {\cf22 "newpass"});\par
{\bkmkstart AAAAAAABEZ}{\bkmkend AAAAAAABEZ}
00112     EXPECT_TRUE(registerResult);\par
{\bkmkstart AAAAAAABFB}{\bkmkend AAAAAAABFB}
00113 \}\par
{\bkmkstart AAAAAAABFD}{\bkmkend AAAAAAABFD}
00114 \par
{\bkmkstart AAAAAAABFE}{\bkmkend AAAAAAABFE}
00115 {\cf20 // Individual Translation Function Tests}\par
{\bkmkstart AAAAAAABFH}{\bkmkend AAAAAAABFH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFJ" }{}}{\fldrslt {\cs37\ul\cf2 00116}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, TranslateWordFunction) \{\par
{\bkmkstart AAAAAAABFK}{\bkmkend AAAAAAABFK}
00117     EXPECT_EQ(app->translateWord({\cf22 "hello"}), {\cf22 "merhaba"});\par
{\bkmkstart AAAAAAABFL}{\bkmkend AAAAAAABFL}
00118     EXPECT_EQ(app->translateWord({\cf22 "world"}), {\cf22 "dünya"});\par
{\bkmkstart AAAAAAABFM}{\bkmkend AAAAAAABFM}
00119     EXPECT_EQ(app->translateWord({\cf22 "unknown"}), {\cf22 "unknown"});\par
{\bkmkstart AAAAAAABFP}{\bkmkend AAAAAAABFP}
00120 \}\par
{\bkmkstart AAAAAAABFQ}{\bkmkend AAAAAAABFQ}
00121 \par
{\bkmkstart AAAAAAABFR}{\bkmkend AAAAAAABFR}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFS" }{}}{\fldrslt {\cs37\ul\cf2 00122}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, TranslatePhraseFunction) \{\par
{\bkmkstart AAAAAAABFT}{\bkmkend AAAAAAABFT}
00123     EXPECT_EQ(app->translatePhrase({\cf22 "good morning"}), {\cf22 "günaydın"});\par
{\bkmkstart AAAAAAABFU}{\bkmkend AAAAAAABFU}
00124     EXPECT_EQ(app->translatePhrase({\cf22 "thank you"}), {\cf22 "teşekkür ederim"});\par
{\bkmkstart AAAAAAABFV}{\bkmkend AAAAAAABFV}
00125     EXPECT_EQ(app->translatePhrase({\cf22 "unknown phrase"}), {\cf22 "unknown phrase"});\par
{\bkmkstart AAAAAAABFW}{\bkmkend AAAAAAABFW}
00126 \}\par
{\bkmkstart AAAAAAABFX}{\bkmkend AAAAAAABFX}
00127 \par
{\bkmkstart AAAAAAABFY}{\bkmkend AAAAAAABFY}
00128 {\cf20 // API Tests}\par
{\bkmkstart AAAAAAABFZ}{\bkmkend AAAAAAABFZ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGA" }{}}{\fldrslt {\cs37\ul\cf2 00129}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, APIModeToggle) \{\par
{\bkmkstart AAAAAAABGB}{\bkmkend AAAAAAABGB}
00130     {\cf20 // API is not implemented yet, so it should always return false}\par
{\bkmkstart AAAAAAABGC}{\bkmkend AAAAAAABGC}
00131     EXPECT_FALSE(app->isAPIAvailable());\par
{\bkmkstart AAAAAAABGD}{\bkmkend AAAAAAABGD}
00132     \par
{\bkmkstart AAAAAAABGE}{\bkmkend AAAAAAABGE}
00133     app->setAPIMode({\cf17 true});\par
{\bkmkstart AAAAAAABGF}{\bkmkend AAAAAAABGF}
00134     app->setAPIKey({\cf22 "test_key"});\par
{\bkmkstart AAAAAAABGG}{\bkmkend AAAAAAABGG}
00135     {\cf20 // API is not implemented yet, so it should always return false}\par
{\bkmkstart AAAAAAABGH}{\bkmkend AAAAAAABGH}
00136     EXPECT_FALSE(app->isAPIAvailable());\par
{\bkmkstart AAAAAAABGI}{\bkmkend AAAAAAABGI}
00137     \par
{\bkmkstart AAAAAAABGJ}{\bkmkend AAAAAAABGJ}
00138     app->setAPIMode({\cf17 false});\par
{\bkmkstart AAAAAAABGK}{\bkmkend AAAAAAABGK}
00139     EXPECT_FALSE(app->isAPIAvailable());\par
{\bkmkstart AAAAAAABGM}{\bkmkend AAAAAAABGM}
00140 \}\par
{\bkmkstart AAAAAAABGN}{\bkmkend AAAAAAABGN}
00141 \par
{\bkmkstart AAAAAAABGO}{\bkmkend AAAAAAABGO}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGP" }{}}{\fldrslt {\cs37\ul\cf2 00142}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, APIKeyManagement) \{\par
{\bkmkstart AAAAAAABGQ}{\bkmkend AAAAAAABGQ}
00143     app->setAPIKey({\cf22 "test_api_key"});\par
{\bkmkstart AAAAAAABGR}{\bkmkend AAAAAAABGR}
00144     app->setAPIMode({\cf17 true});\par
{\bkmkstart AAAAAAABGS}{\bkmkend AAAAAAABGS}
00145     {\cf20 // API is not implemented yet, so it should always return false}\par
{\bkmkstart AAAAAAABGT}{\bkmkend AAAAAAABGT}
00146     EXPECT_FALSE(app->isAPIAvailable());\par
{\bkmkstart AAAAAAABGU}{\bkmkend AAAAAAABGU}
00147     \par
{\bkmkstart AAAAAAABGV}{\bkmkend AAAAAAABGV}
00148     app->setAPIKey({\cf22 ""});\par
{\bkmkstart AAAAAAABGW}{\bkmkend AAAAAAABGW}
00149     EXPECT_FALSE(app->isAPIAvailable());\par
{\bkmkstart AAAAAAABGX}{\bkmkend AAAAAAABGX}
00150 \}\par
{\bkmkstart AAAAAAABGZ}{\bkmkend AAAAAAABGZ}
00151 \par
{\bkmkstart AAAAAAABHA}{\bkmkend AAAAAAABHA}
00152 {\cf20 // Edge Cases and Error Handling}\par
{\bkmkstart AAAAAAABHB}{\bkmkend AAAAAAABHB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHC" }{}}{\fldrslt {\cs37\ul\cf2 00153}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, EmptyStringTranslation) \{\par
{\bkmkstart AAAAAAABHD}{\bkmkend AAAAAAABHD}
00154     EXPECT_EQ(app->translateText({\cf22 ""}), {\cf22 ""});\par
{\bkmkstart AAAAAAABHE}{\bkmkend AAAAAAABHE}
00155     EXPECT_EQ(app->translateWord({\cf22 ""}), {\cf22 ""});\par
{\bkmkstart AAAAAAABHF}{\bkmkend AAAAAAABHF}
00156     EXPECT_EQ(app->translatePhrase({\cf22 ""}), {\cf22 ""});\par
{\bkmkstart AAAAAAABHG}{\bkmkend AAAAAAABHG}
00157 \}\par
{\bkmkstart AAAAAAABHH}{\bkmkend AAAAAAABHH}
00158 \par
{\bkmkstart AAAAAAABHJ}{\bkmkend AAAAAAABHJ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 00159}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, WhitespaceHandling) \{\par
{\bkmkstart AAAAAAABHN}{\bkmkend AAAAAAABHN}
00160     {\cf20 // Test whitespace handling - current implementation doesn't trim}\par
{\bkmkstart AAAAAAABHO}{\bkmkend AAAAAAABHO}
00161     EXPECT_EQ(app->translateText({\cf22 "  hello  "}), {\cf22 "merhaba "});\par
{\bkmkstart AAAAAAABHP}{\bkmkend AAAAAAABHP}
00162     EXPECT_EQ(app->translateText({\cf22 "   "}), {\cf22 "   "});\par
{\bkmkstart AAAAAAABHR}{\bkmkend AAAAAAABHR}
00163 \}\par
{\bkmkstart AAAAAAABHS}{\bkmkend AAAAAAABHS}
00164 \par
{\bkmkstart AAAAAAABHT}{\bkmkend AAAAAAABHT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHU" }{}}{\fldrslt {\cs37\ul\cf2 00165}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, SpecialCharacters) \{\par
{\bkmkstart AAAAAAABHZ}{\bkmkend AAAAAAABHZ}
00166     {\cf20 // Test special characters - current implementation doesn't handle punctuation}\par
{\bkmkstart AAAAAAABIB}{\bkmkend AAAAAAABIB}
00167     EXPECT_EQ(app->translateText({\cf22 "hello!"}), {\cf22 "hello!"});\par
{\bkmkstart AAAAAAABIE}{\bkmkend AAAAAAABIE}
00168     EXPECT_EQ(app->translateText({\cf22 "hello, world"}), {\cf22 "hello, dünya"});\par
{\bkmkstart AAAAAAABIH}{\bkmkend AAAAAAABIH}
00169     EXPECT_EQ(app->translateText({\cf22 "hello.world"}), {\cf22 "hello.world"});\par
{\bkmkstart AAAAAAABIK}{\bkmkend AAAAAAABIK}
00170 \}\par
{\bkmkstart AAAAAAABIN}{\bkmkend AAAAAAABIN}
00171 \par
{\bkmkstart AAAAAAABIP}{\bkmkend AAAAAAABIP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIQ" }{}}{\fldrslt {\cs37\ul\cf2 00172}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, CaseInsensitiveTranslation) \{\par
{\bkmkstart AAAAAAABIU}{\bkmkend AAAAAAABIU}
00173     {\cf20 // Test case insensitive - current implementation is case sensitive}\par
{\bkmkstart AAAAAAABIX}{\bkmkend AAAAAAABIX}
00174     EXPECT_EQ(app->translateText({\cf22 "HELLO"}), {\cf22 "HELLO"});\par
{\bkmkstart AAAAAAABIZ}{\bkmkend AAAAAAABIZ}
00175     EXPECT_EQ(app->translateText({\cf22 "Hello"}), {\cf22 "Hello"});\par
{\bkmkstart AAAAAAABJA}{\bkmkend AAAAAAABJA}
00176     EXPECT_EQ(app->translateText({\cf22 "hELLo"}), {\cf22 "hELLo"});\par
{\bkmkstart AAAAAAABJE}{\bkmkend AAAAAAABJE}
00177 \}\par
{\bkmkstart AAAAAAABJG}{\bkmkend AAAAAAABJG}
00178 \par
{\bkmkstart AAAAAAABJI}{\bkmkend AAAAAAABJI}
00179 {\cf20 // Data Management Tests}\par
{\bkmkstart AAAAAAABJJ}{\bkmkend AAAAAAABJJ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJK" }{}}{\fldrslt {\cs37\ul\cf2 00180}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, DataInitialization) \{\par
{\bkmkstart AAAAAAABJN}{\bkmkend AAAAAAABJN}
00181     {\cf20 // Test that default data is loaded}\par
{\bkmkstart AAAAAAABJT}{\bkmkend AAAAAAABJT}
00182     EXPECT_EQ(app->translateText({\cf22 "hello"}), {\cf22 "merhaba"});\par
{\bkmkstart AAAAAAABJW}{\bkmkend AAAAAAABJW}
00183     EXPECT_EQ(app->translateText({\cf22 "good morning"}), {\cf22 "günaydın"});\par
{\bkmkstart AAAAAAABJY}{\bkmkend AAAAAAABJY}
00184 \}\par
{\bkmkstart AAAAAAABKA}{\bkmkend AAAAAAABKA}
00185 \par
{\bkmkstart AAAAAAABKC}{\bkmkend AAAAAAABKC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKD" }{}}{\fldrslt {\cs37\ul\cf2 00186}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, DataSaveLoad) \{\par
{\bkmkstart AAAAAAABQU}{\bkmkend AAAAAAABQU}
00187     {\cf20 // These functions should not crash}\par
{\bkmkstart AAAAAAABRA}{\bkmkend AAAAAAABRA}
00188     app->saveData();\par
{\bkmkstart AAAAAAABRF}{\bkmkend AAAAAAABRF}
00189     app->loadData();\par
{\bkmkstart AAAAAAABRH}{\bkmkend AAAAAAABRH}
00190     \par
{\bkmkstart AAAAAAABRI}{\bkmkend AAAAAAABRI}
00191     {\cf20 // Data should still be available after save/load}\par
{\bkmkstart AAAAAAABRK}{\bkmkend AAAAAAABRK}
00192     EXPECT_EQ(app->translateText({\cf22 "hello"}), {\cf22 "merhaba"});\par
{\bkmkstart AAAAAAABRM}{\bkmkend AAAAAAABRM}
00193 \}\par
{\bkmkstart AAAAAAABRN}{\bkmkend AAAAAAABRN}
00194 \par
{\bkmkstart AAAAAAABRO}{\bkmkend AAAAAAABRO}
00195 {\cf20 // Dictionary Management Tests}\par
{\bkmkstart AAAAAAABRR}{\bkmkend AAAAAAABRR}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRS" }{}}{\fldrslt {\cs37\ul\cf2 00196}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, DictionaryFileLoading) \{\par
{\bkmkstart AAAAAAABRZ}{\bkmkend AAAAAAABRZ}
00197     {\cf20 // Test dictionary file loading (file may not exist, should handle gracefully)}\par
{\bkmkstart AAAAAAABSA}{\bkmkend AAAAAAABSA}
00198     {\cf18 bool} result = app->loadDictionaryFromFile({\cf22 "English"}, {\cf22 "Turkish"}, {\cf22 "nonexistent_file.txt"});\par
{\bkmkstart AAAAAAABSF}{\bkmkend AAAAAAABSF}
00199     EXPECT_FALSE(result); {\cf20 // File doesn't exist}\par
{\bkmkstart AAAAAAABSG}{\bkmkend AAAAAAABSG}
00200     \par
{\bkmkstart AAAAAAABSI}{\bkmkend AAAAAAABSI}
00201     {\cf20 // Should still work with default data}\par
{\bkmkstart AAAAAAABSK}{\bkmkend AAAAAAABSK}
00202     EXPECT_EQ(app->translateText({\cf22 "hello"}), {\cf22 "merhaba"});\par
{\bkmkstart AAAAAAABSM}{\bkmkend AAAAAAABSM}
00203 \}\par
{\bkmkstart AAAAAAABSN}{\bkmkend AAAAAAABSN}
00204 \par
{\bkmkstart AAAAAAABSP}{\bkmkend AAAAAAABSP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSQ" }{}}{\fldrslt {\cs37\ul\cf2 00205}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, LoadAllDictionaries) \{\par
{\bkmkstart AAAAAAABSS}{\bkmkend AAAAAAABSS}
00206     {\cf20 // This should not crash even if files don't exist}\par
{\bkmkstart AAAAAAABSV}{\bkmkend AAAAAAABSV}
00207     app->loadAllDictionaries();\par
{\bkmkstart AAAAAAABSX}{\bkmkend AAAAAAABSX}
00208     \par
{\bkmkstart AAAAAAABSY}{\bkmkend AAAAAAABSY}
00209     {\cf20 // Default translations should still work}\par
{\bkmkstart AAAAAAABTA}{\bkmkend AAAAAAABTA}
00210     EXPECT_EQ(app->translateText({\cf22 "hello"}), {\cf22 "merhaba"});\par
{\bkmkstart AAAAAAABTC}{\bkmkend AAAAAAABTC}
00211 \}\par
{\bkmkstart AAAAAAABTD}{\bkmkend AAAAAAABTD}
00212 \par
{\bkmkstart AAAAAAABTF}{\bkmkend AAAAAAABTF}
00213 {\cf20 // Performance and Stress Tests}\par
{\bkmkstart AAAAAAABTI}{\bkmkend AAAAAAABTI}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTJ" }{}}{\fldrslt {\cs37\ul\cf2 00214}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, LongTextTranslation) \{\par
{\bkmkstart AAAAAAABTL}{\bkmkend AAAAAAABTL}
00215     std::string longText = {\cf22 "hello world good morning thank you water food house car book computer phone friend family work"};\par
{\bkmkstart AAAAAAABTO}{\bkmkend AAAAAAABTO}
00216     std::string result = app->translateText(longText);\par
{\bkmkstart AAAAAAABUT}{\bkmkend AAAAAAABUT}
00217     \par
{\bkmkstart AAAAAAABUU}{\bkmkend AAAAAAABUU}
00218     {\cf20 // Should contain translated words (only some words are in dictionary)}\par
{\bkmkstart AAAAAAABUV}{\bkmkend AAAAAAABUV}
00219     EXPECT_TRUE(result.find({\cf22 "merhaba"}) != std::string::npos);\par
{\bkmkstart AAAAAAABUY}{\bkmkend AAAAAAABUY}
00220     EXPECT_TRUE(result.find({\cf22 "dünya"}) != std::string::npos);\par
{\bkmkstart AAAAAAABVA}{\bkmkend AAAAAAABVA}
00221     EXPECT_TRUE(result.find({\cf22 "günaydın"}) != std::string::npos);\par
{\bkmkstart AAAAAAABVD}{\bkmkend AAAAAAABVD}
00222     {\cf20 // Some words should be translated}\par
{\bkmkstart AAAAAAABVF}{\bkmkend AAAAAAABVF}
00223     EXPECT_TRUE(result.find({\cf22 "araba"}) != std::string::npos); {\cf20 // car -> araba}\par
{\bkmkstart AAAAAAABVG}{\bkmkend AAAAAAABVG}
00224     EXPECT_TRUE(result.find({\cf22 "kitap"}) != std::string::npos); {\cf20 // book -> kitap}\par
{\bkmkstart AAAAAAABVK}{\bkmkend AAAAAAABVK}
00225 \}\par
{\bkmkstart AAAAAAABVM}{\bkmkend AAAAAAABVM}
00226 \par
{\bkmkstart AAAAAAABVN}{\bkmkend AAAAAAABVN}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVO" }{}}{\fldrslt {\cs37\ul\cf2 00227}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, RepeatedTranslation) \{\par
{\bkmkstart AAAAAAABVT}{\bkmkend AAAAAAABVT}
00228     {\cf20 // Test multiple translations of same text}\par
{\bkmkstart AAAAAAABVU}{\bkmkend AAAAAAABVU}
00229     {\cf19 for} ({\cf18 int} i = 0; i < 100; ++i) \{\par
{\bkmkstart AAAAAAABVW}{\bkmkend AAAAAAABVW}
00230         EXPECT_EQ(app->translateText({\cf22 "hello"}), {\cf22 "merhaba"});\par
{\bkmkstart AAAAAAABWA}{\bkmkend AAAAAAABWA}
00231     \}\par
{\bkmkstart AAAAAAABWB}{\bkmkend AAAAAAABWB}
00232 \}\par
{\bkmkstart AAAAAAABWC}{\bkmkend AAAAAAABWC}
00233 \par
{\bkmkstart AAAAAAABWD}{\bkmkend AAAAAAABWD}
00234 {\cf20 // Integration Tests}\par
{\bkmkstart AAAAAAABWF}{\bkmkend AAAAAAABWF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWG" }{}}{\fldrslt {\cs37\ul\cf2 00235}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorTest}}}
, FullTranslationWorkflow) \{\par
{\bkmkstart AAAAAAABWH}{\bkmkend AAAAAAABWH}
00236     {\cf20 // Login}\par
{\bkmkstart AAAAAAABWI}{\bkmkend AAAAAAABWI}
00237     app->login({\cf22 "admin"}, {\cf22 "admin"});\par
{\bkmkstart AAAAAAABWL}{\bkmkend AAAAAAABWL}
00238     EXPECT_TRUE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAABWN}{\bkmkend AAAAAAABWN}
00239     \par
{\bkmkstart AAAAAAABWO}{\bkmkend AAAAAAABWO}
00240     {\cf20 // Set languages}\par
{\bkmkstart AAAAAAABWP}{\bkmkend AAAAAAABWP}
00241     app->setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAABWQ}{\bkmkend AAAAAAABWQ}
00242     app->setTargetLanguage({\cf22 "Turkish"});\par
{\bkmkstart AAAAAAABWR}{\bkmkend AAAAAAABWR}
00243     \par
{\bkmkstart AAAAAAABWS}{\bkmkend AAAAAAABWS}
00244     {\cf20 // Translate}\par
{\bkmkstart AAAAAAABWT}{\bkmkend AAAAAAABWT}
00245     EXPECT_EQ(app->translateText({\cf22 "hello world"}), {\cf22 "merhaba dünya"});\par
{\bkmkstart AAAAAAABWU}{\bkmkend AAAAAAABWU}
00246     \par
{\bkmkstart AAAAAAABWV}{\bkmkend AAAAAAABWV}
00247     {\cf20 // Switch to Spanish}\par
{\bkmkstart AAAAAAABWW}{\bkmkend AAAAAAABWW}
00248     app->setTargetLanguage({\cf22 "Spanish"});\par
{\bkmkstart AAAAAAABWX}{\bkmkend AAAAAAABWX}
00249     EXPECT_EQ(app->translateText({\cf22 "hello world"}), {\cf22 "hola mundo"});\par
{\bkmkstart AAAAAAABWY}{\bkmkend AAAAAAABWY}
00250     \par
{\bkmkstart AAAAAAABWZ}{\bkmkend AAAAAAABWZ}
00251     {\cf20 // Logout}\par
{\bkmkstart AAAAAAABXB}{\bkmkend AAAAAAABXB}
00252     app->logout();\par
{\bkmkstart AAAAAAABXC}{\bkmkend AAAAAAABXC}
00253     EXPECT_FALSE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAABXD}{\bkmkend AAAAAAABXD}
00254 \}\par
}
}