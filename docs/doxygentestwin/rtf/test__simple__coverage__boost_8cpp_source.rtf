{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_simple_coverage_boost.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_simple_coverage_boost.cpp}
{\xe \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_simple_coverage_boost.cpp}
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIM" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAABKQ}{\bkmkend AAAAAAABKQ}
00001 \par
{\bkmkstart AAAAAAABKX}{\bkmkend AAAAAAABKX}
00007 \par
{\bkmkstart AAAAAAABKY}{\bkmkend AAAAAAABKY}
00008 {\cf21 #include <gtest/gtest.h>}\par
{\bkmkstart AAAAAAABLQ}{\bkmkend AAAAAAABLQ}
00009 {\cf21 #include <chrono>}\par
{\bkmkstart AAAAAAABME}{\bkmkend AAAAAAABME}
00010 {\cf21 #include <thread>}\par
{\bkmkstart AAAAAAABMG}{\bkmkend AAAAAAABMG}
00011 {\cf21 #include <iostream>}\par
{\bkmkstart AAAAAAABMJ}{\bkmkend AAAAAAABMJ}
00012 \par
{\bkmkstart AAAAAAABML}{\bkmkend AAAAAAABML}
00013 {\cf20 // Include only working headers}\par
{\bkmkstart AAAAAAABMN}{\bkmkend AAAAAAABMN}
00014 {\cf21 #include "../src/SafeChronoCalculator.h"}\par
{\bkmkstart AAAAAAABND}{\bkmkend AAAAAAABND}
00015 {\cf21 #include "../src/LanguageTranslator/header/LanguageTranslator.h"}\par
{\bkmkstart AAAAAAABNM}{\bkmkend AAAAAAABNM}
00016 \par
{\bkmkstart AAAAAAABNN}{\bkmkend AAAAAAABNN}
00017 {\cf17 using namespace }SafeChrono;\par
{\bkmkstart AAAAAAABNS}{\bkmkend AAAAAAABNS}
00018 {\cf17 using namespace }Coruh::LanguageTranslator;\par
{\bkmkstart AAAAAAABNV}{\bkmkend AAAAAAABNV}
00019 \par
{\bkmkstart AAAAAAABNX}{\bkmkend AAAAAAABNX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
 : {\cf17 public} ::testing::Test \{\par
{\bkmkstart AAAAAAABOG}{\bkmkend AAAAAAABOG}
00021 {\cf17 protected}:\par
{\bkmkstart AAAAAAABOH}{\bkmkend AAAAAAABOH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOI" }{}}{\fldrslt {\cs37\ul\cf2 00022}}}
     {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOI" }{}}{\fldrslt {\cs37\ul\cf2 SetUp}}}
(){\cf17  override }\{\par
{\bkmkstart AAAAAAABOL}{\bkmkend AAAAAAABOL}
00023         {\cf20 // Setup for each test}\par
{\bkmkstart AAAAAAABOM}{\bkmkend AAAAAAABOM}
00024     \}\par
{\bkmkstart AAAAAAABOO}{\bkmkend AAAAAAABOO}
00025     \par
{\bkmkstart AAAAAAABOQ}{\bkmkend AAAAAAABOQ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOR" }{}}{\fldrslt {\cs37\ul\cf2 00026}}}
     {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOR" }{}}{\fldrslt {\cs37\ul\cf2 TearDown}}}
(){\cf17  override }\{\par
{\bkmkstart AAAAAAABOU}{\bkmkend AAAAAAABOU}
00027         {\cf20 // Cleanup after each test}\par
{\bkmkstart AAAAAAABOV}{\bkmkend AAAAAAABOV}
00028     \}\par
{\bkmkstart AAAAAAABOW}{\bkmkend AAAAAAABOW}
00029 \};\par
{\bkmkstart AAAAAAABOX}{\bkmkend AAAAAAABOX}
00030 \par
{\bkmkstart AAAAAAABOZ}{\bkmkend AAAAAAABOZ}
00031 {\cf20 // Test SafeChronoCalculator static methods}\par
{\bkmkstart AAAAAAABPA}{\bkmkend AAAAAAABPA}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 00032}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestSafeChronoCalculator) \{\par
{\bkmkstart AAAAAAABUW}{\bkmkend AAAAAAABUW}
00033     {\cf20 // Test safe duration calculation}\par
{\bkmkstart AAAAAAABUX}{\bkmkend AAAAAAABUX}
00034     {\cf17 auto} result = SafeChronoCalculator::safeCalculateDuration(1000, 1000000, 1000000000);\par
{\bkmkstart AAAAAAABUZ}{\bkmkend AAAAAAABUZ}
00035     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABVB}{\bkmkend AAAAAAABVB}
00036     \par
{\bkmkstart AAAAAAABVC}{\bkmkend AAAAAAABVC}
00037     {\cf20 // Test 10MHz calculation}\par
{\bkmkstart AAAAAAABVE}{\bkmkend AAAAAAABVE}
00038     result = SafeChronoCalculator::calculateFor10MHz(1000);\par
{\bkmkstart AAAAAAABVH}{\bkmkend AAAAAAABVH}
00039     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABVI}{\bkmkend AAAAAAABVI}
00040     \par
{\bkmkstart AAAAAAABVJ}{\bkmkend AAAAAAABVJ}
00041     {\cf20 // Test 24MHz calculation}\par
{\bkmkstart AAAAAAABVL}{\bkmkend AAAAAAABVL}
00042     result = SafeChronoCalculator::calculateFor24MHz(1000);\par
{\bkmkstart AAAAAAABVP}{\bkmkend AAAAAAABVP}
00043     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABVQ}{\bkmkend AAAAAAABVQ}
00044     \par
{\bkmkstart AAAAAAABVR}{\bkmkend AAAAAAABVR}
00045     {\cf20 // Test overflow detection}\par
{\bkmkstart AAAAAAABVS}{\bkmkend AAAAAAABVS}
00046     {\cf18 bool} wouldOverflow = SafeChronoCalculator::wouldOverflow(1000, 1000);\par
{\bkmkstart AAAAAAABVV}{\bkmkend AAAAAAABVV}
00047     EXPECT_FALSE(wouldOverflow);\par
{\bkmkstart AAAAAAABVX}{\bkmkend AAAAAAABVX}
00048     \par
{\bkmkstart AAAAAAABVY}{\bkmkend AAAAAAABVY}
00049     {\cf20 // Test with zero values}\par
{\bkmkstart AAAAAAABVZ}{\bkmkend AAAAAAABVZ}
00050     wouldOverflow = SafeChronoCalculator::wouldOverflow(0, 1000);\par
{\bkmkstart AAAAAAABWE}{\bkmkend AAAAAAABWE}
00051     EXPECT_FALSE(wouldOverflow);\par
{\bkmkstart AAAAAAABWJ}{\bkmkend AAAAAAABWJ}
00052     \par
{\bkmkstart AAAAAAABWK}{\bkmkend AAAAAAABWK}
00053     {\cf20 // Test with large values}\par
{\bkmkstart AAAAAAABWM}{\bkmkend AAAAAAABWM}
00054     {\cf18 long} {\cf18 long} largeValue = std::numeric_limits<long long>::max() / 2;\par
{\bkmkstart AAAAAAABXA}{\bkmkend AAAAAAABXA}
00055     wouldOverflow = SafeChronoCalculator::wouldOverflow(largeValue, 3);\par
{\bkmkstart AAAAAAABXE}{\bkmkend AAAAAAABXE}
00056     EXPECT_TRUE(wouldOverflow);\par
{\bkmkstart AAAAAAABXF}{\bkmkend AAAAAAABXF}
00057 \}\par
{\bkmkstart AAAAAAABXG}{\bkmkend AAAAAAABXG}
00058 \par
{\bkmkstart AAAAAAABXH}{\bkmkend AAAAAAABXH}
00059 {\cf20 // Test SafeChronoCalculator error handling}\par
{\bkmkstart AAAAAAABXI}{\bkmkend AAAAAAABXI}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXJ" }{}}{\fldrslt {\cs37\ul\cf2 00060}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestSafeChronoCalculatorErrors) \{\par
{\bkmkstart AAAAAAABXK}{\bkmkend AAAAAAABXK}
00061     {\cf20 // Test invalid frequency}\par
{\bkmkstart AAAAAAABXL}{\bkmkend AAAAAAABXL}
00062     EXPECT_THROW(SafeChronoCalculator::safeCalculateDuration(1000, 0, 1000000000), std::invalid_argument);\par
{\bkmkstart AAAAAAABXM}{\bkmkend AAAAAAABXM}
00063     EXPECT_THROW(SafeChronoCalculator::safeCalculateDuration(1000, -1000, 1000000000), std::invalid_argument);\par
{\bkmkstart AAAAAAABXN}{\bkmkend AAAAAAABXN}
00064     \par
{\bkmkstart AAAAAAABXO}{\bkmkend AAAAAAABXO}
00065     {\cf20 // Test invalid period denominator}\par
{\bkmkstart AAAAAAABXP}{\bkmkend AAAAAAABXP}
00066     EXPECT_THROW(SafeChronoCalculator::safeCalculateDuration(1000, 1000000, 0), std::invalid_argument);\par
{\bkmkstart AAAAAAABXQ}{\bkmkend AAAAAAABXQ}
00067     EXPECT_THROW(SafeChronoCalculator::safeCalculateDuration(1000, 1000000, -1000), std::invalid_argument);\par
{\bkmkstart AAAAAAABXR}{\bkmkend AAAAAAABXR}
00068 \}\par
{\bkmkstart AAAAAAABXS}{\bkmkend AAAAAAABXS}
00069 \par
{\bkmkstart AAAAAAABXT}{\bkmkend AAAAAAABXT}
00070 {\cf20 // Test SafeChronoCalculator edge cases}\par
{\bkmkstart AAAAAAABXU}{\bkmkend AAAAAAABXU}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXV" }{}}{\fldrslt {\cs37\ul\cf2 00071}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestSafeChronoCalculatorEdgeCases) \{\par
{\bkmkstart AAAAAAABXW}{\bkmkend AAAAAAABXW}
00072     {\cf20 // Test with very small values}\par
{\bkmkstart AAAAAAABXX}{\bkmkend AAAAAAABXX}
00073     {\cf17 auto} result = SafeChronoCalculator::safeCalculateDuration(1, 1000000, 1000000000);\par
{\bkmkstart AAAAAAABXY}{\bkmkend AAAAAAABXY}
00074     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABXZ}{\bkmkend AAAAAAABXZ}
00075     \par
{\bkmkstart AAAAAAABYA}{\bkmkend AAAAAAABYA}
00076     {\cf20 // Test with zero counter}\par
{\bkmkstart AAAAAAABYB}{\bkmkend AAAAAAABYB}
00077     result = SafeChronoCalculator::safeCalculateDuration(0, 1000000, 1000000000);\par
{\bkmkstart AAAAAAABYC}{\bkmkend AAAAAAABYC}
00078     EXPECT_EQ(result.count(), 0);\par
{\bkmkstart AAAAAAABYD}{\bkmkend AAAAAAABYD}
00079     \par
{\bkmkstart AAAAAAABYE}{\bkmkend AAAAAAABYE}
00080     {\cf20 // Test with maximum safe values}\par
{\bkmkstart AAAAAAABYF}{\bkmkend AAAAAAABYF}
00081     {\cf18 long} {\cf18 long} maxSafe = std::numeric_limits<long long>::max() / 4;\par
{\bkmkstart AAAAAAABYH}{\bkmkend AAAAAAABYH}
00082     result = SafeChronoCalculator::safeCalculateDuration(maxSafe, 1000000, 1000000000);\par
{\bkmkstart AAAAAAABYI}{\bkmkend AAAAAAABYI}
00083     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABYJ}{\bkmkend AAAAAAABYJ}
00084 \}\par
{\bkmkstart AAAAAAABYL}{\bkmkend AAAAAAABYL}
00085 \par
{\bkmkstart AAAAAAABYM}{\bkmkend AAAAAAABYM}
00086 {\cf20 // Test SafeChronoCalculator performance}\par
{\bkmkstart AAAAAAABYN}{\bkmkend AAAAAAABYN}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYO" }{}}{\fldrslt {\cs37\ul\cf2 00087}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestSafeChronoCalculatorPerformance) \{\par
{\bkmkstart AAAAAAABYU}{\bkmkend AAAAAAABYU}
00088     {\cf17 auto} start = std::chrono::high_resolution_clock::now();\par
{\bkmkstart AAAAAAABYV}{\bkmkend AAAAAAABYV}
00089     \par
{\bkmkstart AAAAAAABYW}{\bkmkend AAAAAAABYW}
00090     {\cf20 // Perform many calculations}\par
{\bkmkstart AAAAAAABYY}{\bkmkend AAAAAAABYY}
00091     {\cf19 for} ({\cf18 int} i = 0; i < 1000; ++i) \{\par
{\bkmkstart AAAAAAABZB}{\bkmkend AAAAAAABZB}
00092         {\cf17 auto} result = SafeChronoCalculator::safeCalculateDuration(i, 1000000, 1000000000);\par
{\bkmkstart AAAAAAABZG}{\bkmkend AAAAAAABZG}
00093         EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABZI}{\bkmkend AAAAAAABZI}
00094     \}\par
{\bkmkstart AAAAAAABZJ}{\bkmkend AAAAAAABZJ}
00095     \par
{\bkmkstart AAAAAAABZK}{\bkmkend AAAAAAABZK}
00096     {\cf17 auto} end = std::chrono::high_resolution_clock::now();\par
{\bkmkstart AAAAAAABZN}{\bkmkend AAAAAAABZN}
00097     {\cf17 auto} duration = std::chrono::duration_cast<std::chrono::milliseconds>(end - start);\par
{\bkmkstart AAAAAAABZT}{\bkmkend AAAAAAABZT}
00098     \par
{\bkmkstart AAAAAAABZU}{\bkmkend AAAAAAABZU}
00099     {\cf20 // Should complete in reasonable time}\par
{\bkmkstart AAAAAAABZV}{\bkmkend AAAAAAABZV}
00100     EXPECT_LT(duration.count(), 1000); {\cf20 // Less than 1 second}\par
{\bkmkstart AAAAAAABZX}{\bkmkend AAAAAAABZX}
00101 \}\par
{\bkmkstart AAAAAAABZZ}{\bkmkend AAAAAAABZZ}
00102 \par
{\bkmkstart AAAAAAACAB}{\bkmkend AAAAAAACAB}
00103 {\cf20 // Test LanguageTranslatorApp basic functionality}\par
{\bkmkstart AAAAAAACAD}{\bkmkend AAAAAAACAD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAE" }{}}{\fldrslt {\cs37\ul\cf2 00104}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppBasic) \{\par
{\bkmkstart AAAAAAACAH}{\bkmkend AAAAAAACAH}
00105     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACAM}{\bkmkend AAAAAAACAM}
00106     \par
{\bkmkstart AAAAAAACAN}{\bkmkend AAAAAAACAN}
00107     {\cf20 // Test basic properties}\par
{\bkmkstart AAAAAAACAP}{\bkmkend AAAAAAACAP}
00108     EXPECT_FALSE(app.isUserLoggedIn());\par
{\bkmkstart AAAAAAACAS}{\bkmkend AAAAAAACAS}
00109     \par
{\bkmkstart AAAAAAACAT}{\bkmkend AAAAAAACAT}
00110     {\cf20 // Test language management}\par
{\bkmkstart AAAAAAACAU}{\bkmkend AAAAAAACAU}
00111     app.setSourceLanguage({\cf22 "Spanish"});\par
{\bkmkstart AAAAAAACAW}{\bkmkend AAAAAAACAW}
00112     app.setTargetLanguage({\cf22 "French"});\par
{\bkmkstart AAAAAAACBA}{\bkmkend AAAAAAACBA}
00113     \par
{\bkmkstart AAAAAAACBB}{\bkmkend AAAAAAACBB}
00114     {\cf20 // Test user management}\par
{\bkmkstart AAAAAAACBD}{\bkmkend AAAAAAACBD}
00115     EXPECT_TRUE(app.registerUser({\cf22 "testuser"}, {\cf22 "password123"}));\par
{\bkmkstart AAAAAAACBE}{\bkmkend AAAAAAACBE}
00116     EXPECT_TRUE(app.login({\cf22 "testuser"}, {\cf22 "password123"}));\par
{\bkmkstart AAAAAAACBF}{\bkmkend AAAAAAACBF}
00117     EXPECT_TRUE(app.isUserLoggedIn());\par
{\bkmkstart AAAAAAACBG}{\bkmkend AAAAAAACBG}
00118     \par
{\bkmkstart AAAAAAACBH}{\bkmkend AAAAAAACBH}
00119     app.logout();\par
{\bkmkstart AAAAAAACBI}{\bkmkend AAAAAAACBI}
00120     EXPECT_FALSE(app.isUserLoggedIn());\par
{\bkmkstart AAAAAAACBJ}{\bkmkend AAAAAAACBJ}
00121 \}\par
{\bkmkstart AAAAAAACBK}{\bkmkend AAAAAAACBK}
00122 \par
{\bkmkstart AAAAAAACBL}{\bkmkend AAAAAAACBL}
00123 {\cf20 // Test LanguageTranslatorApp translation}\par
{\bkmkstart AAAAAAACBO}{\bkmkend AAAAAAACBO}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBP" }{}}{\fldrslt {\cs37\ul\cf2 00124}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppTranslation) \{\par
{\bkmkstart AAAAAAACBV}{\bkmkend AAAAAAACBV}
00125     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACBY}{\bkmkend AAAAAAACBY}
00126     \par
{\bkmkstart AAAAAAACCA}{\bkmkend AAAAAAACCA}
00127     {\cf20 // Test translation functions}\par
{\bkmkstart AAAAAAACCB}{\bkmkend AAAAAAACCB}
00128     std::string result = app.translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAACCT}{\bkmkend AAAAAAACCT}
00129     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACEC}{\bkmkend AAAAAAACEC}
00130     \par
{\bkmkstart AAAAAAACEE}{\bkmkend AAAAAAACEE}
00131     result = app.translateWord({\cf22 "hello"});\par
{\bkmkstart AAAAAAACEF}{\bkmkend AAAAAAACEF}
00132     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACEG}{\bkmkend AAAAAAACEG}
00133     \par
{\bkmkstart AAAAAAACEH}{\bkmkend AAAAAAACEH}
00134     result = app.translatePhrase({\cf22 "good morning"});\par
{\bkmkstart AAAAAAACEI}{\bkmkend AAAAAAACEI}
00135     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACEJ}{\bkmkend AAAAAAACEJ}
00136     \par
{\bkmkstart AAAAAAACEK}{\bkmkend AAAAAAACEK}
00137     {\cf20 // Test with empty input}\par
{\bkmkstart AAAAAAACEL}{\bkmkend AAAAAAACEL}
00138     result = app.translateText({\cf22 ""});\par
{\bkmkstart AAAAAAACEM}{\bkmkend AAAAAAACEM}
00139     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAACEN}{\bkmkend AAAAAAACEN}
00140 \}\par
{\bkmkstart AAAAAAACEO}{\bkmkend AAAAAAACEO}
00141 \par
{\bkmkstart AAAAAAACEP}{\bkmkend AAAAAAACEP}
00142 {\cf20 // Test LanguageTranslatorApp data management}\par
{\bkmkstart AAAAAAACEQ}{\bkmkend AAAAAAACEQ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACER" }{}}{\fldrslt {\cs37\ul\cf2 00143}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppDataManagement) \{\par
{\bkmkstart AAAAAAACES}{\bkmkend AAAAAAACES}
00144     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACET}{\bkmkend AAAAAAACET}
00145     \par
{\bkmkstart AAAAAAACEU}{\bkmkend AAAAAAACEU}
00146     {\cf20 // Test data management functions (should not crash)}\par
{\bkmkstart AAAAAAACEV}{\bkmkend AAAAAAACEV}
00147     EXPECT_NO_THROW(app.initializeDefaultData());\par
{\bkmkstart AAAAAAACEW}{\bkmkend AAAAAAACEW}
00148     EXPECT_NO_THROW(app.saveData());\par
{\bkmkstart AAAAAAACEX}{\bkmkend AAAAAAACEX}
00149     EXPECT_NO_THROW(app.loadData());\par
{\bkmkstart AAAAAAACEY}{\bkmkend AAAAAAACEY}
00150     EXPECT_NO_THROW(app.loadAllDictionaries());\par
{\bkmkstart AAAAAAACEZ}{\bkmkend AAAAAAACEZ}
00151 \}\par
{\bkmkstart AAAAAAACFA}{\bkmkend AAAAAAACFA}
00152 \par
{\bkmkstart AAAAAAACFB}{\bkmkend AAAAAAACFB}
00153 {\cf20 // Test LanguageTranslatorApp API functions}\par
{\bkmkstart AAAAAAACFC}{\bkmkend AAAAAAACFC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFD" }{}}{\fldrslt {\cs37\ul\cf2 00154}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppAPI) \{\par
{\bkmkstart AAAAAAACFE}{\bkmkend AAAAAAACFE}
00155     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACFF}{\bkmkend AAAAAAACFF}
00156     \par
{\bkmkstart AAAAAAACFG}{\bkmkend AAAAAAACFG}
00157     {\cf20 // Test API functions}\par
{\bkmkstart AAAAAAACFH}{\bkmkend AAAAAAACFH}
00158     EXPECT_FALSE(app.isAPIAvailable());\par
{\bkmkstart AAAAAAACFI}{\bkmkend AAAAAAACFI}
00159     \par
{\bkmkstart AAAAAAACFJ}{\bkmkend AAAAAAACFJ}
00160     app.setAPIKey({\cf22 "test-api-key"});\par
{\bkmkstart AAAAAAACFK}{\bkmkend AAAAAAACFK}
00161     app.setAPIMode({\cf17 true});\par
{\bkmkstart AAAAAAACFL}{\bkmkend AAAAAAACFL}
00162     app.setAPIMode({\cf17 false});\par
{\bkmkstart AAAAAAACFM}{\bkmkend AAAAAAACFM}
00163     \par
{\bkmkstart AAAAAAACFN}{\bkmkend AAAAAAACFN}
00164     {\cf20 // Test API translation (should return empty string)}\par
{\bkmkstart AAAAAAACFO}{\bkmkend AAAAAAACFO}
00165     std::string result = app.translateWithGoogleAPI({\cf22 "hello"}, {\cf22 "en"}, {\cf22 "tr"});\par
{\bkmkstart AAAAAAACGF}{\bkmkend AAAAAAACGF}
00166     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAACGG}{\bkmkend AAAAAAACGG}
00167     \par
{\bkmkstart AAAAAAACGI}{\bkmkend AAAAAAACGI}
00168     result = app.translateWithMicrosoftAPI({\cf22 "hello"}, {\cf22 "en"}, {\cf22 "tr"});\par
{\bkmkstart AAAAAAACGK}{\bkmkend AAAAAAACGK}
00169     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAACGM}{\bkmkend AAAAAAACGM}
00170 \}\par
{\bkmkstart AAAAAAACGO}{\bkmkend AAAAAAACGO}
00171 \par
{\bkmkstart AAAAAAACGP}{\bkmkend AAAAAAACGP}
00172 {\cf20 // Test LanguageTranslatorApp phrase library}\par
{\bkmkstart AAAAAAACGQ}{\bkmkend AAAAAAACGQ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 00173}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppPhraseLibrary) \{\par
{\bkmkstart AAAAAAACGZ}{\bkmkend AAAAAAACGZ}
00174     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACHC}{\bkmkend AAAAAAACHC}
00175     \par
{\bkmkstart AAAAAAACHD}{\bkmkend AAAAAAACHD}
00176     {\cf20 // Test phrase library functions}\par
{\bkmkstart AAAAAAACHF}{\bkmkend AAAAAAACHF}
00177     app.addPhrase({\cf22 "Hello, how are you?"}, {\cf22 "greetings"});\par
{\bkmkstart AAAAAAACHH}{\bkmkend AAAAAAACHH}
00178     app.addPhrase({\cf22 "Thank you very much"}, {\cf22 "politeness"});\par
{\bkmkstart AAAAAAACHK}{\bkmkend AAAAAAACHK}
00179     \par
{\bkmkstart AAAAAAACHL}{\bkmkend AAAAAAACHL}
00180     {\cf20 // Test phrase translation}\par
{\bkmkstart AAAAAAACHM}{\bkmkend AAAAAAACHM}
00181     std::string result = app.translatePhrase({\cf22 "Hello, how are you?"});\par
{\bkmkstart AAAAAAACHQ}{\bkmkend AAAAAAACHQ}
00182     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACHR}{\bkmkend AAAAAAACHR}
00183 \}\par
{\bkmkstart AAAAAAACHS}{\bkmkend AAAAAAACHS}
00184 \par
{\bkmkstart AAAAAAACHU}{\bkmkend AAAAAAACHU}
00185 {\cf20 // Test LanguageTranslatorApp learning tips}\par
{\bkmkstart AAAAAAACHV}{\bkmkend AAAAAAACHV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 00186}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppLearningTips) \{\par
{\bkmkstart AAAAAAACIA}{\bkmkend AAAAAAACIA}
00187     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACID}{\bkmkend AAAAAAACID}
00188     \par
{\bkmkstart AAAAAAACIE}{\bkmkend AAAAAAACIE}
00189     {\cf20 // Test learning tips functions}\par
{\bkmkstart AAAAAAACIF}{\bkmkend AAAAAAACIF}
00190     app.addLearningTip({\cf22 "Practice daily for better results"});\par
{\bkmkstart AAAAAAACII}{\bkmkend AAAAAAACII}
00191     app.addLearningTip({\cf22 "Use flashcards for vocabulary"});\par
{\bkmkstart AAAAAAACIJ}{\bkmkend AAAAAAACIJ}
00192     \par
{\bkmkstart AAAAAAACIK}{\bkmkend AAAAAAACIK}
00193     {\cf20 // Test showing learning tips (should not crash)}\par
{\bkmkstart AAAAAAACIM}{\bkmkend AAAAAAACIM}
00194     EXPECT_NO_THROW(app.showLearningTips());\par
{\bkmkstart AAAAAAACIQ}{\bkmkend AAAAAAACIQ}
00195 \}\par
{\bkmkstart AAAAAAACIR}{\bkmkend AAAAAAACIR}
00196 \par
{\bkmkstart AAAAAAACIS}{\bkmkend AAAAAAACIS}
00197 {\cf20 // Test LanguageTranslatorApp pronunciation guide}\par
{\bkmkstart AAAAAAACIU}{\bkmkend AAAAAAACIU}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIW" }{}}{\fldrslt {\cs37\ul\cf2 00198}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppPronunciationGuide) \{\par
{\bkmkstart AAAAAAACIZ}{\bkmkend AAAAAAACIZ}
00199     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACJC}{\bkmkend AAAAAAACJC}
00200     \par
{\bkmkstart AAAAAAACJD}{\bkmkend AAAAAAACJD}
00201     {\cf20 // Test pronunciation guide functions}\par
{\bkmkstart AAAAAAACJF}{\bkmkend AAAAAAACJF}
00202     app.addPronunciation({\cf22 "hello"}, {\cf22 "heh-LOH"});\par
{\bkmkstart AAAAAAACJG}{\bkmkend AAAAAAACJG}
00203     app.addPronunciation({\cf22 "world"}, {\cf22 "wurld"});\par
{\bkmkstart AAAAAAACJH}{\bkmkend AAAAAAACJH}
00204     \par
{\bkmkstart AAAAAAACJI}{\bkmkend AAAAAAACJI}
00205     {\cf20 // Test showing pronunciation guide (should not crash)}\par
{\bkmkstart AAAAAAACJJ}{\bkmkend AAAAAAACJJ}
00206     EXPECT_NO_THROW(app.showPronunciationGuide());\par
{\bkmkstart AAAAAAACJK}{\bkmkend AAAAAAACJK}
00207 \}\par
{\bkmkstart AAAAAAACJL}{\bkmkend AAAAAAACJL}
00208 \par
{\bkmkstart AAAAAAACJM}{\bkmkend AAAAAAACJM}
00209 {\cf20 // Test LanguageTranslatorApp language selection}\par
{\bkmkstart AAAAAAACJN}{\bkmkend AAAAAAACJN}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJO" }{}}{\fldrslt {\cs37\ul\cf2 00210}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppLanguageSelection) \{\par
{\bkmkstart AAAAAAACJP}{\bkmkend AAAAAAACJP}
00211     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACJR}{\bkmkend AAAAAAACJR}
00212     \par
{\bkmkstart AAAAAAACJS}{\bkmkend AAAAAAACJS}
00213     {\cf20 // Test language selection (should not crash)}\par
{\bkmkstart AAAAAAACJT}{\bkmkend AAAAAAACJT}
00214     EXPECT_NO_THROW(app.showLanguageSelection());\par
{\bkmkstart AAAAAAACJV}{\bkmkend AAAAAAACJV}
00215     \par
{\bkmkstart AAAAAAACJW}{\bkmkend AAAAAAACJW}
00216     {\cf20 // Test phrase library display (should not crash)}\par
{\bkmkstart AAAAAAACJZ}{\bkmkend AAAAAAACJZ}
00217     EXPECT_NO_THROW(app.showPhraseLibrary());\par
{\bkmkstart AAAAAAACKB}{\bkmkend AAAAAAACKB}
00218 \}\par
{\bkmkstart AAAAAAACKC}{\bkmkend AAAAAAACKC}
00219 \par
{\bkmkstart AAAAAAACKD}{\bkmkend AAAAAAACKD}
00220 {\cf20 // Test LanguageTranslatorApp edge cases}\par
{\bkmkstart AAAAAAACKG}{\bkmkend AAAAAAACKG}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKH" }{}}{\fldrslt {\cs37\ul\cf2 00221}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppEdgeCases) \{\par
{\bkmkstart AAAAAAACKK}{\bkmkend AAAAAAACKK}
00222     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACKN}{\bkmkend AAAAAAACKN}
00223     \par
{\bkmkstart AAAAAAACKO}{\bkmkend AAAAAAACKO}
00224     {\cf20 // Test with very long text}\par
{\bkmkstart AAAAAAACKP}{\bkmkend AAAAAAACKP}
00225     std::string longText(1000, {\cf23 'a'});\par
{\bkmkstart AAAAAAACKS}{\bkmkend AAAAAAACKS}
00226     std::string result = app.translateText(longText);\par
{\bkmkstart AAAAAAACKX}{\bkmkend AAAAAAACKX}
00227     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACKY}{\bkmkend AAAAAAACKY}
00228     \par
{\bkmkstart AAAAAAACKZ}{\bkmkend AAAAAAACKZ}
00229     {\cf20 // Test with special characters}\par
{\bkmkstart AAAAAAACLA}{\bkmkend AAAAAAACLA}
00230     result = app.translateText({\cf22 "Hello, World! @#$%^&*()"});\par
{\bkmkstart AAAAAAACLD}{\bkmkend AAAAAAACLD}
00231     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACLE}{\bkmkend AAAAAAACLE}
00232     \par
{\bkmkstart AAAAAAACLF}{\bkmkend AAAAAAACLF}
00233     {\cf20 // Test with numbers}\par
{\bkmkstart AAAAAAACLG}{\bkmkend AAAAAAACLG}
00234     result = app.translateText({\cf22 "123 456 789"});\par
{\bkmkstart AAAAAAACLL}{\bkmkend AAAAAAACLL}
00235     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACLM}{\bkmkend AAAAAAACLM}
00236 \}\par
{\bkmkstart AAAAAAACLN}{\bkmkend AAAAAAACLN}
00237 \par
{\bkmkstart AAAAAAACLO}{\bkmkend AAAAAAACLO}
00238 {\cf20 // Test LanguageTranslatorApp menu handling}\par
{\bkmkstart AAAAAAACLQ}{\bkmkend AAAAAAACLQ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLR" }{}}{\fldrslt {\cs37\ul\cf2 00239}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppMenuHandling) \{\par
{\bkmkstart AAAAAAACLX}{\bkmkend AAAAAAACLX}
00240     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACLY}{\bkmkend AAAAAAACLY}
00241     \par
{\bkmkstart AAAAAAACMA}{\bkmkend AAAAAAACMA}
00242     {\cf20 // Test handleUserChoice with various inputs (should not crash)}\par
{\bkmkstart AAAAAAACMC}{\bkmkend AAAAAAACMC}
00243     EXPECT_NO_THROW(app.handleUserChoice(0)); {\cf20 // Exit}\par
{\bkmkstart AAAAAAACMD}{\bkmkend AAAAAAACMD}
00244     EXPECT_NO_THROW(app.handleUserChoice(1)); {\cf20 // Login/Translate}\par
{\bkmkstart AAAAAAACMF}{\bkmkend AAAAAAACMF}
00245     EXPECT_NO_THROW(app.handleUserChoice(2)); {\cf20 // Register/Change Languages}\par
{\bkmkstart AAAAAAACMJ}{\bkmkend AAAAAAACMJ}
00246     EXPECT_NO_THROW(app.handleUserChoice(3)); {\cf20 // Phrase Library}\par
{\bkmkstart AAAAAAACML}{\bkmkend AAAAAAACML}
00247     EXPECT_NO_THROW(app.handleUserChoice(4)); {\cf20 // Learning Tips}\par
{\bkmkstart AAAAAAACMO}{\bkmkend AAAAAAACMO}
00248     EXPECT_NO_THROW(app.handleUserChoice(5)); {\cf20 // Pronunciation Guide}\par
{\bkmkstart AAAAAAACMQ}{\bkmkend AAAAAAACMQ}
00249     EXPECT_NO_THROW(app.handleUserChoice(6)); {\cf20 // Logout}\par
{\bkmkstart AAAAAAACMR}{\bkmkend AAAAAAACMR}
00250     EXPECT_NO_THROW(app.handleUserChoice(99)); {\cf20 // Invalid choice}\par
{\bkmkstart AAAAAAACMS}{\bkmkend AAAAAAACMS}
00251 \}\par
{\bkmkstart AAAAAAACMT}{\bkmkend AAAAAAACMT}
00252 \par
{\bkmkstart AAAAAAACMU}{\bkmkend AAAAAAACMU}
00253 {\cf20 // Test LanguageTranslatorApp performance}\par
{\bkmkstart AAAAAAACMV}{\bkmkend AAAAAAACMV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMW" }{}}{\fldrslt {\cs37\ul\cf2 00254}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppPerformance) \{\par
{\bkmkstart AAAAAAACMX}{\bkmkend AAAAAAACMX}
00255     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACMY}{\bkmkend AAAAAAACMY}
00256     \par
{\bkmkstart AAAAAAACMZ}{\bkmkend AAAAAAACMZ}
00257     {\cf20 // Test with many phrases}\par
{\bkmkstart AAAAAAACNA}{\bkmkend AAAAAAACNA}
00258     {\cf19 for} ({\cf18 int} i = 0; i < 100; ++i) \{\par
{\bkmkstart AAAAAAACNB}{\bkmkend AAAAAAACNB}
00259         app.addPhrase({\cf22 "phrase "} + std::to_string(i), {\cf22 "category"} + std::to_string(i % 5));\par
{\bkmkstart AAAAAAACND}{\bkmkend AAAAAAACND}
00260     \}\par
{\bkmkstart AAAAAAACNE}{\bkmkend AAAAAAACNE}
00261     \par
{\bkmkstart AAAAAAACNG}{\bkmkend AAAAAAACNG}
00262     {\cf20 // Test with many learning tips}\par
{\bkmkstart AAAAAAACNH}{\bkmkend AAAAAAACNH}
00263     {\cf19 for} ({\cf18 int} i = 0; i < 50; ++i) \{\par
{\bkmkstart AAAAAAACNL}{\bkmkend AAAAAAACNL}
00264         app.addLearningTip({\cf22 "tip "} + std::to_string(i));\par
{\bkmkstart AAAAAAACNO}{\bkmkend AAAAAAACNO}
00265     \}\par
{\bkmkstart AAAAAAACNP}{\bkmkend AAAAAAACNP}
00266     \par
{\bkmkstart AAAAAAACNR}{\bkmkend AAAAAAACNR}
00267     {\cf20 // Test with many pronunciations}\par
{\bkmkstart AAAAAAACNS}{\bkmkend AAAAAAACNS}
00268     {\cf19 for} ({\cf18 int} i = 0; i < 50; ++i) \{\par
{\bkmkstart AAAAAAACNW}{\bkmkend AAAAAAACNW}
00269         app.addPronunciation({\cf22 "word"} + std::to_string(i), {\cf22 "pronunciation"} + std::to_string(i));\par
{\bkmkstart AAAAAAACNY}{\bkmkend AAAAAAACNY}
00270     \}\par
{\bkmkstart AAAAAAACNZ}{\bkmkend AAAAAAACNZ}
00271     \par
{\bkmkstart AAAAAAACOB}{\bkmkend AAAAAAACOB}
00272     {\cf20 // Test that everything still works}\par
{\bkmkstart AAAAAAACOC}{\bkmkend AAAAAAACOC}
00273     EXPECT_NO_THROW(app.showPhraseLibrary());\par
{\bkmkstart AAAAAAACOG}{\bkmkend AAAAAAACOG}
00274     EXPECT_NO_THROW(app.showLearningTips());\par
{\bkmkstart AAAAAAACOI}{\bkmkend AAAAAAACOI}
00275     EXPECT_NO_THROW(app.showPronunciationGuide());\par
{\bkmkstart AAAAAAACOJ}{\bkmkend AAAAAAACOJ}
00276 \}\par
{\bkmkstart AAAAAAACOK}{\bkmkend AAAAAAACOK}
00277 \par
{\bkmkstart AAAAAAACOL}{\bkmkend AAAAAAACOL}
00278 {\cf20 // Test LanguageTranslatorApp consistency}\par
{\bkmkstart AAAAAAACON}{\bkmkend AAAAAAACON}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOO" }{}}{\fldrslt {\cs37\ul\cf2 00279}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppConsistency) \{\par
{\bkmkstart AAAAAAACOS}{\bkmkend AAAAAAACOS}
00280     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACOX}{\bkmkend AAAAAAACOX}
00281     \par
{\bkmkstart AAAAAAACOY}{\bkmkend AAAAAAACOY}
00282     {\cf20 // Test that same inputs give same outputs}\par
{\bkmkstart AAAAAAACOZ}{\bkmkend AAAAAAACOZ}
00283     std::string input = {\cf22 "hello world"};\par
{\bkmkstart AAAAAAACPA}{\bkmkend AAAAAAACPA}
00284     std::string result1 = app.translateText(input);\par
{\bkmkstart AAAAAAACPC}{\bkmkend AAAAAAACPC}
00285     std::string result2 = app.translateText(input);\par
{\bkmkstart AAAAAAACPE}{\bkmkend AAAAAAACPE}
00286     EXPECT_EQ(result1, result2);\par
{\bkmkstart AAAAAAACPF}{\bkmkend AAAAAAACPF}
00287 \}\par
{\bkmkstart AAAAAAACPJ}{\bkmkend AAAAAAACPJ}
00288 \par
{\bkmkstart AAAAAAACPL}{\bkmkend AAAAAAACPL}
00289 {\cf20 // Test LanguageTranslatorApp with different language combinations}\par
{\bkmkstart AAAAAAACPM}{\bkmkend AAAAAAACPM}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 00290}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCoverageBoostTest}}}
, TestLanguageTranslatorAppLanguageCombinations) \{\par
{\bkmkstart AAAAAAACPR}{\bkmkend AAAAAAACPR}
00291     LanguageTranslatorApp app;\par
{\bkmkstart AAAAAAACPT}{\bkmkend AAAAAAACPT}
00292     \par
{\bkmkstart AAAAAAACPU}{\bkmkend AAAAAAACPU}
00293     {\cf20 // Test English to Turkish}\par
{\bkmkstart AAAAAAACPW}{\bkmkend AAAAAAACPW}
00294     app.setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAACPY}{\bkmkend AAAAAAACPY}
00295     app.setTargetLanguage({\cf22 "Turkish"});\par
{\bkmkstart AAAAAAACQB}{\bkmkend AAAAAAACQB}
00296     std::string result = app.translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAACQF}{\bkmkend AAAAAAACQF}
00297     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACQJ}{\bkmkend AAAAAAACQJ}
00298     \par
{\bkmkstart AAAAAAACQK}{\bkmkend AAAAAAACQK}
00299     {\cf20 // Test English to Spanish}\par
{\bkmkstart AAAAAAACQL}{\bkmkend AAAAAAACQL}
00300     app.setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAACQN}{\bkmkend AAAAAAACQN}
00301     app.setTargetLanguage({\cf22 "Spanish"});\par
{\bkmkstart AAAAAAACQP}{\bkmkend AAAAAAACQP}
00302     result = app.translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAACQQ}{\bkmkend AAAAAAACQQ}
00303     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACQR}{\bkmkend AAAAAAACQR}
00304     \par
{\bkmkstart AAAAAAACQS}{\bkmkend AAAAAAACQS}
00305     {\cf20 // Test English to French}\par
{\bkmkstart AAAAAAACQT}{\bkmkend AAAAAAACQT}
00306     app.setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAACQU}{\bkmkend AAAAAAACQU}
00307     app.setTargetLanguage({\cf22 "French"});\par
{\bkmkstart AAAAAAACQV}{\bkmkend AAAAAAACQV}
00308     result = app.translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAACQW}{\bkmkend AAAAAAACQW}
00309     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACQX}{\bkmkend AAAAAAACQX}
00310     \par
{\bkmkstart AAAAAAACQY}{\bkmkend AAAAAAACQY}
00311     {\cf20 // Test Turkish to English}\par
{\bkmkstart AAAAAAACQZ}{\bkmkend AAAAAAACQZ}
00312     app.setSourceLanguage({\cf22 "Turkish"});\par
{\bkmkstart AAAAAAACRA}{\bkmkend AAAAAAACRA}
00313     app.setTargetLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAACRD}{\bkmkend AAAAAAACRD}
00314     result = app.translateText({\cf22 "merhaba dünya"});\par
{\bkmkstart AAAAAAACRE}{\bkmkend AAAAAAACRE}
00315     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACRF}{\bkmkend AAAAAAACRF}
00316 \}\par
}
}