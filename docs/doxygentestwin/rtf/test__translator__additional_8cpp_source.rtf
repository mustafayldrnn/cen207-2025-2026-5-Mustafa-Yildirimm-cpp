{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_translator_additional.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_translator_additional.cpp}
{\xe \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_translator_additional.cpp}
{\bkmkstart AAAAAAAGXS}
{\bkmkend AAAAAAAGXS}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAGZK}{\bkmkend AAAAAAAGZK}
00001 {\cf20 // Ek kapsama: parser hata yolları, otomatik etiketler ve codegen dalları}\par
{\bkmkstart AAAAAAAGZT}{\bkmkend AAAAAAAGZT}
00002 {\cf20 // Bu testler, lexer/parser/codegen için eksik kalan akışları hedefler.}\par
{\bkmkstart AAAAAAAGZV}{\bkmkend AAAAAAAGZV}
00003 \par
{\bkmkstart AAAAAAAGZW}{\bkmkend AAAAAAAGZW}
00004 {\cf21 #include <gtest/gtest.h>}\par
{\bkmkstart AAAAAAAHAV}{\bkmkend AAAAAAAHAV}
00005 {\cf21 #include <string>}\par
{\bkmkstart AAAAAAAHBP}{\bkmkend AAAAAAAHBP}
00006 {\cf21 #include "translator/lexer.h"}\par
{\bkmkstart AAAAAAAHCH}{\bkmkend AAAAAAAHCH}
00007 {\cf21 #include "translator/parser.h"}\par
{\bkmkstart AAAAAAAHCX}{\bkmkend AAAAAAAHCX}
00008 {\cf21 #include "translator/codegen.h"}\par
{\bkmkstart AAAAAAAHEN}{\bkmkend AAAAAAAHEN}
00009 {\cf21 #include "translator/ast.h"}\par
{\bkmkstart AAAAAAAHFK}{\bkmkend AAAAAAAHFK}
00010 \par
{\bkmkstart AAAAAAAHFM}{\bkmkend AAAAAAAHFM}
00011 {\cf17 using namespace }translator;\par
{\bkmkstart AAAAAAAHFP}{\bkmkend AAAAAAAHFP}
00012 \par
{\bkmkstart AAAAAAAHFQ}{\bkmkend AAAAAAAHFQ}
00013 {\cf20 // Yardımcı: kaynak metnini parse edip Program döndür}\par
{\bkmkstart AAAAAAAHFT}{\bkmkend AAAAAAAHFT}
00014 {\cf17 static} Program parse_program_from({\cf17 const} {\cf18 char}* src)\{\par
{\bkmkstart AAAAAAAHGF}{\bkmkend AAAAAAAHGF}
00015     Lexer lx(src);\par
{\bkmkstart AAAAAAAHGK}{\bkmkend AAAAAAAHGK}
00016     {\cf17 auto} toks = lx.tokenize();\par
{\bkmkstart AAAAAAAHGQ}{\bkmkend AAAAAAAHGQ}
00017     Parser ps(std::move(toks));\par
{\bkmkstart AAAAAAAHGW}{\bkmkend AAAAAAAHGW}
00018     {\cf19 return} ps.parseProgram();\par
{\bkmkstart AAAAAAAHGX}{\bkmkend AAAAAAAHGX}
00019 \}\par
{\bkmkstart AAAAAAAHGY}{\bkmkend AAAAAAAHGY}
00020 \par
{\bkmkstart AAAAAAAHGZ}{\bkmkend AAAAAAAHGZ}
00021 TEST(ParserErrors, MissingRParen)\{\par
{\bkmkstart AAAAAAAHHH}{\bkmkend AAAAAAAHHH}
00022     {\cf17 const} {\cf18 char}* src = {\cf22 "10 PRINT (1 + 2\\n"}; {\cf20 // ')' eksik}\par
{\bkmkstart AAAAAAAHHL}{\bkmkend AAAAAAAHHL}
00023     Lexer lx(src);\par
{\bkmkstart AAAAAAAHHQ}{\bkmkend AAAAAAAHHQ}
00024     {\cf17 auto} toks = lx.tokenize();\par
{\bkmkstart AAAAAAAHHT}{\bkmkend AAAAAAAHHT}
00025     Parser ps(std::move(toks));\par
{\bkmkstart AAAAAAAHHW}{\bkmkend AAAAAAAHHW}
00026     EXPECT_THROW(({\cf18 void})ps.parseProgram(), std::runtime_error);\par
{\bkmkstart AAAAAAAHIA}{\bkmkend AAAAAAAHIA}
00027 \}\par
{\bkmkstart AAAAAAAHIB}{\bkmkend AAAAAAAHIB}
00028 \par
{\bkmkstart AAAAAAAHIC}{\bkmkend AAAAAAAHIC}
00029 TEST(ParserErrors, UnknownStatement)\{\par
{\bkmkstart AAAAAAAHIF}{\bkmkend AAAAAAAHIF}
00030     {\cf17 const} {\cf18 char}* src = {\cf22 "10 FOOBAR\\n"}; {\cf20 // desteklenmeyen ifade}\par
{\bkmkstart AAAAAAAHII}{\bkmkend AAAAAAAHII}
00031     Lexer lx(src);\par
{\bkmkstart AAAAAAAHIK}{\bkmkend AAAAAAAHIK}
00032     {\cf17 auto} toks = lx.tokenize();\par
{\bkmkstart AAAAAAAHIM}{\bkmkend AAAAAAAHIM}
00033     Parser ps(std::move(toks));\par
{\bkmkstart AAAAAAAHIR}{\bkmkend AAAAAAAHIR}
00034     EXPECT_THROW(({\cf18 void})ps.parseProgram(), std::runtime_error);\par
{\bkmkstart AAAAAAAHIW}{\bkmkend AAAAAAAHIW}
00035 \}\par
{\bkmkstart AAAAAAAHIX}{\bkmkend AAAAAAAHIX}
00036 \par
{\bkmkstart AAAAAAAHIZ}{\bkmkend AAAAAAAHIZ}
00037 TEST(ParserErrors, LetMissingAssign)\{\par
{\bkmkstart AAAAAAAHJC}{\bkmkend AAAAAAAHJC}
00038     {\cf17 const} {\cf18 char}* src = {\cf22 "10 LET X 5\\n"}; {\cf20 // '=' eksik}\par
{\bkmkstart AAAAAAAHJG}{\bkmkend AAAAAAAHJG}
00039     Lexer lx(src);\par
{\bkmkstart AAAAAAAHJL}{\bkmkend AAAAAAAHJL}
00040     {\cf17 auto} toks = lx.tokenize();\par
{\bkmkstart AAAAAAAHJO}{\bkmkend AAAAAAAHJO}
00041     Parser ps(std::move(toks));\par
{\bkmkstart AAAAAAAHJR}{\bkmkend AAAAAAAHJR}
00042     EXPECT_THROW(({\cf18 void})ps.parseProgram(), std::runtime_error);\par
{\bkmkstart AAAAAAAHJU}{\bkmkend AAAAAAAHJU}
00043 \}\par
{\bkmkstart AAAAAAAHJX}{\bkmkend AAAAAAAHJX}
00044 \par
{\bkmkstart AAAAAAAHJZ}{\bkmkend AAAAAAAHJZ}
00045 TEST(ParserErrors, InputNeedsIdentifier)\{\par
{\bkmkstart AAAAAAAHKD}{\bkmkend AAAAAAAHKD}
00046     {\cf17 const} {\cf18 char}* src = {\cf22 "10 INPUT 123\\n"};\par
{\bkmkstart AAAAAAAHKG}{\bkmkend AAAAAAAHKG}
00047     Lexer lx(src);\par
{\bkmkstart AAAAAAAHKJ}{\bkmkend AAAAAAAHKJ}
00048     {\cf17 auto} toks = lx.tokenize();\par
{\bkmkstart AAAAAAAHKL}{\bkmkend AAAAAAAHKL}
00049     Parser ps(std::move(toks));\par
{\bkmkstart AAAAAAAHKQ}{\bkmkend AAAAAAAHKQ}
00050     EXPECT_THROW(({\cf18 void})ps.parseProgram(), std::runtime_error);\par
{\bkmkstart AAAAAAAHKU}{\bkmkend AAAAAAAHKU}
00051 \}\par
{\bkmkstart AAAAAAAHKX}{\bkmkend AAAAAAAHKX}
00052 \par
{\bkmkstart AAAAAAAHKY}{\bkmkend AAAAAAAHKY}
00053 TEST(ParserErrors, IfRequiresThen)\{\par
{\bkmkstart AAAAAAAHLB}{\bkmkend AAAAAAAHLB}
00054     {\cf17 const} {\cf18 char}* src = {\cf22 "10 IF 1 20\\n"}; {\cf20 // THEN eksik}\par
{\bkmkstart AAAAAAAHLL}{\bkmkend AAAAAAAHLL}
00055     Lexer lx(src);\par
{\bkmkstart AAAAAAAHLO}{\bkmkend AAAAAAAHLO}
00056     {\cf17 auto} toks = lx.tokenize();\par
{\bkmkstart AAAAAAAHLS}{\bkmkend AAAAAAAHLS}
00057     Parser ps(std::move(toks));\par
{\bkmkstart AAAAAAAHLT}{\bkmkend AAAAAAAHLT}
00058     EXPECT_THROW(({\cf18 void})ps.parseProgram(), std::runtime_error);\par
{\bkmkstart AAAAAAAHLV}{\bkmkend AAAAAAAHLV}
00059 \}\par
{\bkmkstart AAAAAAAHLX}{\bkmkend AAAAAAAHLX}
00060 \par
{\bkmkstart AAAAAAAHLY}{\bkmkend AAAAAAAHLY}
00061 TEST(ParserErrors, IfThenRequiresNumber)\{\par
{\bkmkstart AAAAAAAHMD}{\bkmkend AAAAAAAHMD}
00062     {\cf17 const} {\cf18 char}* src = {\cf22 "10 IF 1 THEN X\\n"}; {\cf20 // sayı yerine kimlik}\par
{\bkmkstart AAAAAAAHMH}{\bkmkend AAAAAAAHMH}
00063     Lexer lx(src);\par
{\bkmkstart AAAAAAAHML}{\bkmkend AAAAAAAHML}
00064     {\cf17 auto} toks = lx.tokenize();\par
{\bkmkstart AAAAAAAHMO}{\bkmkend AAAAAAAHMO}
00065     Parser ps(std::move(toks));\par
{\bkmkstart AAAAAAAHMT}{\bkmkend AAAAAAAHMT}
00066     EXPECT_THROW(({\cf18 void})ps.parseProgram(), std::runtime_error);\par
{\bkmkstart AAAAAAAHMX}{\bkmkend AAAAAAAHMX}
00067 \}\par
{\bkmkstart AAAAAAAHMY}{\bkmkend AAAAAAAHMY}
00068 \par
{\bkmkstart AAAAAAAHNC}{\bkmkend AAAAAAAHNC}
00069 TEST(ParserErrors, GotoRequiresNumber)\{\par
{\bkmkstart AAAAAAAHNF}{\bkmkend AAAAAAAHNF}
00070     {\cf17 const} {\cf18 char}* src = {\cf22 "10 GOTO X\\n"};\par
{\bkmkstart AAAAAAAHNK}{\bkmkend AAAAAAAHNK}
00071     Lexer lx(src);\par
{\bkmkstart AAAAAAAHNO}{\bkmkend AAAAAAAHNO}
00072     {\cf17 auto} toks = lx.tokenize();\par
{\bkmkstart AAAAAAAHNS}{\bkmkend AAAAAAAHNS}
00073     Parser ps(std::move(toks));\par
{\bkmkstart AAAAAAAHOC}{\bkmkend AAAAAAAHOC}
00074     EXPECT_THROW(({\cf18 void})ps.parseProgram(), std::runtime_error);\par
{\bkmkstart AAAAAAAHOF}{\bkmkend AAAAAAAHOF}
00075 \}\par
{\bkmkstart AAAAAAAHOH}{\bkmkend AAAAAAAHOH}
00076 \par
{\bkmkstart AAAAAAAHOJ}{\bkmkend AAAAAAAHOJ}
00077 TEST(ParserProgram, AutoLabelsWhenMissing)\{\par
{\bkmkstart AAAAAAAHOR}{\bkmkend AAAAAAAHOR}
00078     {\cf20 // Satır numarası yoksa 10,20,... üretir}\par
{\bkmkstart AAAAAAAHOV}{\bkmkend AAAAAAAHOV}
00079     {\cf17 const} {\cf18 char}* src = {\cf22 "LET X = 1\\nPRINT X\\n"};\par
{\bkmkstart AAAAAAAHOZ}{\bkmkend AAAAAAAHOZ}
00080     {\cf17 auto} prog = parse_program_from(src);\par
{\bkmkstart AAAAAAAHPH}{\bkmkend AAAAAAAHPH}
00081     ASSERT_EQ(prog.stmts.size(), 2u);\par
{\bkmkstart AAAAAAAHPN}{\bkmkend AAAAAAAHPN}
00082     ASSERT_EQ(prog.labels.size(), 2u);\par
{\bkmkstart AAAAAAAHPS}{\bkmkend AAAAAAAHPS}
00083     EXPECT_EQ(prog.labels[0], 10);\par
{\bkmkstart AAAAAAAHPX}{\bkmkend AAAAAAAHPX}
00084     EXPECT_EQ(prog.labels[1], 20);\par
{\bkmkstart AAAAAAAHQA}{\bkmkend AAAAAAAHQA}
00085 \}\par
{\bkmkstart AAAAAAAHQB}{\bkmkend AAAAAAAHQB}
00086 \par
{\bkmkstart AAAAAAAHQC}{\bkmkend AAAAAAAHQC}
00087 TEST(Lexer, UnknownCharIsIgnored)\{\par
{\bkmkstart AAAAAAAHQI}{\bkmkend AAAAAAAHQI}
00088     {\cf20 // '@' bilinmeyen — token üretilmeden atlanmalı}\par
{\bkmkstart AAAAAAAHQK}{\bkmkend AAAAAAAHQK}
00089     Lexer lx({\cf22 "10 LET X = 1 @ 2\\n"});\par
{\bkmkstart AAAAAAAHQO}{\bkmkend AAAAAAAHQO}
00090     {\cf17 auto} toks = lx.tokenize();\par
{\bkmkstart AAAAAAAHQS}{\bkmkend AAAAAAAHQS}
00091     {\cf20 // Number tokenlarının en az iki kez gelmesini bekleriz}\par
{\bkmkstart AAAAAAAHQU}{\bkmkend AAAAAAAHQU}
00092     {\cf18 int} number_count = 0;\par
{\bkmkstart AAAAAAAHQX}{\bkmkend AAAAAAAHQX}
00093     {\cf19 for} ({\cf17 auto}& t : toks) {\cf19 if} (t.type == TokenType::Number) ++number_count;\par
{\bkmkstart AAAAAAAHRE}{\bkmkend AAAAAAAHRE}
00094     EXPECT_GE(number_count, 2);\par
{\bkmkstart AAAAAAAHRL}{\bkmkend AAAAAAAHRL}
00095 \}\par
{\bkmkstart AAAAAAAHRO}{\bkmkend AAAAAAAHRO}
00096 \par
{\bkmkstart AAAAAAAHRQ}{\bkmkend AAAAAAAHRQ}
00097 TEST(CodegenPaths, EmptyProgramReturnsEarly)\{\par
{\bkmkstart AAAAAAAHRW}{\bkmkend AAAAAAAHRW}
00098     {\cf20 // Boş program}\par
{\bkmkstart AAAAAAAHSC}{\bkmkend AAAAAAAHSC}
00099     Program p; {\cf20 // labels ve stmts boş}\par
{\bkmkstart AAAAAAAHSF}{\bkmkend AAAAAAAHSF}
00100     {\cf17 auto} out = Codegen::emit_cpp(p);\par
{\bkmkstart AAAAAAAHSJ}{\bkmkend AAAAAAAHSJ}
00101     {\cf20 // erken return içermeli}\par
{\bkmkstart AAAAAAAHSM}{\bkmkend AAAAAAAHSM}
00102     EXPECT_NE(out.find({\cf22 "return 0;"}), std::string::npos);\par
{\bkmkstart AAAAAAAHSQ}{\bkmkend AAAAAAAHSQ}
00103 \}\par
{\bkmkstart AAAAAAAHSS}{\bkmkend AAAAAAAHSS}
00104 \par
{\bkmkstart AAAAAAAHSU}{\bkmkend AAAAAAAHSU}
00105 TEST(CodegenPaths, InputGotoIfGosubReturn)\{\par
{\bkmkstart AAAAAAAHSZ}{\bkmkend AAAAAAAHSZ}
00106     {\cf17 const} {\cf18 char}* src =\par
{\bkmkstart AAAAAAAHTE}{\bkmkend AAAAAAAHTE}
00107         {\cf22 "10 INPUT X\\n"}\par
{\bkmkstart AAAAAAAHTG}{\bkmkend AAAAAAAHTG}
00108         {\cf22 "20 IF X THEN 40\\n"}\par
{\bkmkstart AAAAAAAHTJ}{\bkmkend AAAAAAAHTJ}
00109         {\cf22 "30 GOTO 50\\n"}\par
{\bkmkstart AAAAAAAHTL}{\bkmkend AAAAAAAHTL}
00110         {\cf22 "40 GOSUB 60\\n"}\par
{\bkmkstart AAAAAAAHTN}{\bkmkend AAAAAAAHTN}
00111         {\cf22 "50 PRINT X\\n"}\par
{\bkmkstart AAAAAAAHTP}{\bkmkend AAAAAAAHTP}
00112         {\cf22 "60 RETURN\\n"};\par
{\bkmkstart AAAAAAAHTS}{\bkmkend AAAAAAAHTS}
00113     {\cf17 auto} prog = parse_program_from(src);\par
{\bkmkstart AAAAAAAHTX}{\bkmkend AAAAAAAHTX}
00114     {\cf17 auto} out = Codegen::emit_cpp(prog);\par
{\bkmkstart AAAAAAAHUC}{\bkmkend AAAAAAAHUC}
00115     {\cf20 // INPUT üretimi}\par
{\bkmkstart AAAAAAAHUE}{\bkmkend AAAAAAAHUE}
00116     EXPECT_NE(out.find({\cf22 "std::cin >> tmp"}), std::string::npos);\par
{\bkmkstart AAAAAAAHUI}{\bkmkend AAAAAAAHUI}
00117     {\cf20 // IF THEN else bir sonraki etikete gidiş}\par
{\bkmkstart AAAAAAAHUL}{\bkmkend AAAAAAAHUL}
00118     EXPECT_NE(out.find({\cf22 "if (var[\\"X\\"])"}), std::string::npos);\par
{\bkmkstart AAAAAAAHUS}{\bkmkend AAAAAAAHUS}
00119     EXPECT_NE(out.find({\cf22 "else pc = 30;"}), std::string::npos); {\cf20 // 20'den sonraki etiket 30}\par
{\bkmkstart AAAAAAAHUY}{\bkmkend AAAAAAAHUY}
00120     {\cf20 // GOSUB çağrısı ve dönüş}\par
{\bkmkstart AAAAAAAHUZ}{\bkmkend AAAAAAAHUZ}
00121     EXPECT_NE(out.find({\cf22 "call.push(50); pc = 60;"}), std::string::npos);\par
{\bkmkstart AAAAAAAHVE}{\bkmkend AAAAAAAHVE}
00122     EXPECT_NE(out.find({\cf22 "if (call.empty()) return 0; pc = call.top(); call.pop();"}), std::string::npos);\par
{\bkmkstart AAAAAAAHVK}{\bkmkend AAAAAAAHVK}
00123 \}\par
{\bkmkstart AAAAAAAHVL}{\bkmkend AAAAAAAHVL}
00124 \par
}
}