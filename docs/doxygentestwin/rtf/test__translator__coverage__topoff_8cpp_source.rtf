{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_translator_coverage_topoff.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_translator_coverage_topoff.cpp}
{\xe \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_translator_coverage_topoff.cpp}
{\bkmkstart AAAAAAAIPV}
{\bkmkend AAAAAAAIPV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIPX" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAIRA}{\bkmkend AAAAAAAIRA}
00001 \par
{\bkmkstart AAAAAAAIRE}{\bkmkend AAAAAAAIRE}
00005 \par
{\bkmkstart AAAAAAAIRG}{\bkmkend AAAAAAAIRG}
00006 {\cf21 #include <gtest/gtest.h>}\par
{\bkmkstart AAAAAAAIRX}{\bkmkend AAAAAAAIRX}
00007 {\cf21 #include <string>}\par
{\bkmkstart AAAAAAAISI}{\bkmkend AAAAAAAISI}
00008 {\cf21 #include <vector>}\par
{\bkmkstart AAAAAAAISR}{\bkmkend AAAAAAAISR}
00009 {\cf21 #include "../src/translator/lexer.h"}\par
{\bkmkstart AAAAAAAITF}{\bkmkend AAAAAAAITF}
00010 {\cf21 #include "../src/translator/parser.h"}\par
{\bkmkstart AAAAAAAITP}{\bkmkend AAAAAAAITP}
00011 {\cf21 #include "../src/translator/codegen.h"}\par
{\bkmkstart AAAAAAAIUK}{\bkmkend AAAAAAAIUK}
00012 \par
{\bkmkstart AAAAAAAIUM}{\bkmkend AAAAAAAIUM}
00013 {\cf17 using namespace }translator;\par
{\bkmkstart AAAAAAAIUO}{\bkmkend AAAAAAAIUO}
00014 \par
{\bkmkstart AAAAAAAIUQ}{\bkmkend AAAAAAAIUQ}
00015 {\cf20 // Covers: string literal scanning (multi-line), and single-char tokens -,*,/,),(}\par
{\bkmkstart AAAAAAAIUS}{\bkmkend AAAAAAAIUS}
00016 TEST(TranslatorCoverageTopOff, Lexer_StringAndPunctuators)\par
{\bkmkstart AAAAAAAIVE}{\bkmkend AAAAAAAIVE}
00017 \{\par
{\bkmkstart AAAAAAAIVF}{\bkmkend AAAAAAAIVF}
00018     {\cf20 // String without closing quote on same line to exercise newline handling inside string}\par
{\bkmkstart AAAAAAAIVH}{\bkmkend AAAAAAAIVH}
00019     {\cf17 const} std::string src = {\cf22 "PRINT \\"hello\\nworld\\"\\nA = 1-2*3/4,(5)\\n"};\par
{\bkmkstart AAAAAAAIVM}{\bkmkend AAAAAAAIVM}
00020     Lexer lx(src);\par
{\bkmkstart AAAAAAAIVQ}{\bkmkend AAAAAAAIVQ}
00021     {\cf17 auto} toks = lx.tokenize();\par
{\bkmkstart AAAAAAAIVS}{\bkmkend AAAAAAAIVS}
00022 \par
{\bkmkstart AAAAAAAIVT}{\bkmkend AAAAAAAIVT}
00023     {\cf20 // Ensure we saw a String token and various punctuators}\par
{\bkmkstart AAAAAAAIVV}{\bkmkend AAAAAAAIVV}
00024     {\cf18 bool} sawString={\cf17 false}, sawMinus={\cf17 false}, sawStar={\cf17 false}, sawSlash={\cf17 false}, sawLParen={\cf17 false}, sawRParen={\cf17 false}, sawComma={\cf17 false};\par
{\bkmkstart AAAAAAAIVY}{\bkmkend AAAAAAAIVY}
00025     {\cf19 for} ({\cf17 const} {\cf17 auto}& t : toks) \{\par
{\bkmkstart AAAAAAAIWB}{\bkmkend AAAAAAAIWB}
00026         sawString |= (t.type==TokenType::String);\par
{\bkmkstart AAAAAAAIWE}{\bkmkend AAAAAAAIWE}
00027         sawMinus  |= (t.type==TokenType::Minus);\par
{\bkmkstart AAAAAAAIWG}{\bkmkend AAAAAAAIWG}
00028         sawStar   |= (t.type==TokenType::Star);\par
{\bkmkstart AAAAAAAIWI}{\bkmkend AAAAAAAIWI}
00029         sawSlash  |= (t.type==TokenType::Slash);\par
{\bkmkstart AAAAAAAIWL}{\bkmkend AAAAAAAIWL}
00030         sawLParen |= (t.type==TokenType::LParen);\par
{\bkmkstart AAAAAAAIWN}{\bkmkend AAAAAAAIWN}
00031         sawRParen |= (t.type==TokenType::RParen);\par
{\bkmkstart AAAAAAAIWQ}{\bkmkend AAAAAAAIWQ}
00032         sawComma  |= (t.type==TokenType::Comma);\par
{\bkmkstart AAAAAAAIWT}{\bkmkend AAAAAAAIWT}
00033     \}\par
{\bkmkstart AAAAAAAIWU}{\bkmkend AAAAAAAIWU}
00034     EXPECT_TRUE(sawString);\par
{\bkmkstart AAAAAAAIWY}{\bkmkend AAAAAAAIWY}
00035     EXPECT_TRUE(sawMinus);\par
{\bkmkstart AAAAAAAIXA}{\bkmkend AAAAAAAIXA}
00036     EXPECT_TRUE(sawStar);\par
{\bkmkstart AAAAAAAIXC}{\bkmkend AAAAAAAIXC}
00037     EXPECT_TRUE(sawSlash);\par
{\bkmkstart AAAAAAAIXE}{\bkmkend AAAAAAAIXE}
00038     EXPECT_TRUE(sawLParen);\par
{\bkmkstart AAAAAAAIXG}{\bkmkend AAAAAAAIXG}
00039     EXPECT_TRUE(sawRParen);\par
{\bkmkstart AAAAAAAIXJ}{\bkmkend AAAAAAAIXJ}
00040     EXPECT_TRUE(sawComma);\par
{\bkmkstart AAAAAAAIXL}{\bkmkend AAAAAAAIXL}
00041 \}\par
{\bkmkstart AAAAAAAIXM}{\bkmkend AAAAAAAIXM}
00042 \par
{\bkmkstart AAAAAAAIXN}{\bkmkend AAAAAAAIXN}
00043 {\cf20 // Additional lexer micro-cases: bare identifier and same-line string termination}\par
{\bkmkstart AAAAAAAIXQ}{\bkmkend AAAAAAAIXQ}
00044 TEST(TranslatorCoverageTopOff, Lexer_Identifier_And_SimpleString)\par
{\bkmkstart AAAAAAAIXT}{\bkmkend AAAAAAAIXT}
00045 \{\par
{\bkmkstart AAAAAAAIXU}{\bkmkend AAAAAAAIXU}
00046     {\cf17 const} std::string src = {\cf22 "foo\\nPRINT \\"x\\"\\n"};\par
{\bkmkstart AAAAAAAIXX}{\bkmkend AAAAAAAIXX}
00047     {\cf17 auto} toks = Lexer(src).tokenize();\par
{\bkmkstart AAAAAAAIXZ}{\bkmkend AAAAAAAIXZ}
00048     {\cf18 bool} sawId={\cf17 false}, sawString={\cf17 false};\par
{\bkmkstart AAAAAAAIYC}{\bkmkend AAAAAAAIYC}
00049     {\cf19 for} ({\cf17 const} {\cf17 auto}& t : toks) \{\par
{\bkmkstart AAAAAAAIYF}{\bkmkend AAAAAAAIYF}
00050         sawId |= (t.type==TokenType::Identifier && t.lexeme=={\cf22 "foo"});\par
{\bkmkstart AAAAAAAIYI}{\bkmkend AAAAAAAIYI}
00051         sawString |= (t.type==TokenType::String && t.lexeme=={\cf22 "x"});\par
{\bkmkstart AAAAAAAIYL}{\bkmkend AAAAAAAIYL}
00052     \}\par
{\bkmkstart AAAAAAAIYM}{\bkmkend AAAAAAAIYM}
00053     EXPECT_TRUE(sawId);\par
{\bkmkstart AAAAAAAIYO}{\bkmkend AAAAAAAIYO}
00054     EXPECT_TRUE(sawString);\par
{\bkmkstart AAAAAAAIYP}{\bkmkend AAAAAAAIYP}
00055 \}\par
{\bkmkstart AAAAAAAIYR}{\bkmkend AAAAAAAIYR}
00056 \par
{\bkmkstart AAAAAAAIYS}{\bkmkend AAAAAAAIYS}
00057 {\cf20 // Edge case: empty string literal to ensure closing-quote branch counted}\par
{\bkmkstart AAAAAAAIYT}{\bkmkend AAAAAAAIYT}
00058 TEST(TranslatorCoverageTopOff, Lexer_EmptyString)\par
{\bkmkstart AAAAAAAIYY}{\bkmkend AAAAAAAIYY}
00059 \{\par
{\bkmkstart AAAAAAAIZA}{\bkmkend AAAAAAAIZA}
00060     {\cf17 const} std::string src = {\cf22 "PRINT \\"\\"\\n"};\par
{\bkmkstart AAAAAAAIZC}{\bkmkend AAAAAAAIZC}
00061     {\cf17 auto} toks = Lexer(src).tokenize();\par
{\bkmkstart AAAAAAAIZF}{\bkmkend AAAAAAAIZF}
00062     {\cf18 int} stringCount = 0;\par
{\bkmkstart AAAAAAAIZH}{\bkmkend AAAAAAAIZH}
00063     {\cf19 for} ({\cf17 const} {\cf17 auto}& t : toks) {\cf19 if} (t.type==TokenType::String) ++stringCount;\par
{\bkmkstart AAAAAAAIZL}{\bkmkend AAAAAAAIZL}
00064     EXPECT_EQ(stringCount, 1);\par
{\bkmkstart AAAAAAAIZM}{\bkmkend AAAAAAAIZM}
00065 \}\par
{\bkmkstart AAAAAAAIZO}{\bkmkend AAAAAAAIZO}
00066 \par
{\bkmkstart AAAAAAAIZQ}{\bkmkend AAAAAAAIZQ}
00067 {\cf20 // Covers: parse_term() loop for * and /; and codegen Let with BinaryExpr and next-label branch}\par
{\bkmkstart AAAAAAAIZS}{\bkmkend AAAAAAAIZS}
00068 TEST(TranslatorCoverageTopOff, Parser_MulDiv_And_CodegenLet)\par
{\bkmkstart AAAAAAAIZV}{\bkmkend AAAAAAAIZV}
00069 \{\par
{\bkmkstart AAAAAAAIZW}{\bkmkend AAAAAAAIZW}
00070     {\cf17 const} std::string src =\par
{\bkmkstart AAAAAAAJAA}{\bkmkend AAAAAAAJAA}
00071         {\cf22 "10 LET A = 2*3/4\\n"}\par
{\bkmkstart AAAAAAAJAC}{\bkmkend AAAAAAAJAC}
00072         {\cf22 "20 PRINT 1\\n"}; {\cf20 // ensure next_label exists after LET}\par
{\bkmkstart AAAAAAAJAD}{\bkmkend AAAAAAAJAD}
00073     {\cf17 auto} toks = Lexer(src).tokenize();\par
{\bkmkstart AAAAAAAJAE}{\bkmkend AAAAAAAJAE}
00074     Program prog = Parser(std::move(toks)).parseProgram();\par
{\bkmkstart AAAAAAAJAG}{\bkmkend AAAAAAAJAG}
00075 \par
{\bkmkstart AAAAAAAJAH}{\bkmkend AAAAAAAJAH}
00076     {\cf20 // Basic sanity}\par
{\bkmkstart AAAAAAAJAI}{\bkmkend AAAAAAAJAI}
00077     ASSERT_EQ(prog.stmts.size(), 2u);\par
{\bkmkstart AAAAAAAJAK}{\bkmkend AAAAAAAJAK}
00078 \par
{\bkmkstart AAAAAAAJAL}{\bkmkend AAAAAAAJAL}
00079     {\cf20 // Emitting C++ should include the binary expression with both ops and the LET assignment}\par
{\bkmkstart AAAAAAAJAM}{\bkmkend AAAAAAAJAM}
00080     std::string out = Codegen().emit_cpp(prog);\par
{\bkmkstart AAAAAAAJAN}{\bkmkend AAAAAAAJAN}
00081     EXPECT_NE(out.find({\cf22 "var[\\"A\\"] ="}), std::string::npos);\par
{\bkmkstart AAAAAAAJAO}{\bkmkend AAAAAAAJAO}
00082     EXPECT_NE(out.find({\cf22 "*"}), std::string::npos);\par
{\bkmkstart AAAAAAAJAP}{\bkmkend AAAAAAAJAP}
00083     EXPECT_NE(out.find({\cf22 "/"}), std::string::npos);\par
{\bkmkstart AAAAAAAJAQ}{\bkmkend AAAAAAAJAQ}
00084 \}\par
{\bkmkstart AAAAAAAJAR}{\bkmkend AAAAAAAJAR}
00085 \par
{\bkmkstart AAAAAAAJAS}{\bkmkend AAAAAAAJAS}
00086 {\cf20 // Covers: parser factor unexpected token throw (line with "Unexpected token in factor")}\par
{\bkmkstart AAAAAAAJAT}{\bkmkend AAAAAAAJAT}
00087 TEST(TranslatorCoverageTopOff, Parser_UnexpectedTokenInFactor)\par
{\bkmkstart AAAAAAAJAU}{\bkmkend AAAAAAAJAU}
00088 \{\par
{\bkmkstart AAAAAAAJAW}{\bkmkend AAAAAAAJAW}
00089     {\cf20 // PRINT THEN -> when parsing expression after PRINT, first token is THEN and triggers factor error}\par
{\bkmkstart AAAAAAAJAY}{\bkmkend AAAAAAAJAY}
00090     {\cf17 const} std::string src = {\cf22 "10 PRINT THEN\\n"};\par
{\bkmkstart AAAAAAAJBC}{\bkmkend AAAAAAAJBC}
00091     {\cf17 auto} toks = Lexer(src).tokenize();\par
{\bkmkstart AAAAAAAJBD}{\bkmkend AAAAAAAJBD}
00092     Parser p(std::move(toks));\par
{\bkmkstart AAAAAAAJBE}{\bkmkend AAAAAAAJBE}
00093     EXPECT_THROW(\{ (void)p.parseProgram(); \}, std::runtime_error);\par
{\bkmkstart AAAAAAAJBG}{\bkmkend AAAAAAAJBG}
00094 \}\par
}
}