{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_safe_chrono_calculator.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_safe_chrono_calculator.cpp}
{\xe \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_safe_chrono_calculator.cpp}
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAJZ}{\bkmkend AAAAAAAAJZ}
00001 \par
{\bkmkstart AAAAAAAAKC}{\bkmkend AAAAAAAAKC}
00008 \par
{\bkmkstart AAAAAAAAKD}{\bkmkend AAAAAAAAKD}
00009 {\cf21 #include <gtest/gtest.h>}\par
{\bkmkstart AAAAAAAAKI}{\bkmkend AAAAAAAAKI}
00010 {\cf21 #include <chrono>}\par
{\bkmkstart AAAAAAAAKO}{\bkmkend AAAAAAAAKO}
00011 {\cf21 #include <thread>}\par
{\bkmkstart AAAAAAAALE}{\bkmkend AAAAAAAALE}
00012 {\cf21 #include <iostream>}\par
{\bkmkstart AAAAAAAALW}{\bkmkend AAAAAAAALW}
00013 {\cf21 #include "../src/SafeChronoCalculator.h"}\par
{\bkmkstart AAAAAAAANK}{\bkmkend AAAAAAAANK}
00014 \par
{\bkmkstart AAAAAAAANN}{\bkmkend AAAAAAAANN}
00015 {\cf17 using namespace }SafeChrono;\par
{\bkmkstart AAAAAAAANQ}{\bkmkend AAAAAAAANQ}
00016 \par
{\bkmkstart AAAAAAAANS}{\bkmkend AAAAAAAANS}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 00017}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
 : {\cf17 public} ::testing::Test \{\par
{\bkmkstart AAAAAAAAOB}{\bkmkend AAAAAAAAOB}
00018 {\cf17 protected}:\par
{\bkmkstart AAAAAAAAOF}{\bkmkend AAAAAAAAOF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOG" }{}}{\fldrslt {\cs37\ul\cf2 00019}}}
     {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOG" }{}}{\fldrslt {\cs37\ul\cf2 SetUp}}}
(){\cf17  override }\{\par
{\bkmkstart AAAAAAAAOJ}{\bkmkend AAAAAAAAOJ}
00020         {\cf20 // SafeChronoCalculator uses static methods, no instance needed}\par
{\bkmkstart AAAAAAAAOM}{\bkmkend AAAAAAAAOM}
00021     \}\par
{\bkmkstart AAAAAAAAOO}{\bkmkend AAAAAAAAOO}
00022     \par
{\bkmkstart AAAAAAAAOQ}{\bkmkend AAAAAAAAOQ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOR" }{}}{\fldrslt {\cs37\ul\cf2 00023}}}
     {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOR" }{}}{\fldrslt {\cs37\ul\cf2 TearDown}}}
(){\cf17  override }\{\par
{\bkmkstart AAAAAAAAOU}{\bkmkend AAAAAAAAOU}
00024         {\cf20 // No cleanup needed for static methods}\par
{\bkmkstart AAAAAAAAOX}{\bkmkend AAAAAAAAOX}
00025     \}\par
{\bkmkstart AAAAAAAAOY}{\bkmkend AAAAAAAAOY}
00026 \};\par
{\bkmkstart AAAAAAAAPA}{\bkmkend AAAAAAAAPA}
00027 \par
{\bkmkstart AAAAAAAAPB}{\bkmkend AAAAAAAAPB}
00028 {\cf20 // Test basic safe duration calculation}\par
{\bkmkstart AAAAAAAAPC}{\bkmkend AAAAAAAAPC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 00029}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, TestSafeDurationCalculation) \{\par
{\bkmkstart AAAAAAABHB}{\bkmkend AAAAAAABHB}
00030     {\cf20 // Test normal calculation}\par
{\bkmkstart AAAAAAABHF}{\bkmkend AAAAAAABHF}
00031     {\cf17 auto} result = SafeChronoCalculator::safeCalculateDuration(1000, 1000000, 1000000000);\par
{\bkmkstart AAAAAAABHP}{\bkmkend AAAAAAABHP}
00032     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABHT}{\bkmkend AAAAAAABHT}
00033     \par
{\bkmkstart AAAAAAABHV}{\bkmkend AAAAAAABHV}
00034     {\cf20 // Test with different values}\par
{\bkmkstart AAAAAAABHY}{\bkmkend AAAAAAABHY}
00035     result = SafeChronoCalculator::safeCalculateDuration(5000, 2000000, 1000000000);\par
{\bkmkstart AAAAAAABIG}{\bkmkend AAAAAAABIG}
00036     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABIN}{\bkmkend AAAAAAABIN}
00037     \par
{\bkmkstart AAAAAAABIP}{\bkmkend AAAAAAABIP}
00038     {\cf20 // Test with large values}\par
{\bkmkstart AAAAAAABIU}{\bkmkend AAAAAAABIU}
00039     result = SafeChronoCalculator::safeCalculateDuration(1000000, 1000000, 1000000000);\par
{\bkmkstart AAAAAAABJH}{\bkmkend AAAAAAABJH}
00040     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABJN}{\bkmkend AAAAAAABJN}
00041 \}\par
{\bkmkstart AAAAAAABJP}{\bkmkend AAAAAAABJP}
00042 \par
{\bkmkstart AAAAAAABJR}{\bkmkend AAAAAAABJR}
00043 {\cf20 // Test 10MHz calculation}\par
{\bkmkstart AAAAAAABJV}{\bkmkend AAAAAAABJV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJW" }{}}{\fldrslt {\cs37\ul\cf2 00044}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, Test10MHzCalculation) \{\par
{\bkmkstart AAAAAAABKH}{\bkmkend AAAAAAABKH}
00045     {\cf17 auto} result = SafeChronoCalculator::calculateFor10MHz(1000);\par
{\bkmkstart AAAAAAABKN}{\bkmkend AAAAAAABKN}
00046     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABKR}{\bkmkend AAAAAAABKR}
00047     \par
{\bkmkstart AAAAAAABKV}{\bkmkend AAAAAAABKV}
00048     result = SafeChronoCalculator::calculateFor10MHz(10000);\par
{\bkmkstart AAAAAAABLP}{\bkmkend AAAAAAABLP}
00049     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABLT}{\bkmkend AAAAAAABLT}
00050     \par
{\bkmkstart AAAAAAABLV}{\bkmkend AAAAAAABLV}
00051     result = SafeChronoCalculator::calculateFor10MHz(100000);\par
{\bkmkstart AAAAAAABLZ}{\bkmkend AAAAAAABLZ}
00052     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABMD}{\bkmkend AAAAAAABMD}
00053 \}\par
{\bkmkstart AAAAAAABMG}{\bkmkend AAAAAAABMG}
00054 \par
{\bkmkstart AAAAAAABMJ}{\bkmkend AAAAAAABMJ}
00055 {\cf20 // Test 24MHz calculation}\par
{\bkmkstart AAAAAAABML}{\bkmkend AAAAAAABML}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMN" }{}}{\fldrslt {\cs37\ul\cf2 00056}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, Test24MHzCalculation) \{\par
{\bkmkstart AAAAAAABMY}{\bkmkend AAAAAAABMY}
00057     {\cf17 auto} result = SafeChronoCalculator::calculateFor24MHz(1000);\par
{\bkmkstart AAAAAAABNH}{\bkmkend AAAAAAABNH}
00058     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABNO}{\bkmkend AAAAAAABNO}
00059     \par
{\bkmkstart AAAAAAABNQ}{\bkmkend AAAAAAABNQ}
00060     result = SafeChronoCalculator::calculateFor24MHz(10000);\par
{\bkmkstart AAAAAAABOB}{\bkmkend AAAAAAABOB}
00061     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABOH}{\bkmkend AAAAAAABOH}
00062     \par
{\bkmkstart AAAAAAABOK}{\bkmkend AAAAAAABOK}
00063     result = SafeChronoCalculator::calculateFor24MHz(100000);\par
{\bkmkstart AAAAAAABOR}{\bkmkend AAAAAAABOR}
00064     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABOX}{\bkmkend AAAAAAABOX}
00065 \}\par
{\bkmkstart AAAAAAABPA}{\bkmkend AAAAAAABPA}
00066 \par
{\bkmkstart AAAAAAABPD}{\bkmkend AAAAAAABPD}
00067 {\cf20 // Test overflow detection}\par
{\bkmkstart AAAAAAABPH}{\bkmkend AAAAAAABPH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPI" }{}}{\fldrslt {\cs37\ul\cf2 00068}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, TestOverflowDetection) \{\par
{\bkmkstart AAAAAAABQB}{\bkmkend AAAAAAABQB}
00069     {\cf20 // Test no overflow}\par
{\bkmkstart AAAAAAABQF}{\bkmkend AAAAAAABQF}
00070     {\cf18 bool} wouldOverflow = SafeChronoCalculator::wouldOverflow(1000, 1000);\par
{\bkmkstart AAAAAAABQO}{\bkmkend AAAAAAABQO}
00071     EXPECT_FALSE(wouldOverflow);\par
{\bkmkstart AAAAAAABQS}{\bkmkend AAAAAAABQS}
00072     \par
{\bkmkstart AAAAAAABQU}{\bkmkend AAAAAAABQU}
00073     {\cf20 // Test with zero values}\par
{\bkmkstart AAAAAAABQY}{\bkmkend AAAAAAABQY}
00074     wouldOverflow = SafeChronoCalculator::wouldOverflow(0, 1000);\par
{\bkmkstart AAAAAAABRD}{\bkmkend AAAAAAABRD}
00075     EXPECT_FALSE(wouldOverflow);\par
{\bkmkstart AAAAAAABRK}{\bkmkend AAAAAAABRK}
00076     \par
{\bkmkstart AAAAAAABRM}{\bkmkend AAAAAAABRM}
00077     wouldOverflow = SafeChronoCalculator::wouldOverflow(1000, 0);\par
{\bkmkstart AAAAAAABRR}{\bkmkend AAAAAAABRR}
00078     EXPECT_FALSE(wouldOverflow);\par
{\bkmkstart AAAAAAABRU}{\bkmkend AAAAAAABRU}
00079     \par
{\bkmkstart AAAAAAABRY}{\bkmkend AAAAAAABRY}
00080     {\cf20 // Test with large values that might overflow}\par
{\bkmkstart AAAAAAABRZ}{\bkmkend AAAAAAABRZ}
00081     {\cf18 long} {\cf18 long} largeValue = std::numeric_limits<long long>::max() / 2;\par
{\bkmkstart AAAAAAABTV}{\bkmkend AAAAAAABTV}
00082     wouldOverflow = SafeChronoCalculator::wouldOverflow(largeValue, 3);\par
{\bkmkstart AAAAAAABUF}{\bkmkend AAAAAAABUF}
00083     EXPECT_TRUE(wouldOverflow);\par
{\bkmkstart AAAAAAABUN}{\bkmkend AAAAAAABUN}
00084     \par
{\bkmkstart AAAAAAABUS}{\bkmkend AAAAAAABUS}
00085     {\cf20 // Test with negative values}\par
{\bkmkstart AAAAAAABUV}{\bkmkend AAAAAAABUV}
00086     wouldOverflow = SafeChronoCalculator::wouldOverflow(-1000, 1000);\par
{\bkmkstart AAAAAAABVE}{\bkmkend AAAAAAABVE}
00087     EXPECT_FALSE(wouldOverflow);\par
{\bkmkstart AAAAAAABVI}{\bkmkend AAAAAAABVI}
00088     \par
{\bkmkstart AAAAAAABVK}{\bkmkend AAAAAAABVK}
00089     wouldOverflow = SafeChronoCalculator::wouldOverflow(1000, -1000);\par
{\bkmkstart AAAAAAABVU}{\bkmkend AAAAAAABVU}
00090     EXPECT_FALSE(wouldOverflow);\par
{\bkmkstart AAAAAAABVX}{\bkmkend AAAAAAABVX}
00091     \par
{\bkmkstart AAAAAAABWA}{\bkmkend AAAAAAABWA}
00092     wouldOverflow = SafeChronoCalculator::wouldOverflow(-1000, -1000);\par
{\bkmkstart AAAAAAABWI}{\bkmkend AAAAAAABWI}
00093     EXPECT_FALSE(wouldOverflow);\par
{\bkmkstart AAAAAAABWN}{\bkmkend AAAAAAABWN}
00094 \}\par
{\bkmkstart AAAAAAABWP}{\bkmkend AAAAAAABWP}
00095 \par
{\bkmkstart AAAAAAABWR}{\bkmkend AAAAAAABWR}
00096 {\cf20 // Test error handling}\par
{\bkmkstart AAAAAAABWT}{\bkmkend AAAAAAABWT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWV" }{}}{\fldrslt {\cs37\ul\cf2 00097}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, TestErrorHandling) \{\par
{\bkmkstart AAAAAAABXI}{\bkmkend AAAAAAABXI}
00098     {\cf20 // Test invalid frequency}\par
{\bkmkstart AAAAAAABXM}{\bkmkend AAAAAAABXM}
00099     EXPECT_THROW(SafeChronoCalculator::safeCalculateDuration(1000, 0, 1000000000), std::invalid_argument);\par
{\bkmkstart AAAAAAABXU}{\bkmkend AAAAAAABXU}
00100     EXPECT_THROW(SafeChronoCalculator::safeCalculateDuration(1000, -1000, 1000000000), std::invalid_argument);\par
{\bkmkstart AAAAAAABYC}{\bkmkend AAAAAAABYC}
00101     \par
{\bkmkstart AAAAAAABYE}{\bkmkend AAAAAAABYE}
00102     {\cf20 // Test invalid period denominator}\par
{\bkmkstart AAAAAAABYH}{\bkmkend AAAAAAABYH}
00103     EXPECT_THROW(SafeChronoCalculator::safeCalculateDuration(1000, 1000000, 0), std::invalid_argument);\par
{\bkmkstart AAAAAAABYO}{\bkmkend AAAAAAABYO}
00104     EXPECT_THROW(SafeChronoCalculator::safeCalculateDuration(1000, 1000000, -1000), std::invalid_argument);\par
{\bkmkstart AAAAAAABYV}{\bkmkend AAAAAAABYV}
00105 \}\par
{\bkmkstart AAAAAAABYX}{\bkmkend AAAAAAABYX}
00106 \par
{\bkmkstart AAAAAAABYY}{\bkmkend AAAAAAABYY}
00107 {\cf20 // Test edge cases}\par
{\bkmkstart AAAAAAABZC}{\bkmkend AAAAAAABZC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZE" }{}}{\fldrslt {\cs37\ul\cf2 00108}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, TestEdgeCases) \{\par
{\bkmkstart AAAAAAABZK}{\bkmkend AAAAAAABZK}
00109     {\cf20 // Test with very small values}\par
{\bkmkstart AAAAAAABZM}{\bkmkend AAAAAAABZM}
00110     {\cf17 auto} result = SafeChronoCalculator::safeCalculateDuration(1, 1000000, 1000000000);\par
{\bkmkstart AAAAAAABZV}{\bkmkend AAAAAAABZV}
00111     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAABZX}{\bkmkend AAAAAAABZX}
00112     \par
{\bkmkstart AAAAAAACAA}{\bkmkend AAAAAAACAA}
00113     {\cf20 // Test with zero counter}\par
{\bkmkstart AAAAAAACAB}{\bkmkend AAAAAAACAB}
00114     result = SafeChronoCalculator::safeCalculateDuration(0, 1000000, 1000000000);\par
{\bkmkstart AAAAAAACAD}{\bkmkend AAAAAAACAD}
00115     EXPECT_EQ(result.count(), 0);\par
{\bkmkstart AAAAAAACAG}{\bkmkend AAAAAAACAG}
00116     \par
{\bkmkstart AAAAAAACAK}{\bkmkend AAAAAAACAK}
00117     {\cf20 // Test with maximum safe values}\par
{\bkmkstart AAAAAAACAO}{\bkmkend AAAAAAACAO}
00118     {\cf18 long} {\cf18 long} maxSafe = std::numeric_limits<long long>::max() / 2;\par
{\bkmkstart AAAAAAACBL}{\bkmkend AAAAAAACBL}
00119     result = SafeChronoCalculator::safeCalculateDuration(maxSafe, 1000000, 1000000000);\par
{\bkmkstart AAAAAAACBT}{\bkmkend AAAAAAACBT}
00120     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAACBV}{\bkmkend AAAAAAACBV}
00121 \}\par
{\bkmkstart AAAAAAACBY}{\bkmkend AAAAAAACBY}
00122 \par
{\bkmkstart AAAAAAACCB}{\bkmkend AAAAAAACCB}
00123 {\cf20 // Test performance}\par
{\bkmkstart AAAAAAACCF}{\bkmkend AAAAAAACCF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCG" }{}}{\fldrslt {\cs37\ul\cf2 00124}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, TestPerformance) \{\par
{\bkmkstart AAAAAAACCJ}{\bkmkend AAAAAAACCJ}
00125     {\cf17 auto} start = std::chrono::high_resolution_clock::now();\par
{\bkmkstart AAAAAAACCL}{\bkmkend AAAAAAACCL}
00126     \par
{\bkmkstart AAAAAAACCM}{\bkmkend AAAAAAACCM}
00127     {\cf20 // Perform many calculations}\par
{\bkmkstart AAAAAAACCP}{\bkmkend AAAAAAACCP}
00128     {\cf19 for} ({\cf18 int} i = 0; i < 10000; ++i) \{\par
{\bkmkstart AAAAAAACCR}{\bkmkend AAAAAAACCR}
00129         {\cf17 auto} result = SafeChronoCalculator::safeCalculateDuration(i, 1000000, 1000000000);\par
{\bkmkstart AAAAAAACCW}{\bkmkend AAAAAAACCW}
00130         EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAACDA}{\bkmkend AAAAAAACDA}
00131     \}\par
{\bkmkstart AAAAAAACDB}{\bkmkend AAAAAAACDB}
00132     \par
{\bkmkstart AAAAAAACDC}{\bkmkend AAAAAAACDC}
00133     {\cf17 auto} end = std::chrono::high_resolution_clock::now();\par
{\bkmkstart AAAAAAACDG}{\bkmkend AAAAAAACDG}
00134     {\cf17 auto} duration = std::chrono::duration_cast<std::chrono::milliseconds>(end - start);\par
{\bkmkstart AAAAAAACDK}{\bkmkend AAAAAAACDK}
00135     \par
{\bkmkstart AAAAAAACDL}{\bkmkend AAAAAAACDL}
00136     {\cf20 // Should complete in reasonable time}\par
{\bkmkstart AAAAAAACDN}{\bkmkend AAAAAAACDN}
00137     EXPECT_LT(duration.count(), 1000); {\cf20 // Less than 1 second}\par
{\bkmkstart AAAAAAACDQ}{\bkmkend AAAAAAACDQ}
00138 \}\par
{\bkmkstart AAAAAAACDS}{\bkmkend AAAAAAACDS}
00139 \par
{\bkmkstart AAAAAAACDU}{\bkmkend AAAAAAACDU}
00140 {\cf20 // Test different frequency combinations}\par
{\bkmkstart AAAAAAACDX}{\bkmkend AAAAAAACDX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 00141}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, TestDifferentFrequencies) \{\par
{\bkmkstart AAAAAAACEF}{\bkmkend AAAAAAACEF}
00142     {\cf20 // Test with 1MHz}\par
{\bkmkstart AAAAAAACEL}{\bkmkend AAAAAAACEL}
00143     {\cf17 auto} result = SafeChronoCalculator::safeCalculateDuration(1000, 1000000, 1000000000);\par
{\bkmkstart AAAAAAACEP}{\bkmkend AAAAAAACEP}
00144     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAACET}{\bkmkend AAAAAAACET}
00145     \par
{\bkmkstart AAAAAAACEV}{\bkmkend AAAAAAACEV}
00146     {\cf20 // Test with 5MHz}\par
{\bkmkstart AAAAAAACEW}{\bkmkend AAAAAAACEW}
00147     result = SafeChronoCalculator::safeCalculateDuration(1000, 5000000, 1000000000);\par
{\bkmkstart AAAAAAACFB}{\bkmkend AAAAAAACFB}
00148     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAACFD}{\bkmkend AAAAAAACFD}
00149     \par
{\bkmkstart AAAAAAACFF}{\bkmkend AAAAAAACFF}
00150     {\cf20 // Test with 50MHz}\par
{\bkmkstart AAAAAAACFM}{\bkmkend AAAAAAACFM}
00151     result = SafeChronoCalculator::safeCalculateDuration(1000, 50000000, 1000000000);\par
{\bkmkstart AAAAAAACFR}{\bkmkend AAAAAAACFR}
00152     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAACFS}{\bkmkend AAAAAAACFS}
00153     \par
{\bkmkstart AAAAAAACFU}{\bkmkend AAAAAAACFU}
00154     {\cf20 // Test with 100MHz}\par
{\bkmkstart AAAAAAACFW}{\bkmkend AAAAAAACFW}
00155     result = SafeChronoCalculator::safeCalculateDuration(1000, 100000000, 1000000000);\par
{\bkmkstart AAAAAAACGC}{\bkmkend AAAAAAACGC}
00156     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAACGH}{\bkmkend AAAAAAACGH}
00157 \}\par
{\bkmkstart AAAAAAACGL}{\bkmkend AAAAAAACGL}
00158 \par
{\bkmkstart AAAAAAACGN}{\bkmkend AAAAAAACGN}
00159 {\cf20 // Test overflow error handling}\par
{\bkmkstart AAAAAAACGR}{\bkmkend AAAAAAACGR}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGT" }{}}{\fldrslt {\cs37\ul\cf2 00160}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, TestOverflowErrorHandling) \{\par
{\bkmkstart AAAAAAACGZ}{\bkmkend AAAAAAACGZ}
00161     {\cf20 // Test with values that would cause overflow}\par
{\bkmkstart AAAAAAACHA}{\bkmkend AAAAAAACHA}
00162     {\cf18 long} {\cf18 long} veryLargeCounter = std::numeric_limits<long long>::max();\par
{\bkmkstart AAAAAAACIH}{\bkmkend AAAAAAACIH}
00163     {\cf18 long} {\cf18 long} veryLargeFrequency = 1;\par
{\bkmkstart AAAAAAACIN}{\bkmkend AAAAAAACIN}
00164     {\cf18 long} {\cf18 long} veryLargePeriodDen = std::numeric_limits<long long>::max();\par
{\bkmkstart AAAAAAACJI}{\bkmkend AAAAAAACJI}
00165     \par
{\bkmkstart AAAAAAACJK}{\bkmkend AAAAAAACJK}
00166     EXPECT_THROW(SafeChronoCalculator::safeCalculateDuration(veryLargeCounter, veryLargeFrequency, veryLargePeriodDen), std::overflow_error);\par
{\bkmkstart AAAAAAACJQ}{\bkmkend AAAAAAACJQ}
00167 \}\par
{\bkmkstart AAAAAAACJS}{\bkmkend AAAAAAACJS}
00168 \par
{\bkmkstart AAAAAAACJU}{\bkmkend AAAAAAACJU}
00169 {\cf20 // Test consistency}\par
{\bkmkstart AAAAAAACJZ}{\bkmkend AAAAAAACJZ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKA" }{}}{\fldrslt {\cs37\ul\cf2 00170}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, TestConsistency) \{\par
{\bkmkstart AAAAAAACKL}{\bkmkend AAAAAAACKL}
00171     {\cf20 // Test that same inputs give same outputs}\par
{\bkmkstart AAAAAAACKO}{\bkmkend AAAAAAACKO}
00172     {\cf17 auto} result1 = SafeChronoCalculator::safeCalculateDuration(1000, 1000000, 1000000000);\par
{\bkmkstart AAAAAAACKU}{\bkmkend AAAAAAACKU}
00173     {\cf17 auto} result2 = SafeChronoCalculator::safeCalculateDuration(1000, 1000000, 1000000000);\par
{\bkmkstart AAAAAAACKZ}{\bkmkend AAAAAAACKZ}
00174     EXPECT_EQ(result1.count(), result2.count());\par
{\bkmkstart AAAAAAACLC}{\bkmkend AAAAAAACLC}
00175     \par
{\bkmkstart AAAAAAACLD}{\bkmkend AAAAAAACLD}
00176     {\cf20 // Test that 10MHz and 24MHz give different results for same counter}\par
{\bkmkstart AAAAAAACLG}{\bkmkend AAAAAAACLG}
00177     {\cf17 auto} result10MHz = SafeChronoCalculator::calculateFor10MHz(1000);\par
{\bkmkstart AAAAAAACLI}{\bkmkend AAAAAAACLI}
00178     {\cf17 auto} result24MHz = SafeChronoCalculator::calculateFor24MHz(1000);\par
{\bkmkstart AAAAAAACLM}{\bkmkend AAAAAAACLM}
00179     EXPECT_NE(result10MHz.count(), result24MHz.count());\par
{\bkmkstart AAAAAAACLQ}{\bkmkend AAAAAAACLQ}
00180 \}\par
{\bkmkstart AAAAAAACLR}{\bkmkend AAAAAAACLR}
00181 \par
{\bkmkstart AAAAAAACLU}{\bkmkend AAAAAAACLU}
00182 {\cf20 // Test boundary values}\par
{\bkmkstart AAAAAAACLX}{\bkmkend AAAAAAACLX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACLY" }{}}{\fldrslt {\cs37\ul\cf2 00183}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 SafeChronoCalculatorTest}}}
, TestBoundaryValues) \{\par
{\bkmkstart AAAAAAACMD}{\bkmkend AAAAAAACMD}
00184     {\cf20 // Test with minimum positive values}\par
{\bkmkstart AAAAAAACMF}{\bkmkend AAAAAAACMF}
00185     {\cf17 auto} result = SafeChronoCalculator::safeCalculateDuration(1, 1, 1);\par
{\bkmkstart AAAAAAACML}{\bkmkend AAAAAAACML}
00186     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAACMN}{\bkmkend AAAAAAACMN}
00187     \par
{\bkmkstart AAAAAAACMP}{\bkmkend AAAAAAACMP}
00188     {\cf20 // Test with maximum safe values}\par
{\bkmkstart AAAAAAACMS}{\bkmkend AAAAAAACMS}
00189     {\cf18 long} {\cf18 long} maxSafe = std::numeric_limits<long long>::max() / 4;\par
{\bkmkstart AAAAAAACNV}{\bkmkend AAAAAAACNV}
00190     result = SafeChronoCalculator::safeCalculateDuration(maxSafe, 1000000, 1000000000);\par
{\bkmkstart AAAAAAACOA}{\bkmkend AAAAAAACOA}
00191     EXPECT_GT(result.count(), 0);\par
{\bkmkstart AAAAAAACOB}{\bkmkend AAAAAAACOB}
00192 \}\par
}
}