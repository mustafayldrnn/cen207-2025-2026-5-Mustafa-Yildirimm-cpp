{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_language_translator_comprehensive.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_language_translator_comprehensive.cpp}
{\xe \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_language_translator_comprehensive.cpp}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACS" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAEY}{\bkmkend AAAAAAAAEY}
00001 \par
{\bkmkstart AAAAAAAAFD}{\bkmkend AAAAAAAAFD}
00008 \par
{\bkmkstart AAAAAAAAFE}{\bkmkend AAAAAAAAFE}
00009 {\cf21 #include <gtest/gtest.h>}\par
{\bkmkstart AAAAAAAAFF}{\bkmkend AAAAAAAAFF}
00010 {\cf21 #include <fstream>}\par
{\bkmkstart AAAAAAAAFG}{\bkmkend AAAAAAAAFG}
00011 {\cf21 #include <sstream>}\par
{\bkmkstart AAAAAAAAFH}{\bkmkend AAAAAAAAFH}
00012 {\cf21 #include <filesystem>}\par
{\bkmkstart AAAAAAAAFI}{\bkmkend AAAAAAAAFI}
00013 {\cf21 #include "../src/LanguageTranslator/header/LanguageTranslator.h"}\par
{\bkmkstart AAAAAAAAFJ}{\bkmkend AAAAAAAAFJ}
00014 \par
{\bkmkstart AAAAAAAAFK}{\bkmkend AAAAAAAAFK}
00015 {\cf17 using namespace }Coruh::LanguageTranslator;\par
{\bkmkstart AAAAAAAAFU}{\bkmkend AAAAAAAAFU}
00016 \par
{\bkmkstart AAAAAAAAFV}{\bkmkend AAAAAAAAFV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 00017}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
 : {\cf17 public} ::testing::Test \{\par
{\bkmkstart AAAAAAAAFX}{\bkmkend AAAAAAAAFX}
00018 {\cf17 protected}:\par
{\bkmkstart AAAAAAAAFY}{\bkmkend AAAAAAAAFY}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 00019}}}
     {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 SetUp}}}
(){\cf17  override }\{\par
{\bkmkstart AAAAAAAAGB}{\bkmkend AAAAAAAAGB}
00020         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 app}}}
 = std::make_unique<LanguageTranslatorApp>();\par
{\bkmkstart AAAAAAAAGJ}{\bkmkend AAAAAAAAGJ}
00021     \}\par
{\bkmkstart AAAAAAAAGK}{\bkmkend AAAAAAAAGK}
00022     \par
{\bkmkstart AAAAAAAAGL}{\bkmkend AAAAAAAAGL}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 00023}}}
     {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 TearDown}}}
(){\cf17  override }\{\par
{\bkmkstart AAAAAAAAGQ}{\bkmkend AAAAAAAAGQ}
00024         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 app}}}
.reset();\par
{\bkmkstart AAAAAAAAGT}{\bkmkend AAAAAAAAGT}
00025     \}\par
{\bkmkstart AAAAAAAAGV}{\bkmkend AAAAAAAAGV}
00026     \par
{\bkmkstart AAAAAAAAGW}{\bkmkend AAAAAAAAGW}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 00027}}}
     std::unique_ptr<LanguageTranslatorApp> {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 app}}}
;\par
{\bkmkstart AAAAAAAAHC}{\bkmkend AAAAAAAAHC}
00028 \};\par
{\bkmkstart AAAAAAAAHD}{\bkmkend AAAAAAAAHD}
00029 \par
{\bkmkstart AAAAAAAAHE}{\bkmkend AAAAAAAAHE}
00030 {\cf20 // Test constructor and basic initialization}\par
{\bkmkstart AAAAAAAAHF}{\bkmkend AAAAAAAAHF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 00031}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestConstructor) \{\par
{\bkmkstart AAAAAAABYG}{\bkmkend AAAAAAABYG}
00032     EXPECT_FALSE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAABYK}{\bkmkend AAAAAAABYK}
00033     EXPECT_EQ(app->getSupportedLanguages().size(), 4); {\cf20 // English, Turkish, Spanish, French}\par
{\bkmkstart AAAAAAABYP}{\bkmkend AAAAAAABYP}
00034 \}\par
{\bkmkstart AAAAAAABYQ}{\bkmkend AAAAAAABYQ}
00035 \par
{\bkmkstart AAAAAAABYR}{\bkmkend AAAAAAABYR}
00036 {\cf20 // Test language management functions}\par
{\bkmkstart AAAAAAABYS}{\bkmkend AAAAAAABYS}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYT" }{}}{\fldrslt {\cs37\ul\cf2 00037}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestLanguageManagement) \{\par
{\bkmkstart AAAAAAABYX}{\bkmkend AAAAAAABYX}
00038     {\cf20 // Test setSourceLanguage}\par
{\bkmkstart AAAAAAABYZ}{\bkmkend AAAAAAABYZ}
00039     app->setSourceLanguage({\cf22 "Spanish"});\par
{\bkmkstart AAAAAAABZA}{\bkmkend AAAAAAABZA}
00040     app->setTargetLanguage({\cf22 "French"});\par
{\bkmkstart AAAAAAABZC}{\bkmkend AAAAAAABZC}
00041     \par
{\bkmkstart AAAAAAABZD}{\bkmkend AAAAAAABZD}
00042     {\cf20 // Test addLanguage}\par
{\bkmkstart AAAAAAABZE}{\bkmkend AAAAAAABZE}
00043     app->addLanguage({\cf22 "German"});\par
{\bkmkstart AAAAAAABZF}{\bkmkend AAAAAAABZF}
00044     {\cf17 auto} languages = app->getSupportedLanguages();\par
{\bkmkstart AAAAAAABZH}{\bkmkend AAAAAAABZH}
00045     EXPECT_TRUE(std::find(languages.begin(), languages.end(), {\cf22 "German"}) != languages.end());\par
{\bkmkstart AAAAAAABZL}{\bkmkend AAAAAAABZL}
00046 \}\par
{\bkmkstart AAAAAAABZM}{\bkmkend AAAAAAABZM}
00047 \par
{\bkmkstart AAAAAAABZO}{\bkmkend AAAAAAABZO}
00048 {\cf20 // Test user management functions}\par
{\bkmkstart AAAAAAABZP}{\bkmkend AAAAAAABZP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZQ" }{}}{\fldrslt {\cs37\ul\cf2 00049}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestUserManagement) \{\par
{\bkmkstart AAAAAAABZR}{\bkmkend AAAAAAABZR}
00050     {\cf20 // Test registration}\par
{\bkmkstart AAAAAAABZS}{\bkmkend AAAAAAABZS}
00051     EXPECT_TRUE(app->registerUser({\cf22 "testuser"}, {\cf22 "password123"}));\par
{\bkmkstart AAAAAAABZW}{\bkmkend AAAAAAABZW}
00052     EXPECT_TRUE(app->registerUser({\cf22 "testuser2"}, {\cf22 "password456"}));\par
{\bkmkstart AAAAAAABZY}{\bkmkend AAAAAAABZY}
00053     \par
{\bkmkstart AAAAAAACAA}{\bkmkend AAAAAAACAA}
00054     {\cf20 // Test login}\par
{\bkmkstart AAAAAAACAC}{\bkmkend AAAAAAACAC}
00055     EXPECT_TRUE(app->login({\cf22 "testuser"}, {\cf22 "password123"}));\par
{\bkmkstart AAAAAAACAF}{\bkmkend AAAAAAACAF}
00056     EXPECT_TRUE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAACAG}{\bkmkend AAAAAAACAG}
00057     \par
{\bkmkstart AAAAAAACAI}{\bkmkend AAAAAAACAI}
00058     {\cf20 // Test logout}\par
{\bkmkstart AAAAAAACAJ}{\bkmkend AAAAAAACAJ}
00059     app->logout();\par
{\bkmkstart AAAAAAACBM}{\bkmkend AAAAAAACBM}
00060     EXPECT_FALSE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAACBR}{\bkmkend AAAAAAACBR}
00061     \par
{\bkmkstart AAAAAAACBT}{\bkmkend AAAAAAACBT}
00062     {\cf20 // Test invalid login}\par
{\bkmkstart AAAAAAACBW}{\bkmkend AAAAAAACBW}
00063     EXPECT_FALSE(app->login({\cf22 "testuser"}, {\cf22 "wrongpassword"}));\par
{\bkmkstart AAAAAAACBZ}{\bkmkend AAAAAAACBZ}
00064     EXPECT_FALSE(app->login({\cf22 "nonexistent"}, {\cf22 "password"}));\par
{\bkmkstart AAAAAAACCD}{\bkmkend AAAAAAACCD}
00065 \}\par
{\bkmkstart AAAAAAACCE}{\bkmkend AAAAAAACCE}
00066 \par
{\bkmkstart AAAAAAACCG}{\bkmkend AAAAAAACCG}
00067 {\cf20 // Test phrase library functions}\par
{\bkmkstart AAAAAAACCJ}{\bkmkend AAAAAAACCJ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCK" }{}}{\fldrslt {\cs37\ul\cf2 00068}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestPhraseLibrary) \{\par
{\bkmkstart AAAAAAACCM}{\bkmkend AAAAAAACCM}
00069     {\cf20 // Test adding phrases}\par
{\bkmkstart AAAAAAACCN}{\bkmkend AAAAAAACCN}
00070     app->addPhrase({\cf22 "Hello, how are you?"}, {\cf22 "greetings"});\par
{\bkmkstart AAAAAAACCQ}{\bkmkend AAAAAAACCQ}
00071     app->addPhrase({\cf22 "Thank you very much"}, {\cf22 "politeness"});\par
{\bkmkstart AAAAAAACCS}{\bkmkend AAAAAAACCS}
00072     app->addPhrase({\cf22 "Where is the bathroom?"}, {\cf22 "travel"});\par
{\bkmkstart AAAAAAACCU}{\bkmkend AAAAAAACCU}
00073     \par
{\bkmkstart AAAAAAACCV}{\bkmkend AAAAAAACCV}
00074     {\cf20 // Test phrase translation}\par
{\bkmkstart AAAAAAACCX}{\bkmkend AAAAAAACCX}
00075     std::string result = app->translatePhrase({\cf22 "Hello, how are you?"});\par
{\bkmkstart AAAAAAACCZ}{\bkmkend AAAAAAACCZ}
00076     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACDC}{\bkmkend AAAAAAACDC}
00077 \}\par
{\bkmkstart AAAAAAACDD}{\bkmkend AAAAAAACDD}
00078 \par
{\bkmkstart AAAAAAACDE}{\bkmkend AAAAAAACDE}
00079 {\cf20 // Test learning tips functions}\par
{\bkmkstart AAAAAAACDF}{\bkmkend AAAAAAACDF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDG" }{}}{\fldrslt {\cs37\ul\cf2 00080}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestLearningTips) \{\par
{\bkmkstart AAAAAAACDI}{\bkmkend AAAAAAACDI}
00081     {\cf20 // Test adding learning tips}\par
{\bkmkstart AAAAAAACDJ}{\bkmkend AAAAAAACDJ}
00082     app->addLearningTip({\cf22 "Practice daily for better results"});\par
{\bkmkstart AAAAAAACDK}{\bkmkend AAAAAAACDK}
00083     app->addLearningTip({\cf22 "Use flashcards for vocabulary"});\par
{\bkmkstart AAAAAAACDL}{\bkmkend AAAAAAACDL}
00084     app->addLearningTip({\cf22 "Listen to native speakers"});\par
{\bkmkstart AAAAAAACDM}{\bkmkend AAAAAAACDM}
00085     \par
{\bkmkstart AAAAAAACDN}{\bkmkend AAAAAAACDN}
00086     {\cf20 // Test showing learning tips (should not crash)}\par
{\bkmkstart AAAAAAACDO}{\bkmkend AAAAAAACDO}
00087     EXPECT_NO_THROW(app->showLearningTips());\par
{\bkmkstart AAAAAAACDP}{\bkmkend AAAAAAACDP}
00088 \}\par
{\bkmkstart AAAAAAACDQ}{\bkmkend AAAAAAACDQ}
00089 \par
{\bkmkstart AAAAAAACDR}{\bkmkend AAAAAAACDR}
00090 {\cf20 // Test pronunciation guide functions}\par
{\bkmkstart AAAAAAACDT}{\bkmkend AAAAAAACDT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDU" }{}}{\fldrslt {\cs37\ul\cf2 00091}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestPronunciationGuide) \{\par
{\bkmkstart AAAAAAACDW}{\bkmkend AAAAAAACDW}
00092     {\cf20 // Test adding pronunciation guides}\par
{\bkmkstart AAAAAAACDX}{\bkmkend AAAAAAACDX}
00093     app->addPronunciation({\cf22 "hello"}, {\cf22 "heh-LOH"});\par
{\bkmkstart AAAAAAACDZ}{\bkmkend AAAAAAACDZ}
00094     app->addPronunciation({\cf22 "world"}, {\cf22 "wurld"});\par
{\bkmkstart AAAAAAACEB}{\bkmkend AAAAAAACEB}
00095     app->addPronunciation({\cf22 "thank you"}, {\cf22 "thangk yoo"});\par
{\bkmkstart AAAAAAACSK}{\bkmkend AAAAAAACSK}
00096     \par
{\bkmkstart AAAAAAACSM}{\bkmkend AAAAAAACSM}
00097     {\cf20 // Test showing pronunciation guide (should not crash)}\par
{\bkmkstart AAAAAAACSN}{\bkmkend AAAAAAACSN}
00098     EXPECT_NO_THROW(app->showPronunciationGuide());\par
{\bkmkstart AAAAAAACSQ}{\bkmkend AAAAAAACSQ}
00099 \}\par
{\bkmkstart AAAAAAACSS}{\bkmkend AAAAAAACSS}
00100 \par
{\bkmkstart AAAAAAACSU}{\bkmkend AAAAAAACSU}
00101 {\cf20 // Test data management functions}\par
{\bkmkstart AAAAAAACSX}{\bkmkend AAAAAAACSX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSY" }{}}{\fldrslt {\cs37\ul\cf2 00102}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestDataManagement) \{\par
{\bkmkstart AAAAAAACSZ}{\bkmkend AAAAAAACSZ}
00103     {\cf20 // Test initializeDefaultData (should not crash)}\par
{\bkmkstart AAAAAAACTA}{\bkmkend AAAAAAACTA}
00104     EXPECT_NO_THROW(app->initializeDefaultData());\par
{\bkmkstart AAAAAAACTB}{\bkmkend AAAAAAACTB}
00105     \par
{\bkmkstart AAAAAAACTC}{\bkmkend AAAAAAACTC}
00106     {\cf20 // Test saveData (should not crash)}\par
{\bkmkstart AAAAAAACTD}{\bkmkend AAAAAAACTD}
00107     EXPECT_NO_THROW(app->saveData());\par
{\bkmkstart AAAAAAACTE}{\bkmkend AAAAAAACTE}
00108     \par
{\bkmkstart AAAAAAACTF}{\bkmkend AAAAAAACTF}
00109     {\cf20 // Test loadData (should not crash)}\par
{\bkmkstart AAAAAAACTH}{\bkmkend AAAAAAACTH}
00110     EXPECT_NO_THROW(app->loadData());\par
{\bkmkstart AAAAAAACTI}{\bkmkend AAAAAAACTI}
00111 \}\par
{\bkmkstart AAAAAAACTJ}{\bkmkend AAAAAAACTJ}
00112 \par
{\bkmkstart AAAAAAACTK}{\bkmkend AAAAAAACTK}
00113 {\cf20 // Test dictionary management functions}\par
{\bkmkstart AAAAAAACTL}{\bkmkend AAAAAAACTL}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTM" }{}}{\fldrslt {\cs37\ul\cf2 00114}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestDictionaryManagement) \{\par
{\bkmkstart AAAAAAACTN}{\bkmkend AAAAAAACTN}
00115     {\cf20 // Test loadAllDictionaries (should not crash)}\par
{\bkmkstart AAAAAAACTP}{\bkmkend AAAAAAACTP}
00116     EXPECT_NO_THROW(app->loadAllDictionaries());\par
{\bkmkstart AAAAAAACTQ}{\bkmkend AAAAAAACTQ}
00117     \par
{\bkmkstart AAAAAAACTR}{\bkmkend AAAAAAACTR}
00118     {\cf20 // Test loadDictionaryFromFile with non-existent file}\par
{\bkmkstart AAAAAAACTT}{\bkmkend AAAAAAACTT}
00119     EXPECT_FALSE(app->loadDictionaryFromFile({\cf22 "English"}, {\cf22 "German"}, {\cf22 "nonexistent.txt"}));\par
{\bkmkstart AAAAAAACTX}{\bkmkend AAAAAAACTX}
00120     \par
{\bkmkstart AAAAAAACTY}{\bkmkend AAAAAAACTY}
00121     {\cf20 // Test loadDictionaryFromFile with valid file (if it exists)}\par
{\bkmkstart AAAAAAACTZ}{\bkmkend AAAAAAACTZ}
00122     std::filesystem::create_directory({\cf22 "dictionaries"});\par
{\bkmkstart AAAAAAACUC}{\bkmkend AAAAAAACUC}
00123     std::ofstream testFile({\cf22 "dictionaries/test_en_de.txt"});\par
{\bkmkstart AAAAAAACUD}{\bkmkend AAAAAAACUD}
00124     testFile << {\cf22 "hello=halo\\nworld=welt\\n"};\par
{\bkmkstart AAAAAAACUE}{\bkmkend AAAAAAACUE}
00125     testFile.close();\par
{\bkmkstart AAAAAAACUG}{\bkmkend AAAAAAACUG}
00126     \par
{\bkmkstart AAAAAAACUH}{\bkmkend AAAAAAACUH}
00127     EXPECT_TRUE(app->loadDictionaryFromFile({\cf22 "English"}, {\cf22 "German"}, {\cf22 "dictionaries/test_en_de.txt"}));\par
{\bkmkstart AAAAAAACUJ}{\bkmkend AAAAAAACUJ}
00128     \par
{\bkmkstart AAAAAAACUL}{\bkmkend AAAAAAACUL}
00129     {\cf20 // Clean up}\par
{\bkmkstart AAAAAAACUM}{\bkmkend AAAAAAACUM}
00130     std::filesystem::remove({\cf22 "dictionaries/test_en_de.txt"});\par
{\bkmkstart AAAAAAACUP}{\bkmkend AAAAAAACUP}
00131 \}\par
{\bkmkstart AAAAAAACUQ}{\bkmkend AAAAAAACUQ}
00132 \par
{\bkmkstart AAAAAAACUS}{\bkmkend AAAAAAACUS}
00133 {\cf20 // Test API functions}\par
{\bkmkstart AAAAAAACUT}{\bkmkend AAAAAAACUT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUU" }{}}{\fldrslt {\cs37\ul\cf2 00134}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestAPIFunctions) \{\par
{\bkmkstart AAAAAAACUV}{\bkmkend AAAAAAACUV}
00135     {\cf20 // Test isAPIAvailable}\par
{\bkmkstart AAAAAAACUX}{\bkmkend AAAAAAACUX}
00136     EXPECT_FALSE(app->isAPIAvailable());\par
{\bkmkstart AAAAAAACVA}{\bkmkend AAAAAAACVA}
00137     \par
{\bkmkstart AAAAAAACVC}{\bkmkend AAAAAAACVC}
00138     {\cf20 // Test setAPIKey}\par
{\bkmkstart AAAAAAACVD}{\bkmkend AAAAAAACVD}
00139     app->setAPIKey({\cf22 "test-api-key-123"});\par
{\bkmkstart AAAAAAACVF}{\bkmkend AAAAAAACVF}
00140     \par
{\bkmkstart AAAAAAACVI}{\bkmkend AAAAAAACVI}
00141     {\cf20 // Test setAPIMode}\par
{\bkmkstart AAAAAAACVK}{\bkmkend AAAAAAACVK}
00142     app->setAPIMode({\cf17 true});\par
{\bkmkstart AAAAAAACVM}{\bkmkend AAAAAAACVM}
00143     app->setAPIMode({\cf17 false});\par
{\bkmkstart AAAAAAACVO}{\bkmkend AAAAAAACVO}
00144     \par
{\bkmkstart AAAAAAACVP}{\bkmkend AAAAAAACVP}
00145     {\cf20 // Test Google API translation (should return empty string)}\par
{\bkmkstart AAAAAAACVQ}{\bkmkend AAAAAAACVQ}
00146     std::string result = app->translateWithGoogleAPI({\cf22 "hello"}, {\cf22 "en"}, {\cf22 "tr"});\par
{\bkmkstart AAAAAAACVT}{\bkmkend AAAAAAACVT}
00147     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAACVV}{\bkmkend AAAAAAACVV}
00148     \par
{\bkmkstart AAAAAAACVW}{\bkmkend AAAAAAACVW}
00149     {\cf20 // Test Microsoft API translation (should return empty string)}\par
{\bkmkstart AAAAAAACVX}{\bkmkend AAAAAAACVX}
00150     result = app->translateWithMicrosoftAPI({\cf22 "hello"}, {\cf22 "en"}, {\cf22 "tr"});\par
{\bkmkstart AAAAAAACWB}{\bkmkend AAAAAAACWB}
00151     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAACWC}{\bkmkend AAAAAAACWC}
00152 \}\par
{\bkmkstart AAAAAAACWD}{\bkmkend AAAAAAACWD}
00153 \par
{\bkmkstart AAAAAAACWE}{\bkmkend AAAAAAACWE}
00154 {\cf20 // Test translation functions with various inputs}\par
{\bkmkstart AAAAAAACWH}{\bkmkend AAAAAAACWH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWI" }{}}{\fldrslt {\cs37\ul\cf2 00155}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestTranslationFunctions) \{\par
{\bkmkstart AAAAAAACWM}{\bkmkend AAAAAAACWM}
00156     {\cf20 // Test translateWord}\par
{\bkmkstart AAAAAAACWN}{\bkmkend AAAAAAACWN}
00157     std::string result = app->translateWord({\cf22 "hello"});\par
{\bkmkstart AAAAAAACWQ}{\bkmkend AAAAAAACWQ}
00158     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACWS}{\bkmkend AAAAAAACWS}
00159     \par
{\bkmkstart AAAAAAACWT}{\bkmkend AAAAAAACWT}
00160     {\cf20 // Test translatePhrase}\par
{\bkmkstart AAAAAAACWU}{\bkmkend AAAAAAACWU}
00161     result = app->translatePhrase({\cf22 "good morning"});\par
{\bkmkstart AAAAAAACWY}{\bkmkend AAAAAAACWY}
00162     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACWZ}{\bkmkend AAAAAAACWZ}
00163     \par
{\bkmkstart AAAAAAACYA}{\bkmkend AAAAAAACYA}
00164     {\cf20 // Test translateText}\par
{\bkmkstart AAAAAAACYE}{\bkmkend AAAAAAACYE}
00165     result = app->translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAACYK}{\bkmkend AAAAAAACYK}
00166     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAACYN}{\bkmkend AAAAAAACYN}
00167     \par
{\bkmkstart AAAAAAACYO}{\bkmkend AAAAAAACYO}
00168     {\cf20 // Test with empty input}\par
{\bkmkstart AAAAAAADDE}{\bkmkend AAAAAAADDE}
00169     result = app->translateWord({\cf22 ""});\par
{\bkmkstart AAAAAAADDG}{\bkmkend AAAAAAADDG}
00170     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAADDJ}{\bkmkend AAAAAAADDJ}
00171     \par
{\bkmkstart AAAAAAADDM}{\bkmkend AAAAAAADDM}
00172     result = app->translatePhrase({\cf22 ""});\par
{\bkmkstart AAAAAAADDN}{\bkmkend AAAAAAADDN}
00173     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAADDP}{\bkmkend AAAAAAADDP}
00174     \par
{\bkmkstart AAAAAAADDQ}{\bkmkend AAAAAAADDQ}
00175     result = app->translateText({\cf22 ""});\par
{\bkmkstart AAAAAAADDS}{\bkmkend AAAAAAADDS}
00176     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAADDT}{\bkmkend AAAAAAADDT}
00177 \}\par
{\bkmkstart AAAAAAADDU}{\bkmkend AAAAAAADDU}
00178 \par
{\bkmkstart AAAAAAADDW}{\bkmkend AAAAAAADDW}
00179 {\cf20 // Test edge cases and error handling}\par
{\bkmkstart AAAAAAADDY}{\bkmkend AAAAAAADDY}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDZ" }{}}{\fldrslt {\cs37\ul\cf2 00180}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestEdgeCases) \{\par
{\bkmkstart AAAAAAADEA}{\bkmkend AAAAAAADEA}
00181     {\cf20 // Test with very long text}\par
{\bkmkstart AAAAAAADEB}{\bkmkend AAAAAAADEB}
00182     std::string longText(1000, {\cf23 'a'});\par
{\bkmkstart AAAAAAADEC}{\bkmkend AAAAAAADEC}
00183     std::string result = app->translateText(longText);\par
{\bkmkstart AAAAAAADED}{\bkmkend AAAAAAADED}
00184     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAADEE}{\bkmkend AAAAAAADEE}
00185     \par
{\bkmkstart AAAAAAADEF}{\bkmkend AAAAAAADEF}
00186     {\cf20 // Test with special characters}\par
{\bkmkstart AAAAAAADEG}{\bkmkend AAAAAAADEG}
00187     result = app->translateText({\cf22 "Hello, World! @#$%^&*()"});\par
{\bkmkstart AAAAAAADEH}{\bkmkend AAAAAAADEH}
00188     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAADEI}{\bkmkend AAAAAAADEI}
00189     \par
{\bkmkstart AAAAAAADEJ}{\bkmkend AAAAAAADEJ}
00190     {\cf20 // Test with numbers}\par
{\bkmkstart AAAAAAADEK}{\bkmkend AAAAAAADEK}
00191     result = app->translateText({\cf22 "123 456 789"});\par
{\bkmkstart AAAAAAADEL}{\bkmkend AAAAAAADEL}
00192     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAADEM}{\bkmkend AAAAAAADEM}
00193     \par
{\bkmkstart AAAAAAADEN}{\bkmkend AAAAAAADEN}
00194     {\cf20 // Test with mixed languages}\par
{\bkmkstart AAAAAAADEO}{\bkmkend AAAAAAADEO}
00195     result = app->translateText({\cf22 "hello merhaba hola"});\par
{\bkmkstart AAAAAAADEP}{\bkmkend AAAAAAADEP}
00196     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAADEQ}{\bkmkend AAAAAAADEQ}
00197 \}\par
{\bkmkstart AAAAAAADER}{\bkmkend AAAAAAADER}
00198 \par
{\bkmkstart AAAAAAADES}{\bkmkend AAAAAAADES}
00199 {\cf20 // Test menu and choice handling}\par
{\bkmkstart AAAAAAADET}{\bkmkend AAAAAAADET}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEU" }{}}{\fldrslt {\cs37\ul\cf2 00200}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestMenuHandling) \{\par
{\bkmkstart AAAAAAADEV}{\bkmkend AAAAAAADEV}
00201     {\cf20 // Test handleUserChoice with various inputs}\par
{\bkmkstart AAAAAAADEW}{\bkmkend AAAAAAADEW}
00202     EXPECT_NO_THROW(app->handleUserChoice(0)); {\cf20 // Exit}\par
{\bkmkstart AAAAAAADEX}{\bkmkend AAAAAAADEX}
00203     EXPECT_NO_THROW(app->handleUserChoice(1)); {\cf20 // Login/Translate}\par
{\bkmkstart AAAAAAADEY}{\bkmkend AAAAAAADEY}
00204     EXPECT_NO_THROW(app->handleUserChoice(2)); {\cf20 // Register/Change Languages}\par
{\bkmkstart AAAAAAADEZ}{\bkmkend AAAAAAADEZ}
00205     EXPECT_NO_THROW(app->handleUserChoice(3)); {\cf20 // Phrase Library}\par
{\bkmkstart AAAAAAADFA}{\bkmkend AAAAAAADFA}
00206     EXPECT_NO_THROW(app->handleUserChoice(4)); {\cf20 // Learning Tips}\par
{\bkmkstart AAAAAAADFB}{\bkmkend AAAAAAADFB}
00207     EXPECT_NO_THROW(app->handleUserChoice(5)); {\cf20 // Pronunciation Guide}\par
{\bkmkstart AAAAAAADFC}{\bkmkend AAAAAAADFC}
00208     EXPECT_NO_THROW(app->handleUserChoice(6)); {\cf20 // Logout}\par
{\bkmkstart AAAAAAADFD}{\bkmkend AAAAAAADFD}
00209     EXPECT_NO_THROW(app->handleUserChoice(99)); {\cf20 // Invalid choice}\par
{\bkmkstart AAAAAAADFE}{\bkmkend AAAAAAADFE}
00210 \}\par
{\bkmkstart AAAAAAADFF}{\bkmkend AAAAAAADFF}
00211 \par
{\bkmkstart AAAAAAADFG}{\bkmkend AAAAAAADFG}
00212 {\cf20 // Test language selection}\par
{\bkmkstart AAAAAAADFH}{\bkmkend AAAAAAADFH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFI" }{}}{\fldrslt {\cs37\ul\cf2 00213}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestLanguageSelection) \{\par
{\bkmkstart AAAAAAADFJ}{\bkmkend AAAAAAADFJ}
00214     {\cf20 // Test showLanguageSelection (should not crash)}\par
{\bkmkstart AAAAAAADFK}{\bkmkend AAAAAAADFK}
00215     EXPECT_NO_THROW(app->showLanguageSelection());\par
{\bkmkstart AAAAAAADFL}{\bkmkend AAAAAAADFL}
00216 \}\par
{\bkmkstart AAAAAAADFM}{\bkmkend AAAAAAADFM}
00217 \par
{\bkmkstart AAAAAAADFN}{\bkmkend AAAAAAADFN}
00218 {\cf20 // Test phrase library display}\par
{\bkmkstart AAAAAAADFO}{\bkmkend AAAAAAADFO}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFP" }{}}{\fldrslt {\cs37\ul\cf2 00219}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestPhraseLibraryDisplay) \{\par
{\bkmkstart AAAAAAADFQ}{\bkmkend AAAAAAADFQ}
00220     {\cf20 // Test showPhraseLibrary (should not crash)}\par
{\bkmkstart AAAAAAADFR}{\bkmkend AAAAAAADFR}
00221     EXPECT_NO_THROW(app->showPhraseLibrary());\par
{\bkmkstart AAAAAAADFS}{\bkmkend AAAAAAADFS}
00222 \}\par
{\bkmkstart AAAAAAADFT}{\bkmkend AAAAAAADFT}
00223 \par
{\bkmkstart AAAAAAADFU}{\bkmkend AAAAAAADFU}
00224 {\cf20 // Test with different language combinations}\par
{\bkmkstart AAAAAAADFV}{\bkmkend AAAAAAADFV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFW" }{}}{\fldrslt {\cs37\ul\cf2 00225}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestLanguageCombinations) \{\par
{\bkmkstart AAAAAAADFX}{\bkmkend AAAAAAADFX}
00226     {\cf20 // Test English to Turkish}\par
{\bkmkstart AAAAAAADFY}{\bkmkend AAAAAAADFY}
00227     app->setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAADFZ}{\bkmkend AAAAAAADFZ}
00228     app->setTargetLanguage({\cf22 "Turkish"});\par
{\bkmkstart AAAAAAADGA}{\bkmkend AAAAAAADGA}
00229     std::string result = app->translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAADGB}{\bkmkend AAAAAAADGB}
00230     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAADGC}{\bkmkend AAAAAAADGC}
00231     \par
{\bkmkstart AAAAAAADGD}{\bkmkend AAAAAAADGD}
00232     {\cf20 // Test English to Spanish}\par
{\bkmkstart AAAAAAADGE}{\bkmkend AAAAAAADGE}
00233     app->setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAADGF}{\bkmkend AAAAAAADGF}
00234     app->setTargetLanguage({\cf22 "Spanish"});\par
{\bkmkstart AAAAAAADGG}{\bkmkend AAAAAAADGG}
00235     result = app->translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAADGH}{\bkmkend AAAAAAADGH}
00236     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAADGI}{\bkmkend AAAAAAADGI}
00237     \par
{\bkmkstart AAAAAAADGJ}{\bkmkend AAAAAAADGJ}
00238     {\cf20 // Test English to French}\par
{\bkmkstart AAAAAAADGK}{\bkmkend AAAAAAADGK}
00239     app->setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAADGL}{\bkmkend AAAAAAADGL}
00240     app->setTargetLanguage({\cf22 "French"});\par
{\bkmkstart AAAAAAADGM}{\bkmkend AAAAAAADGM}
00241     result = app->translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAADGN}{\bkmkend AAAAAAADGN}
00242     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAADGO}{\bkmkend AAAAAAADGO}
00243     \par
{\bkmkstart AAAAAAADGP}{\bkmkend AAAAAAADGP}
00244     {\cf20 // Test Turkish to English}\par
{\bkmkstart AAAAAAADGQ}{\bkmkend AAAAAAADGQ}
00245     app->setSourceLanguage({\cf22 "Turkish"});\par
{\bkmkstart AAAAAAADGR}{\bkmkend AAAAAAADGR}
00246     app->setTargetLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAADGS}{\bkmkend AAAAAAADGS}
00247     result = app->translateText({\cf22 "merhaba dünya"});\par
{\bkmkstart AAAAAAADGT}{\bkmkend AAAAAAADGT}
00248     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAADGU}{\bkmkend AAAAAAADGU}
00249 \}\par
{\bkmkstart AAAAAAADGV}{\bkmkend AAAAAAADGV}
00250 \par
{\bkmkstart AAAAAAADGW}{\bkmkend AAAAAAADGW}
00251 {\cf20 // Test performance with large datasets}\par
{\bkmkstart AAAAAAADGX}{\bkmkend AAAAAAADGX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGY" }{}}{\fldrslt {\cs37\ul\cf2 00252}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorComprehensiveTest}}}
, TestPerformance) \{\par
{\bkmkstart AAAAAAADGZ}{\bkmkend AAAAAAADGZ}
00253     {\cf20 // Add many phrases}\par
{\bkmkstart AAAAAAADHA}{\bkmkend AAAAAAADHA}
00254     {\cf19 for} ({\cf18 int} i = 0; i < 100; ++i) \{\par
{\bkmkstart AAAAAAADHB}{\bkmkend AAAAAAADHB}
00255         app->addPhrase({\cf22 "phrase "} + std::to_string(i), {\cf22 "category"} + std::to_string(i % 5));\par
{\bkmkstart AAAAAAADHC}{\bkmkend AAAAAAADHC}
00256     \}\par
{\bkmkstart AAAAAAADHD}{\bkmkend AAAAAAADHD}
00257     \par
{\bkmkstart AAAAAAADHE}{\bkmkend AAAAAAADHE}
00258     {\cf20 // Add many learning tips}\par
{\bkmkstart AAAAAAADHF}{\bkmkend AAAAAAADHF}
00259     {\cf19 for} ({\cf18 int} i = 0; i < 50; ++i) \{\par
{\bkmkstart AAAAAAADHG}{\bkmkend AAAAAAADHG}
00260         app->addLearningTip({\cf22 "tip "} + std::to_string(i));\par
{\bkmkstart AAAAAAADHH}{\bkmkend AAAAAAADHH}
00261     \}\par
{\bkmkstart AAAAAAADHI}{\bkmkend AAAAAAADHI}
00262     \par
{\bkmkstart AAAAAAADHJ}{\bkmkend AAAAAAADHJ}
00263     {\cf20 // Add many pronunciations}\par
{\bkmkstart AAAAAAADHK}{\bkmkend AAAAAAADHK}
00264     {\cf19 for} ({\cf18 int} i = 0; i < 50; ++i) \{\par
{\bkmkstart AAAAAAADHL}{\bkmkend AAAAAAADHL}
00265         app->addPronunciation({\cf22 "word"} + std::to_string(i), {\cf22 "pronunciation"} + std::to_string(i));\par
{\bkmkstart AAAAAAADHM}{\bkmkend AAAAAAADHM}
00266     \}\par
{\bkmkstart AAAAAAADHN}{\bkmkend AAAAAAADHN}
00267     \par
{\bkmkstart AAAAAAADHO}{\bkmkend AAAAAAADHO}
00268     {\cf20 // Test that everything still works}\par
{\bkmkstart AAAAAAADHP}{\bkmkend AAAAAAADHP}
00269     EXPECT_NO_THROW(app->showPhraseLibrary());\par
{\bkmkstart AAAAAAADHQ}{\bkmkend AAAAAAADHQ}
00270     EXPECT_NO_THROW(app->showLearningTips());\par
{\bkmkstart AAAAAAADHR}{\bkmkend AAAAAAADHR}
00271     EXPECT_NO_THROW(app->showPronunciationGuide());\par
{\bkmkstart AAAAAAADHS}{\bkmkend AAAAAAADHS}
00272 \}\par
}
}