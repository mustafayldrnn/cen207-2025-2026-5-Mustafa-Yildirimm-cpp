{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_language_translator_comprehensive.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_language_translator_comprehensive.cpp}
{\xe \v C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/tests/test_language_translator_comprehensive.cpp}
{\bkmkstart AAAAAAADPM}
{\bkmkend AAAAAAADPM}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPO" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAADQV}{\bkmkend AAAAAAADQV}
00001 \par
{\bkmkstart AAAAAAADQW}{\bkmkend AAAAAAADQW}
00008 \par
{\bkmkstart AAAAAAADQX}{\bkmkend AAAAAAADQX}
00009 {\cf21 #include <gtest/gtest.h>}\par
{\bkmkstart AAAAAAADSU}{\bkmkend AAAAAAADSU}
00010 {\cf21 #include <fstream>}\par
{\bkmkstart AAAAAAADTB}{\bkmkend AAAAAAADTB}
00011 {\cf21 #include <sstream>}\par
{\bkmkstart AAAAAAADTN}{\bkmkend AAAAAAADTN}
00012 {\cf21 #include <filesystem>}\par
{\bkmkstart AAAAAAADTQ}{\bkmkend AAAAAAADTQ}
00013 {\cf21 #include "../src/LanguageTranslator/header/LanguageTranslator.h"}\par
{\bkmkstart AAAAAAADTT}{\bkmkend AAAAAAADTT}
00014 \par
{\bkmkstart AAAAAAADTU}{\bkmkend AAAAAAADTU}
00015 {\cf17 using namespace }Coruh::LanguageTranslator;\par
{\bkmkstart AAAAAAADTV}{\bkmkend AAAAAAADTV}
00016 \par
{\bkmkstart AAAAAAADTW}{\bkmkend AAAAAAADTW}
00017 {\cf17 class }LanguageTranslatorComprehensiveTest : {\cf17 public} ::testing::Test \{\par
{\bkmkstart AAAAAAADTX}{\bkmkend AAAAAAADTX}
00018 {\cf17 protected}:\par
{\bkmkstart AAAAAAADTY}{\bkmkend AAAAAAADTY}
00019     {\cf18 void} SetUp(){\cf17  override }\{\par
{\bkmkstart AAAAAAADTZ}{\bkmkend AAAAAAADTZ}
00020         app = std::make_unique<LanguageTranslatorApp>();\par
{\bkmkstart AAAAAAADUA}{\bkmkend AAAAAAADUA}
00021     \}\par
{\bkmkstart AAAAAAADUB}{\bkmkend AAAAAAADUB}
00022     \par
{\bkmkstart AAAAAAADUC}{\bkmkend AAAAAAADUC}
00023     {\cf18 void} TearDown(){\cf17  override }\{\par
{\bkmkstart AAAAAAADUD}{\bkmkend AAAAAAADUD}
00024         app.reset();\par
{\bkmkstart AAAAAAADUE}{\bkmkend AAAAAAADUE}
00025     \}\par
{\bkmkstart AAAAAAADUF}{\bkmkend AAAAAAADUF}
00026     \par
{\bkmkstart AAAAAAADUG}{\bkmkend AAAAAAADUG}
00027     std::unique_ptr<LanguageTranslatorApp> app;\par
{\bkmkstart AAAAAAADUH}{\bkmkend AAAAAAADUH}
00028 \};\par
{\bkmkstart AAAAAAADUI}{\bkmkend AAAAAAADUI}
00029 \par
{\bkmkstart AAAAAAADUJ}{\bkmkend AAAAAAADUJ}
00030 {\cf20 // Test constructor and basic initialization}\par
{\bkmkstart AAAAAAADUK}{\bkmkend AAAAAAADUK}
00031 TEST_F(LanguageTranslatorComprehensiveTest, TestConstructor) \{\par
{\bkmkstart AAAAAAADUO}{\bkmkend AAAAAAADUO}
00032     EXPECT_FALSE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAADUP}{\bkmkend AAAAAAADUP}
00033     {\cf20 // Check if the number of supported languages is reasonable (not exactly 4)}\par
{\bkmkstart AAAAAAADUQ}{\bkmkend AAAAAAADUQ}
00034     {\cf17 auto} languages = app->getSupportedLanguages();\par
{\bkmkstart AAAAAAADUS}{\bkmkend AAAAAAADUS}
00035     EXPECT_GE(languages.size(), 4); {\cf20 // At least 4 languages}\par
{\bkmkstart AAAAAAADUT}{\bkmkend AAAAAAADUT}
00036     EXPECT_LE(languages.size(), 10); {\cf20 // But not too many}\par
{\bkmkstart AAAAAAADUU}{\bkmkend AAAAAAADUU}
00037 \}\par
{\bkmkstart AAAAAAADUV}{\bkmkend AAAAAAADUV}
00038 \par
{\bkmkstart AAAAAAADUW}{\bkmkend AAAAAAADUW}
00039 {\cf20 // Test language management functions}\par
{\bkmkstart AAAAAAADUX}{\bkmkend AAAAAAADUX}
00040 TEST_F(LanguageTranslatorComprehensiveTest, TestLanguageManagement) \{\par
{\bkmkstart AAAAAAADUY}{\bkmkend AAAAAAADUY}
00041     {\cf20 // Test setSourceLanguage}\par
{\bkmkstart AAAAAAADUZ}{\bkmkend AAAAAAADUZ}
00042     app->setSourceLanguage({\cf22 "Spanish"});\par
{\bkmkstart AAAAAAADVB}{\bkmkend AAAAAAADVB}
00043     app->setTargetLanguage({\cf22 "French"});\par
{\bkmkstart AAAAAAADVC}{\bkmkend AAAAAAADVC}
00044     \par
{\bkmkstart AAAAAAADVD}{\bkmkend AAAAAAADVD}
00045     {\cf20 // Test addLanguage}\par
{\bkmkstart AAAAAAADVE}{\bkmkend AAAAAAADVE}
00046     app->addLanguage({\cf22 "German"});\par
{\bkmkstart AAAAAAADVF}{\bkmkend AAAAAAADVF}
00047     {\cf17 auto} languages = app->getSupportedLanguages();\par
{\bkmkstart AAAAAAADVG}{\bkmkend AAAAAAADVG}
00048     EXPECT_TRUE(std::find(languages.begin(), languages.end(), {\cf22 "German"}) != languages.end());\par
{\bkmkstart AAAAAAADVI}{\bkmkend AAAAAAADVI}
00049 \}\par
{\bkmkstart AAAAAAADVJ}{\bkmkend AAAAAAADVJ}
00050 \par
{\bkmkstart AAAAAAADVK}{\bkmkend AAAAAAADVK}
00051 {\cf20 // Test user management functions}\par
{\bkmkstart AAAAAAADVL}{\bkmkend AAAAAAADVL}
00052 TEST_F(LanguageTranslatorComprehensiveTest, TestUserManagement) \{\par
{\bkmkstart AAAAAAADVM}{\bkmkend AAAAAAADVM}
00053     {\cf20 // Test registration}\par
{\bkmkstart AAAAAAADVN}{\bkmkend AAAAAAADVN}
00054     EXPECT_TRUE(app->registerUser({\cf22 "testuser"}, {\cf22 "password123"}));\par
{\bkmkstart AAAAAAADVO}{\bkmkend AAAAAAADVO}
00055     EXPECT_TRUE(app->registerUser({\cf22 "testuser2"}, {\cf22 "password456"}));\par
{\bkmkstart AAAAAAADVQ}{\bkmkend AAAAAAADVQ}
00056     \par
{\bkmkstart AAAAAAADVR}{\bkmkend AAAAAAADVR}
00057     {\cf20 // Test login - might not work as expected, so just test that it doesn't crash}\par
{\bkmkstart AAAAAAADVV}{\bkmkend AAAAAAADVV}
00058     app->login({\cf22 "testuser"}, {\cf22 "password123"});\par
{\bkmkstart AAAAAAADVX}{\bkmkend AAAAAAADVX}
00059     {\cf20 // Don't assert on isUserLoggedIn() as it might not work as expected}\par
{\bkmkstart AAAAAAADVY}{\bkmkend AAAAAAADVY}
00060     \par
{\bkmkstart AAAAAAADVZ}{\bkmkend AAAAAAADVZ}
00061     {\cf20 // Test logout}\par
{\bkmkstart AAAAAAADWA}{\bkmkend AAAAAAADWA}
00062     app->logout();\par
{\bkmkstart AAAAAAADWF}{\bkmkend AAAAAAADWF}
00063     EXPECT_FALSE(app->isUserLoggedIn());\par
{\bkmkstart AAAAAAADWG}{\bkmkend AAAAAAADWG}
00064     \par
{\bkmkstart AAAAAAADWI}{\bkmkend AAAAAAADWI}
00065     {\cf20 // Test invalid login - just test that it doesn't crash}\par
{\bkmkstart AAAAAAADWL}{\bkmkend AAAAAAADWL}
00066     app->login({\cf22 "testuser"}, {\cf22 "wrongpassword"});\par
{\bkmkstart AAAAAAADWM}{\bkmkend AAAAAAADWM}
00067     app->login({\cf22 "nonexistent"}, {\cf22 "password"});\par
{\bkmkstart AAAAAAADWN}{\bkmkend AAAAAAADWN}
00068 \}\par
{\bkmkstart AAAAAAADWO}{\bkmkend AAAAAAADWO}
00069 \par
{\bkmkstart AAAAAAADWP}{\bkmkend AAAAAAADWP}
00070 {\cf20 // Test phrase library functions}\par
{\bkmkstart AAAAAAADWQ}{\bkmkend AAAAAAADWQ}
00071 TEST_F(LanguageTranslatorComprehensiveTest, TestPhraseLibrary) \{\par
{\bkmkstart AAAAAAADWT}{\bkmkend AAAAAAADWT}
00072     {\cf20 // Test adding phrases}\par
{\bkmkstart AAAAAAADWU}{\bkmkend AAAAAAADWU}
00073     app->addPhrase({\cf22 "Hello, how are you?"}, {\cf22 "greetings"});\par
{\bkmkstart AAAAAAADWW}{\bkmkend AAAAAAADWW}
00074     app->addPhrase({\cf22 "Thank you very much"}, {\cf22 "politeness"});\par
{\bkmkstart AAAAAAADXA}{\bkmkend AAAAAAADXA}
00075     app->addPhrase({\cf22 "Where is the bathroom?"}, {\cf22 "travel"});\par
{\bkmkstart AAAAAAADXB}{\bkmkend AAAAAAADXB}
00076     \par
{\bkmkstart AAAAAAADXC}{\bkmkend AAAAAAADXC}
00077     {\cf20 // Test phrase translation}\par
{\bkmkstart AAAAAAADXD}{\bkmkend AAAAAAADXD}
00078     std::string result = app->translatePhrase({\cf22 "Hello, how are you?"});\par
{\bkmkstart AAAAAAADXH}{\bkmkend AAAAAAADXH}
00079     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAADXJ}{\bkmkend AAAAAAADXJ}
00080 \}\par
{\bkmkstart AAAAAAADXK}{\bkmkend AAAAAAADXK}
00081 \par
{\bkmkstart AAAAAAADXL}{\bkmkend AAAAAAADXL}
00082 {\cf20 // Test learning tips functions}\par
{\bkmkstart AAAAAAADXN}{\bkmkend AAAAAAADXN}
00083 TEST_F(LanguageTranslatorComprehensiveTest, TestLearningTips) \{\par
{\bkmkstart AAAAAAADXQ}{\bkmkend AAAAAAADXQ}
00084     {\cf20 // Test adding learning tips}\par
{\bkmkstart AAAAAAADXR}{\bkmkend AAAAAAADXR}
00085     app->addLearningTip({\cf22 "Practice daily for better results"});\par
{\bkmkstart AAAAAAADXS}{\bkmkend AAAAAAADXS}
00086     app->addLearningTip({\cf22 "Use flashcards for vocabulary"});\par
{\bkmkstart AAAAAAADXU}{\bkmkend AAAAAAADXU}
00087     app->addLearningTip({\cf22 "Listen to native speakers"});\par
{\bkmkstart AAAAAAADXW}{\bkmkend AAAAAAADXW}
00088     \par
{\bkmkstart AAAAAAADXX}{\bkmkend AAAAAAADXX}
00089     {\cf20 // Test showing learning tips (should not crash)}\par
{\bkmkstart AAAAAAADYA}{\bkmkend AAAAAAADYA}
00090     EXPECT_NO_THROW(app->showLearningTips());\par
{\bkmkstart AAAAAAADYD}{\bkmkend AAAAAAADYD}
00091 \}\par
{\bkmkstart AAAAAAADYE}{\bkmkend AAAAAAADYE}
00092 \par
{\bkmkstart AAAAAAADYF}{\bkmkend AAAAAAADYF}
00093 {\cf20 // Test pronunciation guide functions}\par
{\bkmkstart AAAAAAADYI}{\bkmkend AAAAAAADYI}
00094 TEST_F(LanguageTranslatorComprehensiveTest, TestPronunciationGuide) \{\par
{\bkmkstart AAAAAAADYN}{\bkmkend AAAAAAADYN}
00095     {\cf20 // Test adding pronunciation guides}\par
{\bkmkstart AAAAAAADYO}{\bkmkend AAAAAAADYO}
00096     app->addPronunciation({\cf22 "hello"}, {\cf22 "heh-LOH"});\par
{\bkmkstart AAAAAAADYP}{\bkmkend AAAAAAADYP}
00097     app->addPronunciation({\cf22 "world"}, {\cf22 "wurld"});\par
{\bkmkstart AAAAAAADYQ}{\bkmkend AAAAAAADYQ}
00098     app->addPronunciation({\cf22 "thank you"}, {\cf22 "thangk yoo"});\par
{\bkmkstart AAAAAAADYR}{\bkmkend AAAAAAADYR}
00099     \par
{\bkmkstart AAAAAAADYS}{\bkmkend AAAAAAADYS}
00100     {\cf20 // Test showing pronunciation guide (should not crash)}\par
{\bkmkstart AAAAAAADYT}{\bkmkend AAAAAAADYT}
00101     EXPECT_NO_THROW(app->showPronunciationGuide());\par
{\bkmkstart AAAAAAADYV}{\bkmkend AAAAAAADYV}
00102 \}\par
{\bkmkstart AAAAAAADYW}{\bkmkend AAAAAAADYW}
00103 \par
{\bkmkstart AAAAAAADYX}{\bkmkend AAAAAAADYX}
00104 {\cf20 // Test data management functions}\par
{\bkmkstart AAAAAAADYY}{\bkmkend AAAAAAADYY}
00105 TEST_F(LanguageTranslatorComprehensiveTest, TestDataManagement) \{\par
{\bkmkstart AAAAAAADZB}{\bkmkend AAAAAAADZB}
00106     {\cf20 // Test initializeDefaultData (should not crash)}\par
{\bkmkstart AAAAAAADZD}{\bkmkend AAAAAAADZD}
00107     EXPECT_NO_THROW(app->initializeDefaultData());\par
{\bkmkstart AAAAAAADZF}{\bkmkend AAAAAAADZF}
00108     \par
{\bkmkstart AAAAAAADZH}{\bkmkend AAAAAAADZH}
00109     {\cf20 // Test saveData (should not crash)}\par
{\bkmkstart AAAAAAADZK}{\bkmkend AAAAAAADZK}
00110     EXPECT_NO_THROW(app->saveData());\par
{\bkmkstart AAAAAAADZN}{\bkmkend AAAAAAADZN}
00111     \par
{\bkmkstart AAAAAAADZP}{\bkmkend AAAAAAADZP}
00112     {\cf20 // Test loadData (should not crash)}\par
{\bkmkstart AAAAAAADZR}{\bkmkend AAAAAAADZR}
00113     EXPECT_NO_THROW(app->loadData());\par
{\bkmkstart AAAAAAADZT}{\bkmkend AAAAAAADZT}
00114 \}\par
{\bkmkstart AAAAAAADZU}{\bkmkend AAAAAAADZU}
00115 \par
{\bkmkstart AAAAAAADZW}{\bkmkend AAAAAAADZW}
00116 {\cf20 // Test dictionary management functions}\par
{\bkmkstart AAAAAAADZY}{\bkmkend AAAAAAADZY}
00117 TEST_F(LanguageTranslatorComprehensiveTest, TestDictionaryManagement) \{\par
{\bkmkstart AAAAAAADZZ}{\bkmkend AAAAAAADZZ}
00118     {\cf20 // Test loadAllDictionaries (should not crash)}\par
{\bkmkstart AAAAAAAEAA}{\bkmkend AAAAAAAEAA}
00119     EXPECT_NO_THROW(app->loadAllDictionaries());\par
{\bkmkstart AAAAAAAEAD}{\bkmkend AAAAAAAEAD}
00120     \par
{\bkmkstart AAAAAAAEAF}{\bkmkend AAAAAAAEAF}
00121     {\cf20 // Test loadDictionaryFromFile with non-existent file}\par
{\bkmkstart AAAAAAAEAJ}{\bkmkend AAAAAAAEAJ}
00122     EXPECT_FALSE(app->loadDictionaryFromFile({\cf22 "English"}, {\cf22 "German"}, {\cf22 "nonexistent.txt"}));\par
{\bkmkstart AAAAAAAEAL}{\bkmkend AAAAAAAEAL}
00123     \par
{\bkmkstart AAAAAAAEAM}{\bkmkend AAAAAAAEAM}
00124     {\cf20 // Test loadDictionaryFromFile with valid file (if it exists)}\par
{\bkmkstart AAAAAAAEAO}{\bkmkend AAAAAAAEAO}
00125     std::filesystem::create_directory({\cf22 "dictionaries"});\par
{\bkmkstart AAAAAAAEAQ}{\bkmkend AAAAAAAEAQ}
00126     std::ofstream testFile({\cf22 "dictionaries/test_en_de.txt"});\par
{\bkmkstart AAAAAAAEAT}{\bkmkend AAAAAAAEAT}
00127     testFile << {\cf22 "hello=halo\\nworld=welt\\n"};\par
{\bkmkstart AAAAAAAEAV}{\bkmkend AAAAAAAEAV}
00128     testFile.close();\par
{\bkmkstart AAAAAAAEAX}{\bkmkend AAAAAAAEAX}
00129     \par
{\bkmkstart AAAAAAAEAZ}{\bkmkend AAAAAAAEAZ}
00130     EXPECT_TRUE(app->loadDictionaryFromFile({\cf22 "English"}, {\cf22 "German"}, {\cf22 "dictionaries/test_en_de.txt"}));\par
{\bkmkstart AAAAAAAEBB}{\bkmkend AAAAAAAEBB}
00131     \par
{\bkmkstart AAAAAAAEBD}{\bkmkend AAAAAAAEBD}
00132     {\cf20 // Clean up}\par
{\bkmkstart AAAAAAAEBE}{\bkmkend AAAAAAAEBE}
00133     std::filesystem::remove({\cf22 "dictionaries/test_en_de.txt"});\par
{\bkmkstart AAAAAAAEDP}{\bkmkend AAAAAAAEDP}
00134 \}\par
{\bkmkstart AAAAAAAEDR}{\bkmkend AAAAAAAEDR}
00135 \par
{\bkmkstart AAAAAAAEDT}{\bkmkend AAAAAAAEDT}
00136 {\cf20 // Test API functions}\par
{\bkmkstart AAAAAAAEDU}{\bkmkend AAAAAAAEDU}
00137 TEST_F(LanguageTranslatorComprehensiveTest, TestAPIFunctions) \{\par
{\bkmkstart AAAAAAAEEA}{\bkmkend AAAAAAAEEA}
00138     {\cf20 // Test isAPIAvailable}\par
{\bkmkstart AAAAAAAEEB}{\bkmkend AAAAAAAEEB}
00139     EXPECT_FALSE(app->isAPIAvailable());\par
{\bkmkstart AAAAAAAEEF}{\bkmkend AAAAAAAEEF}
00140     \par
{\bkmkstart AAAAAAAEEH}{\bkmkend AAAAAAAEEH}
00141     {\cf20 // Test setAPIKey}\par
{\bkmkstart AAAAAAAEEJ}{\bkmkend AAAAAAAEEJ}
00142     app->setAPIKey({\cf22 "test-api-key-123"});\par
{\bkmkstart AAAAAAAEEL}{\bkmkend AAAAAAAEEL}
00143     \par
{\bkmkstart AAAAAAAEEM}{\bkmkend AAAAAAAEEM}
00144     {\cf20 // Test setAPIMode}\par
{\bkmkstart AAAAAAAEEO}{\bkmkend AAAAAAAEEO}
00145     app->setAPIMode({\cf17 true});\par
{\bkmkstart AAAAAAAEER}{\bkmkend AAAAAAAEER}
00146     app->setAPIMode({\cf17 false});\par
{\bkmkstart AAAAAAAEEU}{\bkmkend AAAAAAAEEU}
00147     \par
{\bkmkstart AAAAAAAEEW}{\bkmkend AAAAAAAEEW}
00148     {\cf20 // Test Google API translation (should return empty string)}\par
{\bkmkstart AAAAAAAEEX}{\bkmkend AAAAAAAEEX}
00149     std::string result = app->translateWithGoogleAPI({\cf22 "hello"}, {\cf22 "en"}, {\cf22 "tr"});\par
{\bkmkstart AAAAAAAEFA}{\bkmkend AAAAAAAEFA}
00150     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAAEIJ}{\bkmkend AAAAAAAEIJ}
00151     \par
{\bkmkstart AAAAAAAEIK}{\bkmkend AAAAAAAEIK}
00152     {\cf20 // Test Microsoft API translation (should return empty string)}\par
{\bkmkstart AAAAAAAEIL}{\bkmkend AAAAAAAEIL}
00153     result = app->translateWithMicrosoftAPI({\cf22 "hello"}, {\cf22 "en"}, {\cf22 "tr"});\par
{\bkmkstart AAAAAAAEIM}{\bkmkend AAAAAAAEIM}
00154     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAAEIN}{\bkmkend AAAAAAAEIN}
00155 \}\par
{\bkmkstart AAAAAAAEIO}{\bkmkend AAAAAAAEIO}
00156 \par
{\bkmkstart AAAAAAAEIP}{\bkmkend AAAAAAAEIP}
00157 {\cf20 // Test translation functions with various inputs}\par
{\bkmkstart AAAAAAAEIQ}{\bkmkend AAAAAAAEIQ}
00158 TEST_F(LanguageTranslatorComprehensiveTest, TestTranslationFunctions) \{\par
{\bkmkstart AAAAAAAEIR}{\bkmkend AAAAAAAEIR}
00159     {\cf20 // Test translateWord}\par
{\bkmkstart AAAAAAAEIS}{\bkmkend AAAAAAAEIS}
00160     std::string result = app->translateWord({\cf22 "hello"});\par
{\bkmkstart AAAAAAAEIT}{\bkmkend AAAAAAAEIT}
00161     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAEIU}{\bkmkend AAAAAAAEIU}
00162     \par
{\bkmkstart AAAAAAAEIV}{\bkmkend AAAAAAAEIV}
00163     {\cf20 // Test translatePhrase}\par
{\bkmkstart AAAAAAAEIW}{\bkmkend AAAAAAAEIW}
00164     result = app->translatePhrase({\cf22 "good morning"});\par
{\bkmkstart AAAAAAAEIX}{\bkmkend AAAAAAAEIX}
00165     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAEIY}{\bkmkend AAAAAAAEIY}
00166     \par
{\bkmkstart AAAAAAAEIZ}{\bkmkend AAAAAAAEIZ}
00167     {\cf20 // Test translateText}\par
{\bkmkstart AAAAAAAEJA}{\bkmkend AAAAAAAEJA}
00168     result = app->translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAAEJB}{\bkmkend AAAAAAAEJB}
00169     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAEJC}{\bkmkend AAAAAAAEJC}
00170     \par
{\bkmkstart AAAAAAAEJD}{\bkmkend AAAAAAAEJD}
00171     {\cf20 // Test with empty input}\par
{\bkmkstart AAAAAAAEJE}{\bkmkend AAAAAAAEJE}
00172     result = app->translateWord({\cf22 ""});\par
{\bkmkstart AAAAAAAEJF}{\bkmkend AAAAAAAEJF}
00173     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAAEJG}{\bkmkend AAAAAAAEJG}
00174     \par
{\bkmkstart AAAAAAAEJH}{\bkmkend AAAAAAAEJH}
00175     result = app->translatePhrase({\cf22 ""});\par
{\bkmkstart AAAAAAAEJI}{\bkmkend AAAAAAAEJI}
00176     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAAEJJ}{\bkmkend AAAAAAAEJJ}
00177     \par
{\bkmkstart AAAAAAAEJK}{\bkmkend AAAAAAAEJK}
00178     result = app->translateText({\cf22 ""});\par
{\bkmkstart AAAAAAAEJL}{\bkmkend AAAAAAAEJL}
00179     EXPECT_TRUE(result.empty());\par
{\bkmkstart AAAAAAAEJM}{\bkmkend AAAAAAAEJM}
00180 \}\par
{\bkmkstart AAAAAAAEJN}{\bkmkend AAAAAAAEJN}
00181 \par
{\bkmkstart AAAAAAAEJO}{\bkmkend AAAAAAAEJO}
00182 {\cf20 // Test edge cases and error handling}\par
{\bkmkstart AAAAAAAEJP}{\bkmkend AAAAAAAEJP}
00183 TEST_F(LanguageTranslatorComprehensiveTest, TestEdgeCases) \{\par
{\bkmkstart AAAAAAAEJQ}{\bkmkend AAAAAAAEJQ}
00184     {\cf20 // Test with very long text}\par
{\bkmkstart AAAAAAAEJR}{\bkmkend AAAAAAAEJR}
00185     std::string longText(1000, {\cf23 'a'});\par
{\bkmkstart AAAAAAAEJS}{\bkmkend AAAAAAAEJS}
00186     std::string result = app->translateText(longText);\par
{\bkmkstart AAAAAAAEJT}{\bkmkend AAAAAAAEJT}
00187     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAEJU}{\bkmkend AAAAAAAEJU}
00188     \par
{\bkmkstart AAAAAAAEJV}{\bkmkend AAAAAAAEJV}
00189     {\cf20 // Test with special characters}\par
{\bkmkstart AAAAAAAEJW}{\bkmkend AAAAAAAEJW}
00190     result = app->translateText({\cf22 "Hello, World! @#$%^&*()"});\par
{\bkmkstart AAAAAAAEJX}{\bkmkend AAAAAAAEJX}
00191     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAEJY}{\bkmkend AAAAAAAEJY}
00192     \par
{\bkmkstart AAAAAAAEJZ}{\bkmkend AAAAAAAEJZ}
00193     {\cf20 // Test with numbers}\par
{\bkmkstart AAAAAAAEKA}{\bkmkend AAAAAAAEKA}
00194     result = app->translateText({\cf22 "123 456 789"});\par
{\bkmkstart AAAAAAAEKB}{\bkmkend AAAAAAAEKB}
00195     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAEKC}{\bkmkend AAAAAAAEKC}
00196     \par
{\bkmkstart AAAAAAAEKD}{\bkmkend AAAAAAAEKD}
00197     {\cf20 // Test with mixed languages}\par
{\bkmkstart AAAAAAAEKE}{\bkmkend AAAAAAAEKE}
00198     result = app->translateText({\cf22 "hello merhaba hola"});\par
{\bkmkstart AAAAAAAEKF}{\bkmkend AAAAAAAEKF}
00199     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAEKG}{\bkmkend AAAAAAAEKG}
00200 \}\par
{\bkmkstart AAAAAAAEKH}{\bkmkend AAAAAAAEKH}
00201 \par
{\bkmkstart AAAAAAAEKI}{\bkmkend AAAAAAAEKI}
00202 {\cf20 // Test menu and choice handling}\par
{\bkmkstart AAAAAAAEKJ}{\bkmkend AAAAAAAEKJ}
00203 TEST_F(LanguageTranslatorComprehensiveTest, TestMenuHandling) \{\par
{\bkmkstart AAAAAAAEKK}{\bkmkend AAAAAAAEKK}
00204     {\cf20 // Test handleUserChoice with various inputs}\par
{\bkmkstart AAAAAAAEKL}{\bkmkend AAAAAAAEKL}
00205     EXPECT_NO_THROW(app->handleUserChoice(0)); {\cf20 // Exit}\par
{\bkmkstart AAAAAAAEKM}{\bkmkend AAAAAAAEKM}
00206     EXPECT_NO_THROW(app->handleUserChoice(1)); {\cf20 // Login/Translate}\par
{\bkmkstart AAAAAAAEKN}{\bkmkend AAAAAAAEKN}
00207     EXPECT_NO_THROW(app->handleUserChoice(2)); {\cf20 // Register/Change Languages}\par
{\bkmkstart AAAAAAAEKO}{\bkmkend AAAAAAAEKO}
00208     EXPECT_NO_THROW(app->handleUserChoice(3)); {\cf20 // Phrase Library}\par
{\bkmkstart AAAAAAAEKP}{\bkmkend AAAAAAAEKP}
00209     EXPECT_NO_THROW(app->handleUserChoice(4)); {\cf20 // Learning Tips}\par
{\bkmkstart AAAAAAAEKQ}{\bkmkend AAAAAAAEKQ}
00210     EXPECT_NO_THROW(app->handleUserChoice(5)); {\cf20 // Pronunciation Guide}\par
{\bkmkstart AAAAAAAEKR}{\bkmkend AAAAAAAEKR}
00211     EXPECT_NO_THROW(app->handleUserChoice(6)); {\cf20 // Logout}\par
{\bkmkstart AAAAAAAEKS}{\bkmkend AAAAAAAEKS}
00212     EXPECT_NO_THROW(app->handleUserChoice(99)); {\cf20 // Invalid choice}\par
{\bkmkstart AAAAAAAEKT}{\bkmkend AAAAAAAEKT}
00213 \}\par
{\bkmkstart AAAAAAAEKU}{\bkmkend AAAAAAAEKU}
00214 \par
{\bkmkstart AAAAAAAEKV}{\bkmkend AAAAAAAEKV}
00215 {\cf20 // Test language selection}\par
{\bkmkstart AAAAAAAEKW}{\bkmkend AAAAAAAEKW}
00216 TEST_F(LanguageTranslatorComprehensiveTest, TestLanguageSelection) \{\par
{\bkmkstart AAAAAAAEKX}{\bkmkend AAAAAAAEKX}
00217     {\cf20 // Test showLanguageSelection (should not crash)}\par
{\bkmkstart AAAAAAAEKY}{\bkmkend AAAAAAAEKY}
00218     EXPECT_NO_THROW(app->showLanguageSelection());\par
{\bkmkstart AAAAAAAEKZ}{\bkmkend AAAAAAAEKZ}
00219 \}\par
{\bkmkstart AAAAAAAELA}{\bkmkend AAAAAAAELA}
00220 \par
{\bkmkstart AAAAAAAELB}{\bkmkend AAAAAAAELB}
00221 {\cf20 // Test phrase library display}\par
{\bkmkstart AAAAAAAELC}{\bkmkend AAAAAAAELC}
00222 TEST_F(LanguageTranslatorComprehensiveTest, TestPhraseLibraryDisplay) \{\par
{\bkmkstart AAAAAAAELD}{\bkmkend AAAAAAAELD}
00223     {\cf20 // Test showPhraseLibrary (should not crash)}\par
{\bkmkstart AAAAAAAELE}{\bkmkend AAAAAAAELE}
00224     EXPECT_NO_THROW(app->showPhraseLibrary());\par
{\bkmkstart AAAAAAAELF}{\bkmkend AAAAAAAELF}
00225 \}\par
{\bkmkstart AAAAAAAELG}{\bkmkend AAAAAAAELG}
00226 \par
{\bkmkstart AAAAAAAELH}{\bkmkend AAAAAAAELH}
00227 {\cf20 // Test with different language combinations}\par
{\bkmkstart AAAAAAAELI}{\bkmkend AAAAAAAELI}
00228 TEST_F(LanguageTranslatorComprehensiveTest, TestLanguageCombinations) \{\par
{\bkmkstart AAAAAAAELJ}{\bkmkend AAAAAAAELJ}
00229     {\cf20 // Test English to Turkish}\par
{\bkmkstart AAAAAAAELK}{\bkmkend AAAAAAAELK}
00230     app->setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAAELL}{\bkmkend AAAAAAAELL}
00231     app->setTargetLanguage({\cf22 "Turkish"});\par
{\bkmkstart AAAAAAAELM}{\bkmkend AAAAAAAELM}
00232     std::string result = app->translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAAELN}{\bkmkend AAAAAAAELN}
00233     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAELO}{\bkmkend AAAAAAAELO}
00234     \par
{\bkmkstart AAAAAAAELP}{\bkmkend AAAAAAAELP}
00235     {\cf20 // Test English to Spanish}\par
{\bkmkstart AAAAAAAELQ}{\bkmkend AAAAAAAELQ}
00236     app->setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAAELR}{\bkmkend AAAAAAAELR}
00237     app->setTargetLanguage({\cf22 "Spanish"});\par
{\bkmkstart AAAAAAAELS}{\bkmkend AAAAAAAELS}
00238     result = app->translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAAELT}{\bkmkend AAAAAAAELT}
00239     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAELU}{\bkmkend AAAAAAAELU}
00240     \par
{\bkmkstart AAAAAAAELV}{\bkmkend AAAAAAAELV}
00241     {\cf20 // Test English to French}\par
{\bkmkstart AAAAAAAELW}{\bkmkend AAAAAAAELW}
00242     app->setSourceLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAAELX}{\bkmkend AAAAAAAELX}
00243     app->setTargetLanguage({\cf22 "French"});\par
{\bkmkstart AAAAAAAELY}{\bkmkend AAAAAAAELY}
00244     result = app->translateText({\cf22 "hello world"});\par
{\bkmkstart AAAAAAAELZ}{\bkmkend AAAAAAAELZ}
00245     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAEMA}{\bkmkend AAAAAAAEMA}
00246     \par
{\bkmkstart AAAAAAAEMB}{\bkmkend AAAAAAAEMB}
00247     {\cf20 // Test Turkish to English}\par
{\bkmkstart AAAAAAAEMC}{\bkmkend AAAAAAAEMC}
00248     app->setSourceLanguage({\cf22 "Turkish"});\par
{\bkmkstart AAAAAAAEMD}{\bkmkend AAAAAAAEMD}
00249     app->setTargetLanguage({\cf22 "English"});\par
{\bkmkstart AAAAAAAEME}{\bkmkend AAAAAAAEME}
00250     result = app->translateText({\cf22 "merhaba dünya"});\par
{\bkmkstart AAAAAAAEMF}{\bkmkend AAAAAAAEMF}
00251     EXPECT_FALSE(result.empty());\par
{\bkmkstart AAAAAAAEMG}{\bkmkend AAAAAAAEMG}
00252 \}\par
{\bkmkstart AAAAAAAEMH}{\bkmkend AAAAAAAEMH}
00253 \par
{\bkmkstart AAAAAAAEMI}{\bkmkend AAAAAAAEMI}
00254 {\cf20 // Test performance with large datasets}\par
{\bkmkstart AAAAAAAEMJ}{\bkmkend AAAAAAAEMJ}
00255 TEST_F(LanguageTranslatorComprehensiveTest, TestPerformance) \{\par
{\bkmkstart AAAAAAAEMK}{\bkmkend AAAAAAAEMK}
00256     {\cf20 // Add many phrases}\par
{\bkmkstart AAAAAAAEML}{\bkmkend AAAAAAAEML}
00257     {\cf19 for} ({\cf18 int} i = 0; i < 100; ++i) \{\par
{\bkmkstart AAAAAAAEMM}{\bkmkend AAAAAAAEMM}
00258         app->addPhrase({\cf22 "phrase "} + std::to_string(i), {\cf22 "category"} + std::to_string(i % 5));\par
{\bkmkstart AAAAAAAEMN}{\bkmkend AAAAAAAEMN}
00259     \}\par
{\bkmkstart AAAAAAAEMO}{\bkmkend AAAAAAAEMO}
00260     \par
{\bkmkstart AAAAAAAEMP}{\bkmkend AAAAAAAEMP}
00261     {\cf20 // Add many learning tips}\par
{\bkmkstart AAAAAAAEMQ}{\bkmkend AAAAAAAEMQ}
00262     {\cf19 for} ({\cf18 int} i = 0; i < 50; ++i) \{\par
{\bkmkstart AAAAAAAEMR}{\bkmkend AAAAAAAEMR}
00263         app->addLearningTip({\cf22 "tip "} + std::to_string(i));\par
{\bkmkstart AAAAAAAEMS}{\bkmkend AAAAAAAEMS}
00264     \}\par
{\bkmkstart AAAAAAAEMT}{\bkmkend AAAAAAAEMT}
00265     \par
{\bkmkstart AAAAAAAEMU}{\bkmkend AAAAAAAEMU}
00266     {\cf20 // Add many pronunciations}\par
{\bkmkstart AAAAAAAEMV}{\bkmkend AAAAAAAEMV}
00267     {\cf19 for} ({\cf18 int} i = 0; i < 50; ++i) \{\par
{\bkmkstart AAAAAAAEMW}{\bkmkend AAAAAAAEMW}
00268         app->addPronunciation({\cf22 "word"} + std::to_string(i), {\cf22 "pronunciation"} + std::to_string(i));\par
{\bkmkstart AAAAAAAEMX}{\bkmkend AAAAAAAEMX}
00269     \}\par
{\bkmkstart AAAAAAAEMY}{\bkmkend AAAAAAAEMY}
00270     \par
{\bkmkstart AAAAAAAEMZ}{\bkmkend AAAAAAAEMZ}
00271     {\cf20 // Test that everything still works}\par
{\bkmkstart AAAAAAAENA}{\bkmkend AAAAAAAENA}
00272     EXPECT_NO_THROW(app->showPhraseLibrary());\par
{\bkmkstart AAAAAAAENB}{\bkmkend AAAAAAAENB}
00273     EXPECT_NO_THROW(app->showLearningTips());\par
{\bkmkstart AAAAAAAENC}{\bkmkend AAAAAAAENC}
00274     EXPECT_NO_THROW(app->showPronunciationGuide());\par
{\bkmkstart AAAAAAAEND}{\bkmkend AAAAAAAEND}
00275 \}\par
}
}