<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="hash__table_8h" kind="file" language="C++">
    <compoundname>hash_table.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">optional</includes>
    <includes local="no">functional</includes>
    <includes local="no">stdexcept</includes>
    <includedby refid="sparse__matrix_8h" local="yes">C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/sparse_matrix.h</includedby>
    <includedby refid="symbol__table_8h" local="yes">C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/symbol_table.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/hash_table.h</label>
        <link refid="hash__table_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="3">
        <label>optional</label>
      </node>
      <node id="5">
        <label>stdexcept</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/hash_table.h</label>
        <link refid="hash__table_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/sparse_matrix.h</label>
        <link refid="sparse__matrix_8h"/>
      </node>
      <node id="3">
        <label>C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/symbol_table.h</label>
        <link refid="symbol__table_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classds_1_1_hash_table" prot="public">ds::HashTable</innerclass>
    <innerclass refid="structds_1_1_hash_table_1_1_entry" prot="private">ds::HashTable::Entry</innerclass>
    <innernamespace refid="namespaceds">ds</innernamespace>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617" prot="public" static="no" strong="yes">
        <type></type>
        <name>SlotState</name>
        <qualifiedname>ds::SlotState</qualifiedname>
        <enumvalue id="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617ace2c8aed9c2fa0cfbed56cbda4d8bf07" prot="public">
          <name>Empty</name>
          <briefdescription>
<para>Slot boş </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617abbd86c81e760279d9731d5cac811ba50" prot="public">
          <name>Occupied</name>
          <briefdescription>
<para>Slot dolu. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617a5fe6005bf6e415c950c011fb65f12b8f" prot="public">
          <name>Deleted</name>
          <briefdescription>
<para>Slot silinmiş (lazy deletion) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Hash tablosundaki slot durumlarını belirten enum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/hash_table.h" line="20" column="1" bodyfile="C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/hash_table.h" bodystart="20" bodyend="24"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Kapalı adreslemeli hash tablosu implementasyonu. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mustafa Yıldırım </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ds<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617" kindref="member">SlotState</ref><sp/>{<sp/></highlight></codeline>
<codeline lineno="21" refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617ace2c8aed9c2fa0cfbed56cbda4d8bf07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617ace2c8aed9c2fa0cfbed56cbda4d8bf07" kindref="member">Empty</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617abbd86c81e760279d9731d5cac811ba50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617abbd86c81e760279d9731d5cac811ba50" kindref="member">Occupied</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617a5fe6005bf6e415c950c011fb65f12b8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617a5fe6005bf6e415c950c011fb65f12b8f" kindref="member">Deleted</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal">};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="35" refid="classds_1_1_hash_table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classds_1_1_hash_table_1a47881f4560d8482207d0c72061df0176" kindref="member">HashTable</ref><sp/>{</highlight></codeline>
<codeline lineno="39" refid="structds_1_1_hash_table_1_1_entry" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structds_1_1_hash_table_1_1_entry" kindref="compound">Entry</ref><sp/>{<sp/></highlight></codeline>
<codeline lineno="40" refid="structds_1_1_hash_table_1_1_entry_1ae13e9ed3420c7513e15a5fb783535050" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K<sp/><ref refid="structds_1_1_hash_table_1_1_entry_1ae13e9ed3420c7513e15a5fb783535050" kindref="member">key</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="structds_1_1_hash_table_1_1_entry_1a613402a3aca9f6fb7571bb7b350f3d95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/><ref refid="structds_1_1_hash_table_1_1_entry_1a613402a3aca9f6fb7571bb7b350f3d95" kindref="member">value</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="structds_1_1_hash_table_1_1_entry_1a918b379713350c27f26a0bc044220f76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617" kindref="member">SlotState</ref><sp/><ref refid="structds_1_1_hash_table_1_1_entry_1a918b379713350c27f26a0bc044220f76" kindref="member">state</ref><sp/>=<sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617ace2c8aed9c2fa0cfbed56cbda4d8bf07" kindref="member">SlotState::Empty</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Entry&gt;<sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="classds_1_1_hash_table_1a9b7d14e05e82361e2166dac9be580190" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classds_1_1_hash_table_1a9b7d14e05e82361e2166dac9be580190" kindref="member">count_</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="classds_1_1_hash_table_1a9791021117665e725c0bc73c7e258a33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a9791021117665e725c0bc73c7e258a33" kindref="member">max_load_</ref><sp/>=<sp/>0.7f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="classds_1_1_hash_table_1a26b863af6d4339774e71afe1e7c33080" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::hash&lt;K&gt;<sp/><ref refid="classds_1_1_hash_table_1a26b863af6d4339774e71afe1e7c33080" kindref="member">hasher_</ref>{};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classds_1_1_hash_table_1a228a82ca4a7e5438ee5725a441a84902" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classds_1_1_hash_table_1a228a82ca4a7e5438ee5725a441a84902" kindref="member">idx</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>k)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a26b863af6d4339774e71afe1e7c33080" kindref="member">hasher_</ref>(k)<sp/>&amp;<sp/>(<ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.size()<sp/>-<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="classds_1_1_hash_table_1a2b378cb65c687e96a785f3bd311197ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a2b378cb65c687e96a785f3bd311197ea" kindref="member">rehash</ref>(std::size_t<sp/>new_cap){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Entry&gt;<sp/>old<sp/>=<sp/>std::move(<ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.assign(new_cap,<sp/><ref refid="structds_1_1_hash_table_1_1_entry" kindref="compound">Entry</ref>{});<sp/><ref refid="classds_1_1_hash_table_1a9b7d14e05e82361e2166dac9be580190" kindref="member">count_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>e<sp/>:<sp/>old){<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.state<sp/>==<sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617abbd86c81e760279d9731d5cac811ba50" kindref="member">SlotState::Occupied</ref>)<sp/><ref refid="classds_1_1_hash_table_1a11c32f21e0c681b3eee2e7cba0532dcc" kindref="member">insert</ref>(e.key,<sp/>e.value);<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="classds_1_1_hash_table_1a9b34ffbaba50d07a6951faf2dae7b476" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a9b34ffbaba50d07a6951faf2dae7b476" kindref="member">ensure</ref>(){<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classds_1_1_hash_table_1a9b7d14e05e82361e2166dac9be580190" kindref="member">count_</ref><sp/>+<sp/>1<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classds_1_1_hash_table_1a9791021117665e725c0bc73c7e258a33" kindref="member">max_load_</ref><sp/>*<sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.size()))<sp/><ref refid="classds_1_1_hash_table_1a2b378cb65c687e96a785f3bd311197ea" kindref="member">rehash</ref>(<ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.size()&lt;&lt;1);<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79" refid="classds_1_1_hash_table_1a47881f4560d8482207d0c72061df0176" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a47881f4560d8482207d0c72061df0176" kindref="member">HashTable</ref>(std::size_t<sp/>cap<sp/>=<sp/>16){<sp/>std::size_t<sp/>c=1;<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(c&lt;cap)<sp/>c&lt;&lt;=1;<sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.assign(c,<sp/><ref refid="structds_1_1_hash_table_1_1_entry" kindref="compound">Entry</ref>{});<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="classds_1_1_hash_table_1a3bb53d07891669bf56c915bc60b1f929" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classds_1_1_hash_table_1a3bb53d07891669bf56c915bc60b1f929" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a9b7d14e05e82361e2166dac9be580190" kindref="member">count_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="classds_1_1_hash_table_1a9441a212b9899e91aad5e3c915005395" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a9441a212b9899e91aad5e3c915005395" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a9b7d14e05e82361e2166dac9be580190" kindref="member">count_</ref>==0;<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classds_1_1_hash_table_1a11c32f21e0c681b3eee2e7cba0532dcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a11c32f21e0c681b3eee2e7cba0532dcc" kindref="member">insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>k,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>v){<sp/><ref refid="classds_1_1_hash_table_1a9b34ffbaba50d07a6951faf2dae7b476" kindref="member">ensure</ref>();<sp/>std::size_t<sp/>i<sp/>=<sp/><ref refid="classds_1_1_hash_table_1a228a82ca4a7e5438ee5725a441a84902" kindref="member">idx</ref>(k);<sp/>std::size_t<sp/>first_del<sp/>=<sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.size();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>e<sp/>=<sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>[i];<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.state<sp/>==<sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617ace2c8aed9c2fa0cfbed56cbda4d8bf07" kindref="member">SlotState::Empty</ref>){<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_del<sp/>!=<sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.size())<sp/>{<sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>[first_del]<sp/>=<sp/>{k,v,<ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617abbd86c81e760279d9731d5cac811ba50" kindref="member">SlotState::Occupied</ref>};<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>e<sp/>=<sp/>{k,v,<ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617abbd86c81e760279d9731d5cac811ba50" kindref="member">SlotState::Occupied</ref>};<sp/>}<sp/>++<ref refid="classds_1_1_hash_table_1a9b7d14e05e82361e2166dac9be580190" kindref="member">count_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.state<sp/>==<sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617a5fe6005bf6e415c950c011fb65f12b8f" kindref="member">SlotState::Deleted</ref>){<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_del<sp/>==<sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.size())<sp/>first_del<sp/>=<sp/>i;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.key<sp/>==<sp/>k){<sp/>e.value<sp/>=<sp/>v;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>(i<sp/>+<sp/>1)<sp/>&amp;<sp/>(<ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.size()-1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classds_1_1_hash_table_1aa50954bdb669803b7e6c9b0e63db48ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>V*<sp/><ref refid="classds_1_1_hash_table_1aa50954bdb669803b7e6c9b0e63db48ab" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>k){<sp/>std::size_t<sp/>i<sp/>=<sp/><ref refid="classds_1_1_hash_table_1a228a82ca4a7e5438ee5725a441a84902" kindref="member">idx</ref>(k);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>e<sp/>=<sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>[i];<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.state<sp/>==<sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617ace2c8aed9c2fa0cfbed56cbda4d8bf07" kindref="member">SlotState::Empty</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.state<sp/>==<sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617abbd86c81e760279d9731d5cac811ba50" kindref="member">SlotState::Occupied</ref><sp/>&amp;&amp;<sp/>e.key<sp/>==<sp/>k)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;e.value;<sp/>i<sp/>=<sp/>(i<sp/>+<sp/>1)<sp/>&amp;<sp/>(<ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.size()-1);}<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="classds_1_1_hash_table_1afb487ac0b40053e9e74902fb035ea979" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V*<sp/><ref refid="classds_1_1_hash_table_1afb487ac0b40053e9e74902fb035ea979" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>k)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classds_1_1_hash_table_1a47881f4560d8482207d0c72061df0176" kindref="member">HashTable</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;<ref refid="classds_1_1_hash_table_1afb487ac0b40053e9e74902fb035ea979" kindref="member">find</ref>(k);<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="classds_1_1_hash_table_1a0acc1f9c857e04c3769939702b0e19c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a0acc1f9c857e04c3769939702b0e19c5" kindref="member">contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>k)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1aa50954bdb669803b7e6c9b0e63db48ab" kindref="member">find</ref>(k)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133" refid="classds_1_1_hash_table_1a13001e8242174229d97e1b470704962c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_hash_table_1a13001e8242174229d97e1b470704962c" kindref="member">erase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>k){<sp/>std::size_t<sp/>i<sp/>=<sp/><ref refid="classds_1_1_hash_table_1a228a82ca4a7e5438ee5725a441a84902" kindref="member">idx</ref>(k);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>e<sp/>=<sp/><ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>[i];<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.state<sp/>==<sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617ace2c8aed9c2fa0cfbed56cbda4d8bf07" kindref="member">SlotState::Empty</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.state<sp/>==<sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617abbd86c81e760279d9731d5cac811ba50" kindref="member">SlotState::Occupied</ref><sp/>&amp;&amp;<sp/>e.key<sp/>==<sp/>k){<sp/>e.state<sp/>=<sp/><ref refid="hash__table_8h_1ab8d36885b547ab0c7e429bd1d578a617a5fe6005bf6e415c950c011fb65f12b8f" kindref="member">SlotState::Deleted</ref>;<sp/>--<ref refid="classds_1_1_hash_table_1a9b7d14e05e82361e2166dac9be580190" kindref="member">count_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/>i<sp/>=<sp/>(i<sp/>+<sp/>1)<sp/>&amp;<sp/>(<ref refid="classds_1_1_hash_table_1ae6b9272c3d706ba75c7f6fabcdc9ace8" kindref="member">table_</ref>.size()-1);}<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/hash_table.h"/>
  </compounddef>
</doxygen>
