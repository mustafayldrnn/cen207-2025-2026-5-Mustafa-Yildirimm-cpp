<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="binary__tree_8h" kind="file" language="C++">
    <compoundname>binary_tree.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">functional</includes>
    <includes local="no">stack</includes>
    <includes local="no">queue</includes>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/binary_tree.h</label>
        <link refid="binary__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>functional</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>queue</label>
      </node>
      <node id="4">
        <label>stack</label>
      </node>
    </incdepgraph>
    <innerclass refid="structds_1_1_tree_node" prot="public">ds::TreeNode</innerclass>
    <innerclass refid="classds_1_1_binary_tree" prot="public">ds::BinaryTree</innerclass>
    <innernamespace refid="namespaceds">ds</innernamespace>
    <briefdescription>
<para>Binary tree veri yapısı ve tree traversals implementasyonu. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mustafa Yıldırım </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ds<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="22" refid="structds_1_1_tree_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structds_1_1_tree_node_1a92f832d1143a20dcde7c323112a70cb3" kindref="member">TreeNode</ref><sp/>{</highlight></codeline>
<codeline lineno="23" refid="structds_1_1_tree_node_1aad7f43ee8209ee46b48a42064501a434" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structds_1_1_tree_node_1aad7f43ee8209ee46b48a42064501a434" kindref="member">value</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24" refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structds_1_1_tree_node_1a92f832d1143a20dcde7c323112a70cb3" kindref="member">TreeNode</ref>*<sp/><ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structds_1_1_tree_node_1a92f832d1143a20dcde7c323112a70cb3" kindref="member">TreeNode</ref>*<sp/><ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31" refid="structds_1_1_tree_node_1a92f832d1143a20dcde7c323112a70cb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structds_1_1_tree_node_1a92f832d1143a20dcde7c323112a70cb3" kindref="member">TreeNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>v)<sp/>:<sp/><ref refid="structds_1_1_tree_node_1aad7f43ee8209ee46b48a42064501a434" kindref="member">value</ref>(v),<sp/><ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>(nullptr),<sp/><ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="43" refid="classds_1_1_binary_tree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classds_1_1_binary_tree_1a13657d21d3a9089f6d352b4f9f8b9f09" kindref="member">BinaryTree</ref><sp/>{</highlight></codeline>
<codeline lineno="44" refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/><ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="classds_1_1_binary_tree_1a500e2473a4c0a835ecd66ecf2c67011d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a500e2473a4c0a835ecd66ecf2c67011d" kindref="member">destroy</ref>(<ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a500e2473a4c0a835ecd66ecf2c67011d" kindref="member">destroy</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a500e2473a4c0a835ecd66ecf2c67011d" kindref="member">destroy</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="classds_1_1_binary_tree_1ab6781f27dd54174a5e2791acdd97e8df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1ab6781f27dd54174a5e2791acdd97e8df" kindref="member">height</ref>(<ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/>node)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/>std::max(<ref refid="classds_1_1_binary_tree_1a80a7e4158fd094e0f173eaf8c7b8455a" kindref="member">height</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>),<sp/><ref refid="classds_1_1_binary_tree_1ab6781f27dd54174a5e2791acdd97e8df" kindref="member">height</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="classds_1_1_binary_tree_1ac685d0e150b7186f20ed22663c0d4e0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1ac685d0e150b7186f20ed22663c0d4e0d" kindref="member">countNodes</ref>(<ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/>node)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/><ref refid="classds_1_1_binary_tree_1ac685d0e150b7186f20ed22663c0d4e0d" kindref="member">countNodes</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>)<sp/>+<sp/><ref refid="classds_1_1_binary_tree_1ac685d0e150b7186f20ed22663c0d4e0d" kindref="member">countNodes</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="classds_1_1_binary_tree_1a1cdb8f747fffd86521a977d077570858" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a1cdb8f747fffd86521a977d077570858" kindref="member">inorderTraversal</ref>(<ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/>node,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)&gt;<sp/>visit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a1cdb8f747fffd86521a977d077570858" kindref="member">inorderTraversal</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>,<sp/>visit);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(node-&gt;<ref refid="structds_1_1_tree_node_1aad7f43ee8209ee46b48a42064501a434" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a1cdb8f747fffd86521a977d077570858" kindref="member">inorderTraversal</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>,<sp/>visit);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96" refid="classds_1_1_binary_tree_1a498e4163f70cedc4139146b97fcdd407" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a498e4163f70cedc4139146b97fcdd407" kindref="member">preorderTraversal</ref>(<ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/>node,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)&gt;<sp/>visit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(node-&gt;<ref refid="structds_1_1_tree_node_1aad7f43ee8209ee46b48a42064501a434" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a498e4163f70cedc4139146b97fcdd407" kindref="member">preorderTraversal</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>,<sp/>visit);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a498e4163f70cedc4139146b97fcdd407" kindref="member">preorderTraversal</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>,<sp/>visit);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="classds_1_1_binary_tree_1a9f5004654fd0145717a5349b731f76c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a9f5004654fd0145717a5349b731f76c3" kindref="member">postorderTraversal</ref>(<ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/>node,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)&gt;<sp/>visit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a9f5004654fd0145717a5349b731f76c3" kindref="member">postorderTraversal</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>,<sp/>visit);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a9f5004654fd0145717a5349b731f76c3" kindref="member">postorderTraversal</ref>(node-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>,<sp/>visit);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(node-&gt;<ref refid="structds_1_1_tree_node_1aad7f43ee8209ee46b48a42064501a434" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121" refid="classds_1_1_binary_tree_1a13657d21d3a9089f6d352b4f9f8b9f09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a13657d21d3a9089f6d352b4f9f8b9f09" kindref="member">BinaryTree</ref>()<sp/>:<sp/><ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="classds_1_1_binary_tree_1adc0877f60defc2c8d1eaf006c2385293" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1adc0877f60defc2c8d1eaf006c2385293" kindref="member">~BinaryTree</ref>()<sp/>{<sp/><ref refid="classds_1_1_binary_tree_1a500e2473a4c0a835ecd66ecf2c67011d" kindref="member">destroy</ref>(<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="classds_1_1_binary_tree_1a7f13a233979c2f6b7e322e5551f8db43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a7f13a233979c2f6b7e322e5551f8db43" kindref="member">BinaryTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a13657d21d3a9089f6d352b4f9f8b9f09" kindref="member">BinaryTree</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136" refid="classds_1_1_binary_tree_1a2717c0ac8dbee6219efc04f0494271d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a13657d21d3a9089f6d352b4f9f8b9f09" kindref="member">BinaryTree</ref>&amp;<sp/><ref refid="classds_1_1_binary_tree_1a2717c0ac8dbee6219efc04f0494271d0" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a13657d21d3a9089f6d352b4f9f8b9f09" kindref="member">BinaryTree</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142" refid="classds_1_1_binary_tree_1a102d00608b01d8b4dc9d3596e11ee086" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/><ref refid="classds_1_1_binary_tree_1a102d00608b01d8b4dc9d3596e11ee086" kindref="member">root</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148" refid="classds_1_1_binary_tree_1a04648ef36c6d3825d03394d6e454ea5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a04648ef36c6d3825d03394d6e454ea5a" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154" refid="classds_1_1_binary_tree_1aa7d57ab79bbdee5e201f6eee643c5726" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1aa7d57ab79bbdee5e201f6eee643c5726" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1ac685d0e150b7186f20ed22663c0d4e0d" kindref="member">countNodes</ref>(<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160" refid="classds_1_1_binary_tree_1a80a7e4158fd094e0f173eaf8c7b8455a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a80a7e4158fd094e0f173eaf8c7b8455a" kindref="member">height</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a80a7e4158fd094e0f173eaf8c7b8455a" kindref="member">height</ref>(<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166" refid="classds_1_1_binary_tree_1af447c33b205e77a49f372712b4ce0dee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1af447c33b205e77a49f372712b4ce0dee" kindref="member">setRoot</ref>(<ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/>node)<sp/>{<sp/><ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref><sp/>=<sp/>node;<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173" refid="classds_1_1_binary_tree_1aaf4137cb035b7b51cd72145e90f075b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/><ref refid="classds_1_1_binary_tree_1aaf4137cb035b7b51cd72145e90f075b7" kindref="member">createRoot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>(value);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185" refid="classds_1_1_binary_tree_1a9d116533b9b2984bd294093a9ad221b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a9d116533b9b2984bd294093a9ad221b2" kindref="member">inorder</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)&gt;<sp/>visit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a1cdb8f747fffd86521a977d077570858" kindref="member">inorderTraversal</ref>(<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>,<sp/>visit);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196" refid="classds_1_1_binary_tree_1aa933613e2ffe04a7be5f1e8050fc6e16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1aa933613e2ffe04a7be5f1e8050fc6e16" kindref="member">preorder</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)&gt;<sp/>visit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a498e4163f70cedc4139146b97fcdd407" kindref="member">preorderTraversal</ref>(<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>,<sp/>visit);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207" refid="classds_1_1_binary_tree_1a05fcac9727d9c1d707508f0023bbc6c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a05fcac9727d9c1d707508f0023bbc6c0" kindref="member">postorder</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)&gt;<sp/>visit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classds_1_1_binary_tree_1a9f5004654fd0145717a5349b731f76c3" kindref="member">postorderTraversal</ref>(<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>,<sp/>visit);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218" refid="classds_1_1_binary_tree_1a96b133ad76ed2c05c564c0eb1f823e33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a96b133ad76ed2c05c564c0eb1f823e33" kindref="member">levelOrder</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)&gt;<sp/>visit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::queue&lt;TreeNode&lt;T&gt;*&gt;<sp/>q;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.push(<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!q.empty())<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/>node<sp/>=<sp/>q.front();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.pop();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(node-&gt;<ref refid="structds_1_1_tree_node_1aad7f43ee8209ee46b48a42064501a434" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>)<sp/>q.push(node-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>)<sp/>q.push(node-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238" refid="classds_1_1_binary_tree_1a1fa3176166a909dc11177452e16e10b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1a1fa3176166a909dc11177452e16e10b7" kindref="member">inorderIterative</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)&gt;<sp/>visit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stack&lt;TreeNode&lt;T&gt;*&gt;<sp/>stk;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/>current<sp/>=<sp/><ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stk.empty()<sp/>||<sp/>current)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stk.push(current);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>stk.top();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stk.pop();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(current-&gt;<ref refid="structds_1_1_tree_node_1aad7f43ee8209ee46b48a42064501a434" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260" refid="classds_1_1_binary_tree_1afcd0802f7dea51e48562e23f937ccc34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_binary_tree_1afcd0802f7dea51e48562e23f937ccc34" kindref="member">preorderIterative</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)&gt;<sp/>visit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stack&lt;TreeNode&lt;T&gt;*&gt;<sp/>stk;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stk.push(<ref refid="classds_1_1_binary_tree_1ab52b03a7d856c0f079184011d5ee09eb" kindref="member">root_</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stk.empty())<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structds_1_1_tree_node" kindref="compound">TreeNode&lt;T&gt;</ref>*<sp/>node<sp/>=<sp/>stk.top();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stk.pop();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(node-&gt;<ref refid="structds_1_1_tree_node_1aad7f43ee8209ee46b48a42064501a434" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>)<sp/>stk.push(node-&gt;<ref refid="structds_1_1_tree_node_1a7170c8d9f3b0a9951e41c266bf207497" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>)<sp/>stk.push(node-&gt;<ref refid="structds_1_1_tree_node_1af97c1bc1a548b0d54df70d4e41b61a8e" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal">};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ds</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/binary_tree.h"/>
  </compounddef>
</doxygen>
