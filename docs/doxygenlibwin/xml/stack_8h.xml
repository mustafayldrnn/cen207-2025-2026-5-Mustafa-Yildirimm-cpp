<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="stack_8h" kind="file" language="C++">
    <compoundname>stack.h</compoundname>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdexcept</label>
      </node>
    </incdepgraph>
    <innerclass refid="classds_1_1_stack" prot="public">ds::Stack</innerclass>
    <innerclass refid="structds_1_1_stack_1_1_node" prot="private">ds::Stack::Node</innerclass>
    <innernamespace refid="namespaceds">ds</innernamespace>
    <briefdescription>
<para>Basit bağlı liste tabanlı yığın (LIFO). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ds<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="12" refid="classds_1_1_stack" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classds_1_1_stack" kindref="compound">Stack</ref><sp/>{</highlight></codeline>
<codeline lineno="14" refid="structds_1_1_stack_1_1_node" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Node<sp/>{<sp/></highlight></codeline>
<codeline lineno="15" refid="structds_1_1_stack_1_1_node_1ae249e60d8b34bd85b94bf1d111e8db1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="structds_1_1_stack_1_1_node_1ae249e60d8b34bd85b94bf1d111e8db1c" kindref="member">v</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16" refid="structds_1_1_stack_1_1_node_1a612a173847b88c101b077a4dee540429" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/><ref refid="structds_1_1_stack_1_1_node_1a612a173847b88c101b077a4dee540429" kindref="member">next</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>Node(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>x):<sp/><ref refid="structds_1_1_stack_1_1_node_1ae249e60d8b34bd85b94bf1d111e8db1c" kindref="member">v</ref>(x),<sp/><ref refid="structds_1_1_stack_1_1_node_1a612a173847b88c101b077a4dee540429" kindref="member">next</ref>(nullptr)<sp/>{}<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="19" refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structds_1_1_stack_1_1_node" kindref="compound">Node</ref>*<sp/><ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20" refid="classds_1_1_stack_1ac63eeada020909894b5bc5e6a51277c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classds_1_1_stack_1ac63eeada020909894b5bc5e6a51277c5" kindref="member">sz_</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23" refid="classds_1_1_stack_1a72c71228fcf07010c45061d514ec3b8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classds_1_1_stack_1a72c71228fcf07010c45061d514ec3b8b" kindref="member">~Stack</ref>(){<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref>)<sp/>{<sp/><ref refid="structds_1_1_stack_1_1_node" kindref="compound">Node</ref>*<sp/>n<sp/>=<sp/><ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref>-&gt;next;<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref>;<sp/><ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref><sp/>=<sp/>n;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="25" refid="classds_1_1_stack_1ab4a7ca4fc3ba1304565946fb584cff09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_stack_1ab4a7ca4fc3ba1304565946fb584cff09" kindref="member">push</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>v){<sp/><ref refid="structds_1_1_stack_1_1_node" kindref="compound">Node</ref>*<sp/>n<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structds_1_1_stack_1_1_node" kindref="compound">Node</ref>(v);<sp/>n-&gt;<ref refid="structds_1_1_stack_1_1_node_1a612a173847b88c101b077a4dee540429" kindref="member">next</ref><sp/>=<sp/><ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref>;<sp/><ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref><sp/>=<sp/>n;<sp/>++<ref refid="classds_1_1_stack_1ac63eeada020909894b5bc5e6a51277c5" kindref="member">sz_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="27" refid="classds_1_1_stack_1a838bd932bf5696ad97c99756d4bed45f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_stack_1a838bd932bf5696ad97c99756d4bed45f" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_stack_1ac63eeada020909894b5bc5e6a51277c5" kindref="member">sz_</ref>==0;<sp/>}</highlight></codeline>
<codeline lineno="29" refid="classds_1_1_stack_1aa51d9456a5513ee7fa7074a0065096f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classds_1_1_stack_1aa51d9456a5513ee7fa7074a0065096f1" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_stack_1ac63eeada020909894b5bc5e6a51277c5" kindref="member">sz_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="31" refid="classds_1_1_stack_1ab51dcca6ef286f03d5520a7fa264ca86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="classds_1_1_stack_1ab51dcca6ef286f03d5520a7fa264ca86" kindref="member">top</ref>(){<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;stack<sp/>empty&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref>-&gt;v;<sp/>}</highlight></codeline>
<codeline lineno="33" refid="classds_1_1_stack_1a28e85edcd47ae3f343be66afc8cdfb67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_stack_1a28e85edcd47ae3f343be66afc8cdfb67" kindref="member">pop</ref>(){<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;stack<sp/>empty&quot;</highlight><highlight class="normal">);<sp/><ref refid="structds_1_1_stack_1_1_node" kindref="compound">Node</ref>*<sp/>n<sp/>=<sp/><ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref>-&gt;next;<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref>;<sp/><ref refid="classds_1_1_stack_1a3a436623966dd4dcccd0aea883db73c4" kindref="member">top_</ref><sp/>=<sp/>n;<sp/>--<ref refid="classds_1_1_stack_1ac63eeada020909894b5bc5e6a51277c5" kindref="member">sz_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ds</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/ahmet/OneDrive/Masaüstü/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/stack.h"/>
  </compounddef>
</doxygen>
