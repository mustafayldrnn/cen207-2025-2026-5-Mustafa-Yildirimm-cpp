{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment BASIC Translator Windows Library API Documentation  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}BASIC Translator Windows Library API Documentation}
{\comment Generated by doxygen 1.14.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt BASIC Translator Windows Library API Documentation}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BASIC Translator (C++17) }\par \pard\plain 
{\tc\tcl1 \v BASIC Translator (C++17)}
{\xe \v BASIC Translator (C++17)}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
This project provides:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Core data structures with meaningful use-cases: Doubly Linked List, XOR Linked List, Sparse Matrix, Stack/Queue, Binary Heap, Graph (BFS/DFS), Hash Table.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
A BASIC language translator skeleton with Lexer and Parser scaffolding.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
GoogleTest unit tests for each data structure (100% pass expected once GTest is fetched).\par}
\par
Build (CMake){
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Configure: {\f2 cmake -S . -B build -DTRANSLATOR_ENABLE_TESTS=ON} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Build: {\f2 cmake --build build --config Release} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Run tests: {\f2 ctest --test-dir build} \par}
\par
Notes{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Tests use GoogleTest via FetchContent. First configure requires network to download googletest.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Translator CLI: {\f2 translator input.bas -o output.cpp} \par}
\par
Planned next steps{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Flesh out parser (shunting-yard for expressions), AST, symbol table, CFG analysis, and codegen. \par}
\par
}}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACM" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::LanguageTranslatorApp}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uygulama ak\'C4\'B1\'C5\'9F\'C4\'B1n\'C4\'B1 y\'C3\'B6neten ana s\'C4\'B1n\'C4\'B1f })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::PhraseEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Genel ifade girdisi })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::PronunciationEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telaffuz girdisi })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::TipEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'96\'C4\'9Frenme ipucu girdisi })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::TranslationRecord}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'87eviri ge\'C3\'A7mi\'C5\'9Fi kayd\'C4\'B1 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::UserProfile}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kullan\'C4\'B1c\'C4\'B1 profili bilgileri })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 doubly_linked_list.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAA" }{}}{\fldrslt {\cs37\ul\cf2 graph.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 hash_table.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAC" }{}}{\fldrslt {\cs37\ul\cf2 heap.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 queue.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 sparse_matrix.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 stack.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 xor_linked_list.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslator.h}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konsol tabanl\'C4\'B1 dil \'C3\'A7evirici uygulamas\'C4\'B1n\'C4\'B1n ana arabirimi })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Persistence.h}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LanguageTranslator verileri i\'C3\'A7in ikili (binary) kal\'C4\'B1c\'C4\'B1l\'C4\'B1k yard\'C4\'B1mc\'C4\'B1lar\'C4\'B1 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 ast.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 cfg.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABW" }{}}{\fldrslt {\cs37\ul\cf2 codegen.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 lexer.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 parser.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 symbol_table.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 token.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Coruh::LanguageTranslator::LanguageTranslatorApp Class Reference\par \pard\plain 
{\tc\tcl2 \v Coruh::LanguageTranslator::LanguageTranslatorApp}
{\xe \v Coruh::LanguageTranslator::LanguageTranslatorApp}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uygulama ak\'C4\'B1\'C5\'9F\'C4\'B1n\'C4\'B1 y\'C3\'B6neten ana s\'C4\'B1n\'C4\'B1f. }}\par
{
{\f2 #include <LanguageTranslator.h>}}\par
Collaboration diagram for Coruh::LanguageTranslator::LanguageTranslatorApp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_coruh_1_1_language_translator_1_1_language_translator_app__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LanguageTranslatorApp} (){\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uygulamay\'C4\'B1 varsay\'C4\'B1lan verilerle ba\'C5\'9Flat\'C4\'B1r. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b run} (){\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uygulama d\'C3\'B6ng\'C3\'BCs\'C3\'BCn\'C3\'BC \'C3\'A7al\'C4\'B1\'C5\'9Ft\'C4\'B1r\'C4\'B1r. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b showMainMenu} (){\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ana men\'FCy\'FC g\'F6sterir. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b handleUserChoice} (int choice){\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Men\'C3\'BC se\'C3\'A7imini i\'C5\'9Fler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b translateText} (const std::string &text){\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Metni aktif dil \'E7iftine g\'F6re \'E7evirir. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b translateWord} (const std::string &word){\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tek kelime \'E7evirir. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b translatePhrase} (const std::string &phrase){\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kal\'C4\'B1p/ifade \'C3\'A7evirir. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setSourceLanguage} (const std::string &language){\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kaynak dili ayarlar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setTargetLanguage} (const std::string &language){\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hedef dili ayarlar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< std::string > {\b getSupportedLanguages} () const{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desteklenen dilleri d\'F6nd\'FCr\'FCr. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b showLanguageSelection} (){\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dil se\'C3\'A7im ekran\'C4\'B1n\'C4\'B1 g\'C3\'B6sterir. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addLanguage} (const std::string &language){\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Yeni dil ekler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b login} (const std::string &username, const std::string &password){\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kullan\'C4\'B1c\'C4\'B1 giri\'C5\'9Fi. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b registerUser} (const std::string &username, const std::string &password){\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kullan\'C4\'B1c\'C4\'B1 kayd\'C4\'B1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b logout} (){\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oturumu kapat\'C4\'B1r. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isUserLoggedIn} () const{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kullan\'C4\'B1c\'C4\'B1 oturum durumunu d\'C3\'B6nd\'C3\'BCr\'C3\'BCr. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b showPhraseLibrary} (){\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kal\'C4\'B1p s\'C3\'B6zl\'C3\'BC\'C4\'9F\'C3\'BC ekran\'C4\'B1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addPhrase} (const std::string &phrase, const std::string &category){\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Genel ifade ekler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b showLearningTips} (){\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'96\'C4\'9Frenme ipu\'C3\'A7lar\'C4\'B1n\'C4\'B1 listeler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addLearningTip} (const std::string &tip){\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'96\'C4\'9Frenme ipucu ekler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b showPronunciationGuide} (){\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telaffuz rehberini listeler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addPronunciation} (const std::string &word, const std::string &guide){\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telaffuz girdisi ekler/g\'FCnceller. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b showHistory} () const{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'87eviri ge\'C3\'A7mi\'C5\'9Fini listeler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b clearHistory} (){\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'87eviri ge\'C3\'A7mi\'C5\'9Fini temizler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b initializeDefaultData} (){\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Varsay\'C4\'B1lan verilerle ba\'C5\'9Flat\'C4\'B1r. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b saveData} (){\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verileri kal\'C4\'B1c\'C4\'B1 depoya yazar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b loadData} (){\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verileri kal\'C4\'B1c\'C4\'B1 depodan okur. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b loadDictionaryFromFile} (const std::string &sourceLang, const std::string &targetLang, const std::string &filename){\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dosyadan s\'F6zl\'FCk y\'FCkler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b loadAllDictionaries} (){\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
T\'FCm s\'F6zl\'FCkleri y\'FCkler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b translateWithGoogleAPI} (const std::string &text, const std::string &sourceLang, const std::string &targetLang){\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Google API ile \'E7eviri (stub). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b translateWithMicrosoftAPI} (const std::string &text, const std::string &sourceLang, const std::string &targetLang){\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Microsoft API ile \'E7eviri (stub). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isAPIAvailable} (){\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
API kullan\'C4\'B1labilirli\'C4\'9Fi. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setAPIKey} (const std::string &key){\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
API anahtar\'C4\'B1n\'C4\'B1 ayarlar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setAPIMode} (bool useAPI){\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
API modunu a\'C3\'A7/kapat\'C4\'B1r. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uygulama ak\'C4\'B1\'C5\'9F\'C4\'B1n\'C4\'B1 y\'C3\'B6neten ana s\'C4\'B1n\'C4\'B1f. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslator.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Coruh::LanguageTranslator::PhraseEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v Coruh::LanguageTranslator::PhraseEntry}
{\xe \v Coruh::LanguageTranslator::PhraseEntry}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Genel ifade girdisi. }}\par
{
{\f2 #include <Persistence.h>}}\par
Collaboration diagram for Coruh::LanguageTranslator::PhraseEntry:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_coruh_1_1_language_translator_1_1_phrase_entry__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Genel ifade girdisi. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Persistence.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Coruh::LanguageTranslator::PronunciationEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v Coruh::LanguageTranslator::PronunciationEntry}
{\xe \v Coruh::LanguageTranslator::PronunciationEntry}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telaffuz girdisi. }}\par
{
{\f2 #include <Persistence.h>}}\par
Collaboration diagram for Coruh::LanguageTranslator::PronunciationEntry:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_coruh_1_1_language_translator_1_1_pronunciation_entry__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telaffuz girdisi. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Persistence.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Coruh::LanguageTranslator::TipEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v Coruh::LanguageTranslator::TipEntry}
{\xe \v Coruh::LanguageTranslator::TipEntry}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'96\'C4\'9Frenme ipucu girdisi. }}\par
{
{\f2 #include <Persistence.h>}}\par
Collaboration diagram for Coruh::LanguageTranslator::TipEntry:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_coruh_1_1_language_translator_1_1_tip_entry__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'96\'C4\'9Frenme ipucu girdisi. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Persistence.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Coruh::LanguageTranslator::TranslationRecord Struct Reference\par \pard\plain 
{\tc\tcl2 \v Coruh::LanguageTranslator::TranslationRecord}
{\xe \v Coruh::LanguageTranslator::TranslationRecord}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'87eviri ge\'C3\'A7mi\'C5\'9Fi kayd\'C4\'B1. }}\par
{
{\f2 #include <Persistence.h>}}\par
Collaboration diagram for Coruh::LanguageTranslator::TranslationRecord:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_coruh_1_1_language_translator_1_1_translation_record__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'87eviri ge\'C3\'A7mi\'C5\'9Fi kayd\'C4\'B1. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Persistence.h}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Coruh::LanguageTranslator::UserProfile Struct Reference\par \pard\plain 
{\tc\tcl2 \v Coruh::LanguageTranslator::UserProfile}
{\xe \v Coruh::LanguageTranslator::UserProfile}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kullan\'C4\'B1c\'C4\'B1 profili bilgileri. }}\par
{
{\f2 #include <Persistence.h>}}\par
Collaboration diagram for Coruh::LanguageTranslator::UserProfile:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_coruh_1_1_language_translator_1_1_user_profile__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kullan\'C4\'B1c\'C4\'B1 profili bilgileri. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Persistence.h}}}
\par
}
\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
doubly_linked_list.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/doubly_linked_list.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/doubly_linked_list.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <cstddef>}\par
3 {\cf21 #include <iterator>}\par
4 \par
5 {\cf17 namespace }ds \{\par
6 \par
7 {\cf17 template} <{\cf17 typename} T>\par
8 {\cf17 class }DoublyLinkedList \{\par
9     {\cf17 struct }Node \{ T value; Node* prev; Node* next; Node({\cf17 const} T& v): value(v), prev(nullptr), next(nullptr) \{\} \};\par
10     Node* head_ = {\cf17 nullptr};\par
11     Node* tail_ = {\cf17 nullptr};\par
12     std::size_t size_ = 0;\par
13 \par
14 {\cf17 public}:\par
15     DoublyLinkedList() = {\cf19 default};\par
16     ~DoublyLinkedList() \{ clear(); \}\par
17     DoublyLinkedList({\cf17 const} DoublyLinkedList&) = {\cf17 delete};\par
18     DoublyLinkedList& operator=({\cf17 const} DoublyLinkedList&) = {\cf17 delete};\par
19 \par
20     {\cf17 struct }iterator \{\par
21         {\cf17 using }iterator_category = std::bidirectional_iterator_tag;\par
22         {\cf17 using }value_type = T; {\cf17 using }difference_type = std::ptrdiff_t; {\cf17 using }pointer = T*; {\cf17 using }reference = T&;\par
23         Node* n = {\cf17 nullptr}; iterator() = {\cf19 default}; {\cf17 explicit} iterator(Node* p): n(p) \{\}\par
24         reference operator*(){\cf17  const }\{ {\cf19 return} n->value; \}\par
25         pointer operator->(){\cf17  const }\{ {\cf19 return} &n->value; \}\par
26         iterator& operator++()\{ n = n->next; {\cf19 return} *{\cf17 this}; \}\par
27         iterator operator++({\cf18 int})\{ iterator tmp(*{\cf17 this}); ++(*this); {\cf19 return} tmp; \}\par
28         iterator& operator--()\{ n = n->prev; {\cf19 return} *{\cf17 this}; \}\par
29         iterator operator--({\cf18 int})\{ iterator tmp(*{\cf17 this}); --(*this); {\cf19 return} tmp; \}\par
30         {\cf18 bool} operator==({\cf17 const} iterator& o){\cf17  const }\{ {\cf19 return} n == o.n; \}\par
31         {\cf18 bool} operator!=({\cf17 const} iterator& o){\cf17  const }\{ {\cf19 return} n != o.n; \}\par
32     \};\par
33 \par
34     iterator begin(){\cf17  const }\{ {\cf19 return} iterator(head_); \}\par
35     iterator end(){\cf17  const }\{ {\cf19 return} iterator({\cf17 nullptr}); \}\par
36     iterator rbegin(){\cf17  const }\{ {\cf19 return} iterator(tail_); \}\par
37 \par
38     std::size_t size(){\cf17  const }\{ {\cf19 return} size_; \}\par
39     {\cf18 bool} empty(){\cf17  const }\{ {\cf19 return} size_ == 0; \}\par
40 \par
41     {\cf18 void} clear()\{\par
42         Node* p = head_;\par
43         {\cf19 while} (p) \{ Node* nx = p->next; {\cf17 delete} p; p = nx; \}\par
44         head_ = tail_ = {\cf17 nullptr}; size_ = 0;\par
45     \}\par
46 \par
47     iterator push_back({\cf17 const} T& v)\{\par
48         Node* n = {\cf17 new} Node(v);\par
49         n->prev = tail_;\par
50         {\cf19 if} (tail_) tail_->next = n; {\cf19 else} head_ = n;\par
51         tail_ = n; ++size_;\par
52         {\cf19 return} iterator(n);\par
53     \}\par
54 \par
55     iterator push_front({\cf17 const} T& v)\{\par
56         Node* n = {\cf17 new} Node(v);\par
57         n->next = head_;\par
58         {\cf19 if} (head_) head_->prev = n; {\cf19 else} tail_ = n;\par
59         head_ = n; ++size_;\par
60         {\cf19 return} iterator(n);\par
61     \}\par
62 \par
63     iterator insert_after(iterator it, {\cf17 const} T& v)\{\par
64         {\cf19 if} (it.n == {\cf17 nullptr}) {\cf19 return} push_front(v);\par
65         Node* cur = it.n; Node* n = {\cf17 new} Node(v);\par
66         n->prev = cur; n->next = cur->next;\par
67         {\cf19 if} (cur->next) cur->next->prev = n; {\cf19 else} tail_ = n;\par
68         cur->next = n; ++size_; {\cf19 return} iterator(n);\par
69     \}\par
70 \par
71     iterator erase(iterator it)\{\par
72         Node* cur = it.n; {\cf19 if} (!cur) {\cf19 return} it;\par
73         Node* nx = cur->next;\par
74         {\cf19 if} (cur->prev) cur->prev->next = cur->next; {\cf19 else} head_ = cur->next;\par
75         {\cf19 if} (cur->next) cur->next->prev = cur->prev; {\cf19 else} tail_ = cur->prev;\par
76         {\cf17 delete} cur; --size_; {\cf19 return} iterator(nx);\par
77     \}\par
78 \};\par
79 \par
80 \} {\cf20 // namespace ds}\par
81 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
graph.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/graph.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/graph.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <vector>}\par
3 {\cf21 #include <queue>}\par
4 \par
5 {\cf17 namespace }ds \{\par
6 \par
7 {\cf17 class }Graph \{\par
8     std::vector<std::vector<int>> adj_;\par
9 {\cf17 public}:\par
10     {\cf17 explicit} Graph({\cf18 int} n=0): adj_(n) \{\}\par
11     {\cf18 void} resize({\cf18 int} n)\{ adj_.assign(n, \{\}); \}\par
12     {\cf18 void} add_edge({\cf18 int} u, {\cf18 int} v, {\cf18 bool} undirected={\cf17 false})\{ adj_[u].push_back(v); {\cf19 if} (undirected) adj_[v].push_back(u); \}\par
13     {\cf17 const} std::vector<int>& neighbors({\cf18 int} u){\cf17  const }\{ {\cf19 return} adj_[u]; \}\par
14     {\cf18 int} size(){\cf17  const }\{ {\cf19 return} {\cf17 static_cast<}{\cf18 int}{\cf17 >}(adj_.size()); \}\par
15 \par
16     std::vector<int> bfs_dist({\cf18 int} s){\cf17  const }\{\par
17         std::vector<int> dist(size(), -1); std::queue<int> q; dist[s]=0; q.push(s);\par
18         {\cf19 while}(!q.empty())\{ {\cf18 int} u=q.front(); q.pop(); {\cf19 for}({\cf18 int} v:adj_[u]) {\cf19 if}(dist[v]==-1)\{ dist[v]=dist[u]+1; q.push(v);\} \}\par
19         {\cf19 return} dist;\par
20     \}\par
21 \par
22     {\cf18 void} dfs_util({\cf18 int} u, std::vector<int>& vis, std::vector<int>& order){\cf17  const }\{\par
23         vis[u]=1; order.push_back(u); {\cf19 for}({\cf18 int} v:adj_[u]) {\cf19 if}(!vis[v]) dfs_util(v, vis, order);\par
24     \}\par
25     std::vector<int> dfs_order({\cf18 int} s=0){\cf17  const }\{ std::vector<int> vis(size(),0), order; {\cf19 if}(s<size()) dfs_util(s, vis, order); {\cf19 return} order; \}\par
26 \};\par
27 \par
28 \} {\cf20 // namespace ds}\par
29 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hash_table.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/hash_table.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/hash_table.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <vector>}\par
3 {\cf21 #include <optional>}\par
4 {\cf21 #include <functional>}\par
5 {\cf21 #include <stdexcept>}\par
6 \par
7 {\cf17 namespace }ds \{\par
8 \par
9 {\cf17 enum class} SlotState \{ Empty, Occupied, Deleted \};\par
10 \par
11 {\cf17 template} <{\cf17 typename} K, {\cf17 typename} V>\par
12 {\cf17 class }HashTable \{\par
13     {\cf17 struct }Entry \{ K key; V value; SlotState state = SlotState::Empty; \};\par
14     std::vector<Entry> table_;\par
15     std::size_t count_ = 0;\par
16     {\cf18 float} max_load_ = 0.7f;\par
17     std::hash<K> hasher_\{\};\par
18 \par
19     std::size_t idx({\cf17 const} K& k){\cf17  const }\{ {\cf19 return} hasher_(k) & (table_.size() - 1); \}\par
20     {\cf18 void} rehash(std::size_t new_cap)\{\par
21         std::vector<Entry> old = std::move(table_);\par
22         table_.assign(new_cap, Entry\{\}); count_ = 0;\par
23         {\cf19 for} ({\cf17 auto}& e : old)\{ {\cf19 if} (e.state == SlotState::Occupied) insert(e.key, e.value); \}\par
24     \}\par
25     {\cf18 void} ensure()\{ {\cf19 if} (count_ + 1 > {\cf17 static_cast<}std::size_t{\cf17 >}(max_load_ * table_.size())) rehash(table_.size()<<1); \}\par
26 \par
27 {\cf17 public}:\par
28     {\cf17 explicit} HashTable(std::size_t cap = 16)\{ std::size_t c=1; {\cf19 while}(c<cap) c<<=1; table_.assign(c, Entry\{\}); \}\par
29     std::size_t size(){\cf17  const }\{ {\cf19 return} count_; \}\par
30     {\cf18 bool} empty(){\cf17  const }\{ {\cf19 return} count_==0; \}\par
31 \par
32     {\cf18 bool} insert({\cf17 const} K& k, {\cf17 const} V& v)\{ ensure(); std::size_t i = idx(k); std::size_t first_del = table_.size();\par
33         {\cf19 while}({\cf17 true})\{ {\cf17 auto}& e = table_[i]; {\cf19 if} (e.state == SlotState::Empty)\{ {\cf19 if} (first_del != table_.size()) \{ table_[first_del] = \{k,v,SlotState::Occupied\}; \} {\cf19 else} \{ e = \{k,v,SlotState::Occupied\}; \} ++count_; {\cf19 return} {\cf17 true}; \}\par
34             {\cf19 if} (e.state == SlotState::Deleted)\{ {\cf19 if} (first_del == table_.size()) first_del = i; \}\par
35             {\cf19 else} {\cf19 if} (e.key == k)\{ e.value = v; {\cf19 return} {\cf17 false}; \}\par
36             i = (i + 1) & (table_.size()-1);\par
37         \}\par
38     \}\par
39 \par
40     V* find({\cf17 const} K& k)\{ std::size_t i = idx(k); {\cf19 while}({\cf17 true})\{ {\cf17 auto}& e = table_[i]; {\cf19 if} (e.state == SlotState::Empty) {\cf19 return} {\cf17 nullptr}; {\cf19 if} (e.state == SlotState::Occupied && e.key == k) {\cf19 return} &e.value; i = (i + 1) & (table_.size()-1);\} \}\par
41     {\cf17 const} V* find({\cf17 const} K& k){\cf17  const }\{ {\cf19 return} {\cf17 const_cast<}HashTable*{\cf17 >}({\cf17 this})->find(k); \}\par
42     {\cf18 bool} contains({\cf17 const} K& k){\cf17  const }\{ {\cf19 return} find(k) != {\cf17 nullptr}; \}\par
43     {\cf18 bool} erase({\cf17 const} K& k)\{ std::size_t i = idx(k); {\cf19 while}({\cf17 true})\{ {\cf17 auto}& e = table_[i]; {\cf19 if} (e.state == SlotState::Empty) {\cf19 return} {\cf17 false}; {\cf19 if} (e.state == SlotState::Occupied && e.key == k)\{ e.state = SlotState::Deleted; --count_; {\cf19 return} {\cf17 true}; \} i = (i + 1) & (table_.size()-1);\} \}\par
44 \};\par
45 \par
46 \} {\cf20 // namespace ds}\par
47 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
heap.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/heap.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/heap.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <vector>}\par
3 {\cf21 #include <functional>}\par
4 \par
5 {\cf17 namespace }ds \{\par
6 \par
7 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} Compare = std::less<T>>\par
8 {\cf17 class }BinaryHeap \{\par
9     std::vector<T> a_;\par
10     Compare cmp_\{\};\par
11     {\cf18 void} sift_up(std::size_t i)\{\par
12         {\cf19 while} (i>0)\{ std::size_t p=(i-1)/2; {\cf19 if} (!cmp_(a_[p], a_[i])) {\cf19 break}; std::swap(a_[p], a_[i]); i=p; \}\par
13     \}\par
14     {\cf18 void} sift_down(std::size_t i)\{\par
15         std::size_t n = a_.size();\par
16         {\cf19 while}({\cf17 true})\{ std::size_t l=2*i+1, r=2*i+2, m=i; {\cf19 if} (l<n && cmp_(a_[m], a_[l])) m=l; {\cf19 if} (r<n && cmp_(a_[m], a_[r])) m=r; {\cf19 if} (m==i) {\cf19 break}; std::swap(a_[i], a_[m]); i=m; \}\par
17     \}\par
18 {\cf17 public}:\par
19     {\cf18 bool} empty(){\cf17  const }\{ {\cf19 return} a_.empty(); \}\par
20     std::size_t size(){\cf17  const }\{ {\cf19 return} a_.size(); \}\par
21     {\cf17 const} T& top(){\cf17  const }\{ {\cf19 return} a_.front(); \}\par
22     {\cf18 void} push({\cf17 const} T& v)\{ a_.push_back(v); sift_up(a_.size()-1); \}\par
23     {\cf18 void} pop()\{ std::swap(a_.front(), a_.back()); a_.pop_back(); {\cf19 if}(!a_.empty()) sift_down(0); \}\par
24     std::vector<T> heap_sort_copy(){\cf17  const }\{ {\cf17 auto} b=a_; std::vector<T> out; out.reserve(b.size()); {\cf17 auto} cmp=cmp_; {\cf17 auto} sift_down=[&](std::size_t i)\{ std::size_t n=b.size(); {\cf19 while}({\cf17 true})\{ std::size_t l=2*i+1,r=2*i+2,m=i; {\cf19 if}(l<n&&cmp(b[m],b[l])) m=l; {\cf19 if}(r<n&&cmp(b[m],b[r])) m=r; {\cf19 if}(m==i) {\cf19 break}; std::swap(b[i],b[m]); i=m; \}\}; {\cf19 for} (std::size_t i=b.size()/2;i-->0;) sift_down(i); {\cf19 while}(!b.empty())\{ std::swap(b.front(), b.back()); out.push_back(b.back()); b.pop_back(); {\cf19 if}(!b.empty()) sift_down(0);\} {\cf19 return} out; \}\par
25 \};\par
26 \par
27 \} {\cf20 // namespace ds}\par
28 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
queue.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/queue.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/queue.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <stdexcept>}\par
3 \par
4 {\cf17 namespace }ds \{\par
5 \par
6 {\cf17 template} <{\cf17 typename} T>\par
7 {\cf17 class }Queue \{\par
8     {\cf17 struct }Node \{ T v; Node* next; {\cf17 explicit} Node({\cf17 const} T& x): v(x), next(nullptr) \{\} \};\par
9     Node* head_ = {\cf17 nullptr}; Node* tail_ = {\cf17 nullptr}; std::size_t sz_ = 0;\par
10 {\cf17 public}:\par
11     ~Queue()\{ {\cf19 while}(head_)\{ Node* n = head_->next; {\cf17 delete} head_; head_ = n; \} tail_ = {\cf17 nullptr}; \}\par
12     {\cf18 void} enqueue({\cf17 const} T& v)\{ Node* n = {\cf17 new} Node(v); {\cf19 if} (!tail_) head_ = tail_ = n; {\cf19 else} \{ tail_->next = n; tail_ = n; \} ++sz_; \}\par
13     {\cf18 void} dequeue()\{ {\cf19 if} (!head_) {\cf19 throw} std::runtime_error({\cf22 "queue empty"}); Node* n = head_->next; {\cf17 delete} head_; head_ = n; {\cf19 if} (!head_) tail_ = {\cf17 nullptr}; --sz_; \}\par
14     T& front()\{ {\cf19 if} (!head_) {\cf19 throw} std::runtime_error({\cf22 "queue empty"}); {\cf19 return} head_->v; \}\par
15     {\cf18 bool} empty(){\cf17  const }\{ {\cf19 return} sz_==0; \}\par
16     std::size_t size(){\cf17  const }\{ {\cf19 return} sz_; \}\par
17 \};\par
18 \par
19 \} {\cf20 // namespace ds}\par
20 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sparse_matrix.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/sparse_matrix.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/sparse_matrix.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <cstddef>}\par
3 {\cf21 #include "ds/hash_table.h"}\par
4 \par
5 {\cf17 namespace }ds \{\par
6 \par
7 {\cf17 template} <{\cf17 typename} T>\par
8 {\cf17 class }SparseMatrix \{\par
9     {\cf20 // Key as 64-bit composite r<<32 | c}\par
10     {\cf17 static} {\cf17 inline} {\cf18 long} {\cf18 long} key(std::size_t r, std::size_t c)\{ {\cf19 return} ({\cf17 static_cast<}{\cf18 long} {\cf18 long}{\cf17 >}(r) << 32) | {\cf17 static_cast<}{\cf18 long} {\cf18 long}{\cf17 >}(c); \}\par
11     HashTable<long long, T> data_;\par
12     std::size_t rows_, cols_;\par
13 {\cf17 public}:\par
14     SparseMatrix(std::size_t rows, std::size_t cols): data_(64), rows_(rows), cols_(cols) \{\}\par
15     {\cf18 void} set(std::size_t r, std::size_t c, {\cf17 const} T& v)\{ data_.insert(key(r,c), v); \}\par
16     {\cf17 const} T* get(std::size_t r, std::size_t c){\cf17  const }\{ {\cf19 return} data_.find(key(r,c)); \}\par
17     std::size_t nonZeroCount(){\cf17  const }\{ {\cf19 return} data_.size(); \}\par
18     std::size_t rows(){\cf17  const }\{ {\cf19 return} rows_; \}\par
19     std::size_t cols(){\cf17  const }\{ {\cf19 return} cols_; \}\par
20 \};\par
21 \par
22 \} {\cf20 // namespace ds}\par
23 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stack.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/stack.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/stack.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <stdexcept>}\par
3 \par
4 {\cf17 namespace }ds \{\par
5 \par
6 {\cf17 template} <{\cf17 typename} T>\par
7 {\cf17 class }Stack \{\par
8     {\cf17 struct }Node \{ T v; Node* next; {\cf17 explicit} Node({\cf17 const} T& x): v(x), next(nullptr) \{\} \};\par
9     Node* top_ = {\cf17 nullptr}; std::size_t sz_ = 0;\par
10 {\cf17 public}:\par
11     ~Stack()\{ {\cf19 while}(top_) \{ Node* n = top_->next; {\cf17 delete} top_; top_ = n; \} \}\par
12     {\cf18 void} push({\cf17 const} T& v)\{ Node* n = {\cf17 new} Node(v); n->next = top_; top_ = n; ++sz_; \}\par
13     {\cf18 bool} empty(){\cf17  const }\{ {\cf19 return} sz_==0; \}\par
14     std::size_t size(){\cf17  const }\{ {\cf19 return} sz_; \}\par
15     T& top()\{ {\cf19 if} (!top_) {\cf19 throw} std::runtime_error({\cf22 "stack empty"}); {\cf19 return} top_->v; \}\par
16     {\cf18 void} pop()\{ {\cf19 if} (!top_) {\cf19 throw} std::runtime_error({\cf22 "stack empty"}); Node* n = top_->next; {\cf17 delete} top_; top_ = n; --sz_; \}\par
17 \};\par
18 \par
19 \} {\cf20 // namespace ds}\par
20 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
xor_linked_list.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/xor_linked_list.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/include/ds/xor_linked_list.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <cstdint>}\par
3 {\cf21 #include <cstddef>}\par
4 {\cf21 #include <iterator>}\par
5 \par
6 {\cf17 namespace }ds \{\par
7 \par
8 {\cf17 template} <{\cf17 typename} T>\par
9 {\cf17 class }XORLinkedList \{\par
10     {\cf17 struct }Node \{ T value; Node* npx; {\cf17 explicit} Node({\cf17 const} T& v): value(v), npx(nullptr) \{\} \};\par
11     Node* head_ = {\cf17 nullptr};\par
12     Node* tail_ = {\cf17 nullptr};\par
13     std::size_t size_ = 0;\par
14 \par
15     {\cf17 static} Node* XOR(Node* a, Node* b)\{\par
16         {\cf19 return} {\cf17 reinterpret_cast<}Node*{\cf17 >}({\cf17 reinterpret_cast<}uintptr_t{\cf17 >}(a) ^ {\cf17 reinterpret_cast<}uintptr_t{\cf17 >}(b));\par
17     \}\par
18 \par
19 {\cf17 public}:\par
20     XORLinkedList() = {\cf19 default};\par
21     ~XORLinkedList()\{ clear(); \}\par
22     XORLinkedList({\cf17 const} XORLinkedList&) = {\cf17 delete};\par
23     XORLinkedList& operator=({\cf17 const} XORLinkedList&) = {\cf17 delete};\par
24 \par
25     {\cf18 void} clear()\{\par
26         Node* prev = {\cf17 nullptr}; Node* cur = head_;\par
27         {\cf19 while} (cur)\{ Node* next = XOR(prev, cur->npx); prev = cur; cur = next; {\cf17 delete} prev; \}\par
28         head_ = tail_ = {\cf17 nullptr}; size_ = 0;\par
29     \}\par
30 \par
31     std::size_t size(){\cf17  const }\{ {\cf19 return} size_; \}\par
32     {\cf18 bool} empty(){\cf17  const }\{ {\cf19 return} size_ == 0; \}\par
33 \par
34     {\cf18 void} push_back({\cf17 const} T& v)\{\par
35         Node* n = {\cf17 new} Node(v);\par
36         {\cf19 if} (!head_) \{ head_ = tail_ = n; \}\par
37         {\cf19 else} \{\par
38             n->npx = tail_;\par
39             tail_->npx = XOR(tail_->npx, n);\par
40             tail_ = n;\par
41         \}\par
42         ++size_;\par
43     \}\par
44 \par
45     {\cf18 void} push_front({\cf17 const} T& v)\{\par
46         Node* n = {\cf17 new} Node(v);\par
47         {\cf19 if} (!head_) \{ head_ = tail_ = n; \}\par
48         {\cf19 else} \{\par
49             n->npx = head_;\par
50             head_->npx = XOR(n, head_->npx);\par
51             head_ = n;\par
52         \}\par
53         ++size_;\par
54     \}\par
55 \par
56     {\cf18 bool} pop_back()\{\par
57         {\cf19 if} (!tail_) {\cf19 return} {\cf17 false};\par
58         Node* prev = XOR(tail_->npx, {\cf17 nullptr});\par
59         {\cf19 if} (!prev)\{ {\cf17 delete} tail_; head_ = tail_ = {\cf17 nullptr}; \}\par
60         {\cf19 else} \{ prev->npx = XOR(prev->npx, tail_); {\cf17 delete} tail_; tail_ = prev; \}\par
61         --size_; {\cf19 return} {\cf17 true};\par
62     \}\par
63 \par
64     {\cf18 bool} pop_front()\{\par
65         {\cf19 if} (!head_) {\cf19 return} {\cf17 false};\par
66         Node* next = XOR({\cf17 nullptr}, head_->npx);\par
67         {\cf19 if} (!next)\{ {\cf17 delete} head_; head_ = tail_ = {\cf17 nullptr}; \}\par
68         {\cf19 else} \{ next->npx = XOR(head_, next->npx); {\cf17 delete} head_; head_ = next; \}\par
69         --size_; {\cf19 return} {\cf17 true};\par
70     \}\par
71 \par
72     {\cf20 // Forward iteration: returns values via callback, stop if cb returns false}\par
73     {\cf17 template} <{\cf17 typename} F>\par
74     {\cf18 void} for_each_forward(F cb){\cf17  const }\{\par
75         Node* prev = {\cf17 nullptr}; Node* cur = head_;\par
76         {\cf19 while} (cur)\{ {\cf19 if} (!cb(cur->value)) {\cf19 break}; Node* next = XOR(prev, cur->npx); prev = cur; cur = next; \}\par
77     \}\par
78 \par
79     {\cf17 template} <{\cf17 typename} F>\par
80     {\cf18 void} for_each_backward(F cb){\cf17  const }\{\par
81         Node* next = {\cf17 nullptr}; Node* cur = tail_;\par
82         {\cf19 while} (cur)\{ {\cf19 if} (!cb(cur->value)) {\cf19 break}; Node* prev = XOR(cur->npx, next); next = cur; cur = prev; \}\par
83     \}\par
84 \par
85     {\cf20 // Remove first element equal to v; returns true if removed}\par
86     {\cf18 bool} remove_first({\cf17 const} T& v)\{\par
87         Node* prev = {\cf17 nullptr}; Node* cur = head_;\par
88         {\cf19 while} (cur)\{\par
89             {\cf19 if} (cur->value == v)\{\par
90                 Node* next = XOR(prev, cur->npx);\par
91                 {\cf19 if} (prev) prev->npx = XOR(XOR(prev->npx, cur), next);\par
92                 {\cf19 else} head_ = next;\par
93                 {\cf19 if} (next) next->npx = XOR(prev, XOR(cur, next->npx));\par
94                 {\cf19 else} tail_ = prev;\par
95                 {\cf17 delete} cur; --size_; {\cf19 return} {\cf17 true};\par
96             \}\par
97             Node* next = XOR(prev, cur->npx); prev = cur; cur = next;\par
98         \}\par
99         {\cf19 return} {\cf17 false};\par
100     \}\par
101 \};\par
102 \par
103 \} {\cf20 // namespace ds}\par
104 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/LanguageTranslator.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/LanguageTranslator.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/LanguageTranslator.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konsol tabanl\'C4\'B1 dil \'C3\'A7evirici uygulamas\'C4\'B1n\'C4\'B1n ana arabirimi. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <unordered_map>}\par
{\f2 #include <memory>}\par
{\f2 #include <iostream>}\par
{\f2 #include "Persistence.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for LanguageTranslator.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_language_translator_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACM" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::LanguageTranslatorApp}}}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uygulama ak\'C4\'B1\'C5\'9F\'C4\'B1n\'C4\'B1 y\'C3\'B6neten ana s\'C4\'B1n\'C4\'B1f. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konsol tabanl\'C4\'B1 dil \'C3\'A7evirici uygulamas\'C4\'B1n\'C4\'B1n ana arabirimi. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LanguageTranslator.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/LanguageTranslator.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/LanguageTranslator.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
5 {\cf21 #ifndef LANGUAGE_TRANSLATOR_H}\par
6 {\cf21 #define LANGUAGE_TRANSLATOR_H}\par
7 \par
8 {\cf21 #include <string>}\par
9 {\cf21 #include <vector>}\par
10 {\cf21 #include <unordered_map>}\par
11 {\cf21 #include <memory>}\par
12 {\cf21 #include <iostream>}\par
13 {\cf21 #include "{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Persistence.h}}}
"}\par
14 {\cf20 // #include <curl/curl.h>  // Commented out for now - API not implemented yet}\par
15 \par
16 {\cf17 namespace }Coruh\par
17 \{\par
18     {\cf17 namespace }LanguageTranslator\par
19     \{\par
24         {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorApp}}}
\par
25         \{\par
26         {\cf17 private}:\par
27             {\cf20 // Multi-language dictionaries}\par
28             std::unordered_map<std::string, std::unordered_map<std::string, std::string>> wordDictionaries;\par
29             std::unordered_map<std::string, std::unordered_map<std::string, std::string>> phraseDictionaries;\par
30             \par
31             {\cf20 // Language support}\par
32             std::vector<std::string> supportedLanguages;\par
33             std::string currentSourceLanguage;\par
34             std::string currentTargetLanguage;\par
35             \par
36             {\cf20 // Other features}\par
37             std::vector<std::string> commonPhrases;\par
38             std::vector<std::string> learningTips;\par
39             std::unordered_map<std::string, std::string> pronunciationGuide;\par
40             \par
41             std::string currentUser;\par
42             {\cf18 bool} isLoggedIn;\par
43             std::vector<UserProfile> users; {\cf20 // persisted users}\par
44             std::vector<TranslationRecord> history; {\cf20 // translation history}\par
45             \par
46             {\cf20 // API settings}\par
47             std::string apiKey;\par
48             {\cf18 bool} useAPI;\par
49             std::string apiProvider; {\cf20 // "google" or "microsoft"}\par
50 \par
51         {\cf17 public}:\par
53             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 LanguageTranslatorApp}}}
();\par
54             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 ~LanguageTranslatorApp}}}
() = {\cf19 default};\par
55 \par
57             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 run}}}
();\par
59             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 showMainMenu}}}
();\par
61             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 handleUserChoice}}}
({\cf18 int} choice);\par
62 \par
63             {\cf20 // Translation functions}\par
65             std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 translateText}}}
({\cf17 const} std::string& text);\par
67             std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 translateWord}}}
({\cf17 const} std::string& word);\par
69             std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 translatePhrase}}}
({\cf17 const} std::string& phrase);\par
70             \par
71             {\cf20 // Language management}\par
73             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 setSourceLanguage}}}
({\cf17 const} std::string& language);\par
75             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 setTargetLanguage}}}
({\cf17 const} std::string& language);\par
77             std::vector<std::string> {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 getSupportedLanguages}}}
() {\cf17 const};\par
79             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 showLanguageSelection}}}
();\par
81             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 addLanguage}}}
({\cf17 const} std::string& language);\par
82 \par
83             {\cf20 // User management}\par
85             {\cf18 bool} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 login}}}
({\cf17 const} std::string& username, {\cf17 const} std::string& password);\par
87             {\cf18 bool} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 registerUser}}}
({\cf17 const} std::string& username, {\cf17 const} std::string& password);\par
89             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAZ" }{}}{\fldrslt {\cs37\ul\cf2 logout}}}
();\par
91             {\cf18 bool} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 isUserLoggedIn}}}
() {\cf17 const};\par
92             {\cf17 const} std::string& currentUsername(){\cf17  const }\{ {\cf19 return} currentUser; \}\par
93 \par
94             {\cf20 // Phrase library}\par
96             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 showPhraseLibrary}}}
();\par
98             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 addPhrase}}}
({\cf17 const} std::string& phrase, {\cf17 const} std::string& category);\par
99 \par
100             {\cf20 // Learning tips}\par
102             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 showLearningTips}}}
();\par
104             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 addLearningTip}}}
({\cf17 const} std::string& tip);\par
105 \par
106             {\cf20 // Pronunciation guide}\par
108             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABF" }{}}{\fldrslt {\cs37\ul\cf2 showPronunciationGuide}}}
();\par
110             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 addPronunciation}}}
({\cf17 const} std::string& word, {\cf17 const} std::string& guide);\par
111 \par
112             {\cf20 // History}\par
114             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 showHistory}}}
() {\cf17 const};\par
116             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 clearHistory}}}
();\par
117 \par
118             {\cf20 // Data management}\par
120             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 initializeDefaultData}}}
();\par
122             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 saveData}}}
();\par
124             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 loadData}}}
();\par
125             \par
126             {\cf20 // Dictionary management}\par
128             {\cf18 bool} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 loadDictionaryFromFile}}}
({\cf17 const} std::string& sourceLang, {\cf17 const} std::string& targetLang, {\cf17 const} std::string& filename);\par
130             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 loadAllDictionaries}}}
();\par
131             \par
132             {\cf20 // API Translation}\par
134             std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 translateWithGoogleAPI}}}
({\cf17 const} std::string& text, {\cf17 const} std::string& sourceLang, {\cf17 const} std::string& targetLang);\par
136             std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 translateWithMicrosoftAPI}}}
({\cf17 const} std::string& text, {\cf17 const} std::string& sourceLang, {\cf17 const} std::string& targetLang);\par
138             {\cf18 bool} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 isAPIAvailable}}}
();\par
140             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 setAPIKey}}}
({\cf17 const} std::string& key);\par
142             {\cf18 void} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 setAPIMode}}}
({\cf18 bool} useAPI);\par
143         \};\par
144     \}\par
145 \}\par
146 \par
147 {\cf21 #endif }{\cf20 // LANGUAGE_TRANSLATOR_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/Persistence.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/Persistence.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/Persistence.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LanguageTranslator verileri i\'C3\'A7in ikili (binary) kal\'C4\'B1c\'C4\'B1l\'C4\'B1k yard\'C4\'B1mc\'C4\'B1lar\'C4\'B1. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <cstdint>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Persistence.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_persistence_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_persistence_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::UserProfile}}}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kullan\'C4\'B1c\'C4\'B1 profili bilgileri. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::TranslationRecord}}}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'87eviri ge\'C3\'A7mi\'C5\'9Fi kayd\'C4\'B1. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::TipEntry}}}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'96\'C4\'9Frenme ipucu girdisi. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::PhraseEntry}}}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Genel ifade girdisi. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 Coruh::LanguageTranslator::PronunciationEntry}}}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telaffuz girdisi. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Coruh::LanguageTranslator::Persistence::writeUsers} (const std::string &path, const std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 UserProfile}}}
 > &data){\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kullan\'C4\'B1c\'C4\'B1 listesini ikili dosyaya yazar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Coruh::LanguageTranslator::Persistence::readUsers} (const std::string &path, std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 UserProfile}}}
 > &out){\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kullan\'C4\'B1c\'C4\'B1 listesini ikili dosyadan okur. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Coruh::LanguageTranslator::Persistence::writeHistory} (const std::string &path, const std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 TranslationRecord}}}
 > &data){\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'87eviri ge\'C3\'A7mi\'C5\'9Fini yazar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Coruh::LanguageTranslator::Persistence::readHistory} (const std::string &path, std::vector< {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 TranslationRecord}}}
 > &out){\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'87eviri ge\'C3\'A7mi\'C5\'9Fini okur. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b Coruh::LanguageTranslator::Persistence::sha256Hex} (const std::string &input){\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Girdi i\'C3\'A7in hex SHA-256 (ders ama\'C3\'A7l\'C4\'B1 pseudo) d\'C3\'B6nd\'C3\'BCr\'C3\'BCr. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b Coruh::LanguageTranslator::Persistence::randomSalt} (std::size_t len=16){\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rastgele salt \'FCretir. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LanguageTranslator verileri i\'C3\'A7in ikili (binary) kal\'C4\'B1c\'C4\'B1l\'C4\'B1k yard\'C4\'B1mc\'C4\'B1lar\'C4\'B1. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Persistence.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/Persistence.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/LanguageTranslator/header/Persistence.h}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
5 \par
6 {\cf21 #pragma once}\par
7 \par
8 {\cf21 #include <string>}\par
9 {\cf21 #include <vector>}\par
10 {\cf21 #include <cstdint>}\par
11 \par
12 {\cf17 namespace }Coruh \{\par
13 {\cf17 namespace }LanguageTranslator \{\par
14 \par
16 {\cf17 struct }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 UserProfile}}}
 \{\par
17     std::string username;\par
18     std::string salt;\par
19     std::string passwordHash; {\cf20 // hex sha256}\par
20     std::string preferredSource;\par
21     std::string preferredTarget;\par
22 \};\par
23 \par
25 {\cf17 struct }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 TranslationRecord}}}
 \{\par
26     std::string sourceLang;\par
27     std::string targetLang;\par
28     std::string text;\par
29     std::string result;\par
30     std::uint64_t timestamp; {\cf20 // unix seconds}\par
31 \};\par
32 \par
34 {\cf17 struct }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 TipEntry}}}
 \{ std::string tip; \};\par
36 {\cf17 struct }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 PhraseEntry}}}
 \{ std::string phrase; std::string category; \};\par
38 {\cf17 struct }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 PronunciationEntry}}}
 \{ std::string word; std::string ipa; std::string audioPath; \};\par
39 \par
40 {\cf17 namespace }Persistence \{\par
41     {\cf20 // Generic binary vector read/write of simple string-based records}\par
43     {\cf18 bool} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 writeUsers}}}
({\cf17 const} std::string& path, {\cf17 const} std::vector<UserProfile>& data);\par
45     {\cf18 bool} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 readUsers}}}
({\cf17 const} std::string& path, std::vector<UserProfile>& out);\par
46 \par
48     {\cf18 bool} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 writeHistory}}}
({\cf17 const} std::string& path, {\cf17 const} std::vector<TranslationRecord>& data);\par
50     {\cf18 bool} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACH" }{}}{\fldrslt {\cs37\ul\cf2 readHistory}}}
({\cf17 const} std::string& path, std::vector<TranslationRecord>& out);\par
51 \par
52     {\cf18 bool} writeTips({\cf17 const} std::string& path, {\cf17 const} std::vector<TipEntry>& data);\par
53     {\cf18 bool} readTips({\cf17 const} std::string& path, std::vector<TipEntry>& out);\par
54 \par
55     {\cf18 bool} writePhrases({\cf17 const} std::string& path, {\cf17 const} std::vector<PhraseEntry>& data);\par
56     {\cf18 bool} readPhrases({\cf17 const} std::string& path, std::vector<PhraseEntry>& out);\par
57 \par
58     {\cf18 bool} writePronunciations({\cf17 const} std::string& path, {\cf17 const} std::vector<PronunciationEntry>& data);\par
59     {\cf18 bool} readPronunciations({\cf17 const} std::string& path, std::vector<PronunciationEntry>& out);\par
60 \par
61     {\cf20 // Utils}\par
63     std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 sha256Hex}}}
({\cf17 const} std::string& input);\par
65     std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 randomSalt}}}
(std::size_t len = 16);\par
66 \}\par
67 \par
68 \} {\cf20 // namespace LanguageTranslator}\par
69 \} {\cf20 // namespace Coruh}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ast.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/ast.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/ast.h}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <memory>}\par
3 {\cf21 #include <string>}\par
4 {\cf21 #include <vector>}\par
5 \par
6 {\cf17 namespace }translator \{\par
7 \par
8 {\cf17 enum class} ExprKind \{ Number, Variable, Binary \};\par
9 \par
10 {\cf17 struct }Expr \{\par
11     {\cf17 virtual} ~Expr() = {\cf19 default};\par
12     {\cf17 virtual} ExprKind kind() {\cf17 const} = 0;\par
13 \};\par
14 \par
15 {\cf17 struct }NumberExpr : Expr \{\par
16     {\cf18 double} value;\par
17     {\cf17 explicit} NumberExpr({\cf18 double} v) : value(v) \{\}\par
18     ExprKind kind(){\cf17  const override }\{ {\cf19 return} ExprKind::Number; \}\par
19 \};\par
20 \par
21 {\cf17 struct }VariableExpr : Expr \{\par
22     std::string name;\par
23     {\cf17 explicit} VariableExpr(std::string n) : name(std::move(n)) \{\}\par
24     ExprKind kind(){\cf17  const override }\{ {\cf19 return} ExprKind::Variable; \}\par
25 \};\par
26 \par
27 {\cf17 struct }BinaryExpr : Expr \{\par
28     {\cf18 char} op;\par
29     std::unique_ptr<Expr> lhs;\par
30     std::unique_ptr<Expr> rhs;\par
31     BinaryExpr({\cf18 char} op, std::unique_ptr<Expr> l, std::unique_ptr<Expr> r)\par
32         : op(op), lhs(std::move(l)), rhs(std::move(r)) \{\}\par
33     ExprKind kind(){\cf17  const override }\{ {\cf19 return} ExprKind::Binary; \}\par
34 \};\par
35 \par
36 {\cf17 enum class} StmtKind \{ Let, Print, Input, Goto, IfGoto, Gosub, Return \};\par
37 \par
38 {\cf17 struct }Stmt \{ {\cf17 virtual} ~Stmt() = {\cf19 default}; {\cf17 virtual} StmtKind kind() {\cf17 const} = 0; \};\par
39 \par
40 {\cf17 struct }LetStmt : Stmt \{\par
41     std::string name; std::unique_ptr<Expr> expr;\par
42     LetStmt(std::string n, std::unique_ptr<Expr> e) : name(std::move(n)), expr(std::move(e)) \{\}\par
43     StmtKind kind(){\cf17  const override }\{ {\cf19 return} StmtKind::Let; \}\par
44 \};\par
45 \par
46 {\cf17 struct }PrintStmt : Stmt \{\par
47     std::vector<std::unique_ptr<Expr>> items;\par
48     {\cf17 explicit} PrintStmt(std::vector<std::unique_ptr<Expr>> xs) : items(std::move(xs)) \{\}\par
49     StmtKind kind(){\cf17  const override }\{ {\cf19 return} StmtKind::Print; \}\par
50 \};\par
51 \par
52 {\cf17 struct }InputStmt : Stmt \{\par
53     std::string name; {\cf17 explicit} InputStmt(std::string n) : name(std::move(n)) \{\}\par
54     StmtKind kind(){\cf17  const override }\{ {\cf19 return} StmtKind::Input; \}\par
55 \};\par
56 \par
57 {\cf17 struct }GotoStmt : Stmt \{\par
58     {\cf18 int} target; {\cf17 explicit} GotoStmt({\cf18 int} t) : target(t) \{\}\par
59     StmtKind kind(){\cf17  const override }\{ {\cf19 return} StmtKind::Goto; \}\par
60 \};\par
61 \par
62 {\cf17 struct }IfGotoStmt : Stmt \{\par
63     std::unique_ptr<Expr> cond; {\cf18 int} target;\par
64     IfGotoStmt(std::unique_ptr<Expr> c, {\cf18 int} t) : cond(std::move(c)), target(t) \{\}\par
65     StmtKind kind(){\cf17  const override }\{ {\cf19 return} StmtKind::IfGoto; \}\par
66 \};\par
67 \par
68 {\cf17 struct }GosubStmt : Stmt \{\par
69     {\cf18 int} target; {\cf17 explicit} GosubStmt({\cf18 int} t) : target(t) \{\}\par
70     StmtKind kind(){\cf17  const override }\{ {\cf19 return} StmtKind::Gosub; \}\par
71 \};\par
72 \par
73 {\cf17 struct }ReturnStmt : Stmt \{\par
74     StmtKind kind(){\cf17  const override }\{ {\cf19 return} StmtKind::Return; \}\par
75 \};\par
76 \par
77 {\cf17 struct }Program \{\par
78     {\cf20 // Parallel arrays: one statement per label index}\par
79     std::vector<int> labels; {\cf20 // e.g., 10, 20, 30}\par
80     std::vector<std::unique_ptr<Stmt>> stmts;\par
81     {\cf20 // Label -> index map will be provided via lookup helper.}\par
82 \};\par
83 \par
84 \} {\cf20 // namespace translator}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cfg.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/cfg.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/cfg.h}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include "ds/graph.h"}\par
3 {\cf21 #include "translator/ast.h"}\par
4 {\cf21 #include <unordered_map>}\par
5 \par
6 {\cf17 namespace }translator \{\par
7 \par
8 {\cf17 struct }CFG \{\par
9     ds::Graph g;\par
10     {\cf20 // label -> index mapping for convenience}\par
11     std::unordered_map<int, int> label_to_index;\par
12 \};\par
13 \par
14 {\cf17 inline} CFG build_cfg({\cf17 const} Program& p)\{\par
15     CFG cfg; {\cf18 int} n = {\cf17 static_cast<}{\cf18 int}{\cf17 >}(p.stmts.size()); cfg.g.resize(n);\par
16     {\cf19 for} ({\cf18 int} i=0;i<n;i++)\{ cfg.label_to_index[p.labels[i]] = i; \}\par
17     {\cf17 auto} next_index = [&]({\cf18 int} i)->{\cf18 int}\{ {\cf19 return} (i+1<n)?(i+1):-1; \};\par
18     {\cf19 for} ({\cf18 int} i=0;i<n;i++)\{\par
19         {\cf17 auto}& s = p.stmts[i];\par
20         {\cf18 int} ni = next_index(i);\par
21         {\cf19 switch} (s->kind())\{\par
22             {\cf19 case} StmtKind::Goto: \{\par
23                 {\cf18 int} tgt = {\cf17 static_cast<}GotoStmt*{\cf17 >}(s.get())->target;\par
24                 {\cf17 auto} it = cfg.label_to_index.find(tgt);\par
25                 {\cf19 if} (it!=cfg.label_to_index.end()) cfg.g.add_edge(i, it->second);\par
26                 {\cf19 break};\par
27             \}\par
28             {\cf19 case} StmtKind::IfGoto: \{\par
29                 {\cf18 int} tgt = {\cf17 static_cast<}IfGotoStmt*{\cf17 >}(s.get())->target;\par
30                 {\cf17 auto} it = cfg.label_to_index.find(tgt);\par
31                 {\cf19 if} (it!=cfg.label_to_index.end()) cfg.g.add_edge(i, it->second);\par
32                 {\cf19 if} (ni!=-1) cfg.g.add_edge(i, ni);\par
33                 {\cf19 break};\par
34             \}\par
35             {\cf19 case} StmtKind::Gosub: \{\par
36                 {\cf18 int} tgt = {\cf17 static_cast<}GosubStmt*{\cf17 >}(s.get())->target;\par
37                 {\cf17 auto} it = cfg.label_to_index.find(tgt);\par
38                 {\cf19 if} (it!=cfg.label_to_index.end()) cfg.g.add_edge(i, it->second);\par
39                 {\cf19 if} (ni!=-1) cfg.g.add_edge(i, ni);\par
40                 {\cf19 break};\par
41             \}\par
42             {\cf19 case} StmtKind::Return: \{\par
43                 {\cf20 // No default successor}\par
44                 {\cf19 break};\par
45             \}\par
46             {\cf19 default}: \{\par
47                 {\cf19 if} (ni!=-1) cfg.g.add_edge(i, ni);\par
48                 {\cf19 break};\par
49             \}\par
50         \}\par
51     \}\par
52     {\cf19 return} cfg;\par
53 \}\par
54 \par
55 \} {\cf20 // namespace translator}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
codegen.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/codegen.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/codegen.h}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <string>}\par
3 {\cf21 #include "translator/ast.h"}\par
4 \par
5 {\cf17 namespace }translator \{\par
6 \par
7 {\cf17 class }Codegen \{\par
8 {\cf17 public}:\par
9     {\cf17 static} std::string emit_cpp({\cf17 const} Program& p);\par
10 \};\par
11 \par
12 \} {\cf20 // namespace translator}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lexer.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/lexer.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/lexer.h}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <string>}\par
3 {\cf21 #include <vector>}\par
4 {\cf21 #include "translator/token.h"}\par
5 \par
6 {\cf17 namespace }translator \{\par
7 \par
8 {\cf17 class }Lexer \{\par
9     {\cf17 const} std::string src_;\par
10 {\cf17 public}:\par
11     {\cf17 explicit} Lexer(std::string src): src_(std::move(src)) \{\}\par
12     std::vector<Token> tokenize() {\cf17 const};\par
13 \};\par
14 \par
15 \} {\cf20 // namespace translator}\par
16 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parser.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/parser.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/parser.h}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <vector>}\par
3 {\cf21 #include <memory>}\par
4 {\cf21 #include <cstddef>}\par
5 {\cf21 #include "translator/token.h"}\par
6 {\cf21 #include "translator/ast.h"}\par
7 \par
8 {\cf17 namespace }translator \{\par
9 \par
10 {\cf17 class }Parser \{\par
11     {\cf17 const} std::vector<Token> tokens_;\par
12     {\cf17 mutable} std::size_t pos_ = 0;\par
13 \par
14     {\cf17 const} Token& peek(){\cf17  const }\{ {\cf19 return} tokens_[pos_]; \}\par
15     {\cf17 const} Token& advance(){\cf17  const }\{ {\cf19 return} tokens_[pos_++]; \}\par
16     {\cf18 bool} match(TokenType t){\cf17  const }\{ {\cf19 if} (peek().type == t) \{ ++pos_; {\cf19 return} {\cf17 true}; \} {\cf19 return} {\cf17 false}; \}\par
17     {\cf18 bool} at_eof(){\cf17  const }\{ {\cf19 return} peek().type == TokenType::Eof; \}\par
18 \par
19     {\cf20 // Parsing helpers}\par
20     std::unique_ptr<Expr> parse_expression() {\cf17 const};\par
21     std::unique_ptr<Expr> parse_term() {\cf17 const};\par
22     std::unique_ptr<Expr> parse_factor() {\cf17 const};\par
23 \par
24     std::unique_ptr<Stmt> parse_statement({\cf18 int}& outLabel) {\cf17 const};\par
25 \par
26 {\cf17 public}:\par
27     {\cf17 explicit} Parser(std::vector<Token> toks): tokens_(std::move(toks)) \{\}\par
28     Program parseProgram() {\cf17 const};\par
29 \};\par
30 \par
31 \} {\cf20 // namespace translator}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
symbol_table.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/symbol_table.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/symbol_table.h}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <string>}\par
3 {\cf21 #include "ds/hash_table.h"}\par
4 \par
5 {\cf17 namespace }translator \{\par
6 \par
7 {\cf17 class }SymbolTable \{\par
8     ds::HashTable<std::string, double> table_;\par
9 {\cf17 public}:\par
10     {\cf18 bool} define({\cf17 const} std::string& name, {\cf18 double} value)\{ {\cf19 return} table_.insert(name, value); \}\par
11     {\cf18 bool} assign({\cf17 const} std::string& name, {\cf18 double} value)\{ {\cf19 return} table_.insert(name, value); \}\par
12     {\cf17 const} {\cf18 double}* lookup({\cf17 const} std::string& name){\cf17  const }\{ {\cf19 return} table_.find(name); \}\par
13 \};\par
14 \par
15 \} {\cf20 // namespace translator}\par
16 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
token.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/token.h}
{\xe \v C:/Users/ahmet/OneDrive/Masa\'FCst\'FC/DataStructure/cen207-2025-2026-5-Mustafa-Yildirimm-cpp/src/translator/token.h}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <string>}\par
3 \par
4 {\cf17 namespace }translator \{\par
5 \par
6 {\cf17 enum class} TokenType \{\par
7     Identifier, Number, String,\par
8     KW_LET, KW_PRINT, KW_INPUT, KW_IF, KW_THEN, KW_GOTO, KW_FOR, KW_TO, KW_NEXT, KW_GOSUB, KW_RETURN,\par
9     Plus, Minus, Star, Slash, Assign, LParen, RParen, Comma, Newline, Eof\par
10 \};\par
11 \par
12 {\cf17 struct }Token \{ TokenType type; std::string lexeme; {\cf18 int} line; \};\par
13 \par
14 \} {\cf20 // namespace translator}\par
15 \par
}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
